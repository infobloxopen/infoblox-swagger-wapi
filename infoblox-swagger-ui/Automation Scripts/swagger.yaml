openapi: 3.0.0
info:
	description: "Sample WAPI Documentation"
	version: "1.0.1"
	title: "Infoblox WAPI"

	license:
		name: Infoblox License
		url: https://www.infoblox.com/

	contact:
		name: "Krishna"
		email: "kvasudevan@infoblox.com"

servers:
	- url: 'https://10.196.205.43' 
	- url: 'https://10.196.205.40' 

paths:
	/wapi/v2.10/grid:
		get:
			tags: 
 				- grid
			parameters:
				- name: _return_fields
					in: query
					required: false
					description: Enter the field names followed by comma
					schema:
						type: string
				- name: _return_fields+
					in: query
					required: false
					description: Enter the field names followed by comma, this returns the required fields along wiht the default fields
					schema:
						type: string
				- name: _max_results
					in: query
					required: false
					description: Enter the number of results to be fetched
					schema:
						type: integer
						minimum: 1
				- name: _return_as_object
					in: query
					required: false
					description: Select 1 if result is required as a object
					schema:
						type: integer
						enum: [0,1]
						default: 0
				- name: _paging
					in: query
					required: false
					description: Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.
					schema:
						type: integer
						enum: [0,1]
						default: 0
				- name: _page_id
					in: query
					required: false
					description: Enter the page ID for fetching next page
					schema:
						type: string
				- name: name
					in: query
					required: false
					description: Enter the value of the field
					schema:
						type: string

			responses:
				'200':
					description: "OK"
					content:
						application/json:
							schema:
								$ref: "#/components/schemas/grid"
			security:
 				- basicAuth: []

	/wapi/v2.10/grid/{grid_reference}:
		get:
			tags: 
 				- grid
			parameters:
				- name: "grid_reference"
					in: path
					required: true
					description: "Enter the reference for grid"
					schema:
						type: string
						example: "resourceID:resourceName"
				- name: _return_fields
					in: query
					required: false
					description: Enter the field names followed by comma
					schema:
						type: string
				- name: _return_fields+
					in: query
					required: false
					description: Enter the field names followed by comma, this returns the required fields along with the default fields
					schema:
						type: string
				- name: _return_as_object
					in: query
					required: false
					description: Select 1 if result is required as a object
					schema:
						type: integer
						enum: [0,1]
						default: 0

			responses:
				'200':
					description: "OK"
					content:
						application/json:
							schema:
								$ref: "#/components/schemas/grid"
			security:
 				- basicAuth: []

		post:
			description: Function calls
			tags: 
 				- grid
			parameters:
				- name: "grid_reference"
					in: path
					required: true
					description: "Enter the reference for grid"
					schema:
						type: string
						example: "resourceID:resourceName"
				- name: _function
					in: query
					required: true
					description: Select the function
					schema:
						type: string
						enum: ['control_ip_address', 'empty_recycle_bin', 'generate_tsig_key', 'get_all_template_vendor_id', 'get_grid_revert_status', 'get_rpz_threat_details', 'get_template_schema_versions', 'join', 'join_mgm', 'leave_mgm', 'member_upgrade', 'publish_changes', 'query_fqdn_on_member', 'requestrestartservicestatus', 'restartservices', 'skip_member_upgrade', 'start_discovery', 'test_syslog_backup_server_connection', 'test_syslog_connection', 'upgrade', 'upgrade_group_now', 'upload_keytab']
			requestBody:
				description: Enter the request body here
				required: true
				content:
					application/json:
						schema:
							type: object
							properties: {}

			responses:
				'200':
					description: "OK"
					content:
						application/json:
							schema:
								type: object
								properties: 
									control_ip_address:
										type: string

										example: {'network_view': 'string', 'exclude': 'bool', 'addresses': 'string'}

									generate_tsig_key:
										type: string

										example: {'tsig_key_algorithm': ['HMAC-MD5', 'HMAC-SHA256'], 'tsig_key_size': ['128', '256', '512']}

									get_all_template_vendor_id:
										type: string

										example: {'outbound_type': ['REST', 'DXL', 'SYSLOG']}

									get_rpz_threat_details:
										type: string

										example: {'rpz_rule_name': 'string'}

									get_template_schema_versions:
										type: string

										example: {'schema_type': ['REST_ENDPOINT', 'REST_EVENT']}

									join:
										type: string

										example: {'grid_name': 'string', 'master': 'string', 'shared_secret': 'string'}

									join_mgm:
										type: string

										example: {'file_token': 'string', 'join_token': 'string', 'sgm_address': 'string', 'sgm_port': 'uint', 'use_mgmt_port': 'bool', 'grid_name': 'string'}

									member_upgrade:
										type: string

										example: {'member': 'string', 'action': ['UPGRADE', 'REVERT']}

									publish_changes:
										type: string

										example: {'services': ['ALL', 'ATP'], 'member': 'string', 'member_order': ['SIMULTANEOUSLY', 'SEQUENTIALLY'], 'sequential_delay': 'uint'}

									query_fqdn_on_member:
										type: string

										example: {'fqdn': 'string', 'member': 'string', 'name_server': 'string', 'record_type': ['ANY', 'A', 'AAAA', 'CNAME', 'DNAME', 'MX', 'NAPTR', 'NS', 'PTR', 'SRV', 'TXT', 'AXFR'], 'recursive_query': 'bool'}

									requestrestartservicestatus:
										type: string

										example: {'service_option': ['ALL', 'DHCP', 'DNS']}

									restartservices:
										type: string

										example: {'members': 'string', 'groups': 'string', 'services': ['ALL', 'DNS', 'DHCP', 'DHCPV4', 'DHCPV6'], 'mode': ['GROUPED', 'SEQUENTIAL', 'SIMULTANEOUS'], 'restart_option': ['FORCE_RESTART', 'RESTART_IF_NEEDED'], 'user_name': 'string', 'member_order': ['SEQUENTIALLY', 'SIMULTANEOUSLY'], 'service_option': ['ALL', 'DHCP', 'DNS'], 'sequential_delay': 'uint'}

									skip_member_upgrade:
										type: string

										example: {'member': 'string'}

									start_discovery:
										type: string

										example: {'objects': 'string'}

									test_syslog_backup_server_connection:
										type: string

										example: {'syslog_backup_server': 'extsyslogbackupserver', 'member': 'string'}

									test_syslog_connection:
										type: string

										example: {'syslog_server': 'syslogserver'}

									upgrade:
										type: string

										example: {'action': ['UPGRADE_PAUSE', 'UPGRADE_RESUME', 'DISTRIBUTION_PAUSE', 'DISTRIBUTION_RESUME', 'DISTRIBUTION_START', 'DISTRIBUTION_STOP', 'DOWNGRADE', 'REVERT', 'UPGRADE', 'UPGRADE_TEST_START', 'UPGRADE_TEST_STOP', 'UPLOAD']}

									upgrade_group_now:
										type: string

										example: {'upgrade_group': 'string'}

									upload_keytab:
										type: string

										example: {'token': 'string'}

			security:
 				- basicAuth: []

		put:
			description: Update the grid resource
			tags: 
 				- grid
			parameters:
				- name: "grid_reference"
					in: path
					required: true
					description: "Enter the reference for grid"
					schema:
						type: string
						example: "resourceID:resourceName"
				- name: _return_fields
					in: query
					required: false
					description: Enter the field names followed by comma
					schema:
						type: string
			requestBody:
				description: Enter the request here
				required: true
				content:
					application/json:
						schema:
							type: object
							properties:
								allow_recursive_deletion:
									type: string
									example: ['NOBODY', 'ALL', 'SUPERUSERS']
								audit_log_format:
									type: string
									example: ['DETAILED', 'BRIEF', 'WAPI_DETAILED']
