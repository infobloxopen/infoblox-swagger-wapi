{
  "info": {
    "version": "v2.7", 
    "contact": {
      "name": "Krishna", 
      "email": "kvasudevan@infoblox.com"
    }, 
    "description": "Sample WAPI Documentation", 
    "license": {
      "url": "https://www.infoblox.com/", 
      "name": "Infoblox License"
    }, 
    "title": "Infoblox WAPI"
  }, 
  "paths": {
    "/wapi/v2.7/ciscoise:endpoint/{ciscoise:endpoint_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ciscoise_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for ciscoise:endpoint", 
            "required": true, 
            "name": "ciscoise:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "ciscoise:endpoint"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "publish_settings": {
                    "type": "string", 
                    "example": "ciscoise:publishsetting"
                  }, 
                  "secondary_address": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "network_view": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "subscribe_settings": {
                    "type": "string", 
                    "example": "ciscoise:subscribesetting"
                  }, 
                  "address": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "subscribing_member": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "bulk_download_certificate_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "disable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "version": {
                    "type": "string", 
                    "example": "[u'VERSION_1_3', u'VERSION_1_4', u'VERSION_2_0']"
                  }, 
                  "client_certificate_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "connection_timeout": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "type": {
                    "type": "string", 
                    "example": "[u'TYPE_CISCO']"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the ciscoise:endpoint resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {}
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for ciscoise:endpoint", 
            "required": true, 
            "name": "ciscoise:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "test_connection"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "ciscoise:endpoint"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the ciscoise:endpoint resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for ciscoise:endpoint", 
            "required": true, 
            "name": "ciscoise:endpoint_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "ciscoise:endpoint"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ciscoise_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for ciscoise:endpoint", 
            "required": true, 
            "name": "ciscoise:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "ciscoise:endpoint"
        ]
      }
    }, 
    "/wapi/v2.7/allendpoints": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allendpoints"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "subscribing_member", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "version", 
            "in": "query"
          }
        ], 
        "tags": [
          "allendpoints"
        ]
      }
    }, 
    "/wapi/v2.7/ciscoise:endpoint": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "publish_settings": {
                    "type": "string", 
                    "example": "ciscoise:publishsetting"
                  }, 
                  "secondary_address": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "network_view": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "subscribe_settings": {
                    "type": "string", 
                    "example": "ciscoise:subscribesetting"
                  }, 
                  "address": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "subscribing_member": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "bulk_download_certificate_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "disable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "version": {
                    "type": "string", 
                    "example": "[u'VERSION_1_3', u'VERSION_1_4', u'VERSION_2_0']"
                  }, 
                  "client_certificate_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "connection_timeout": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "type": {
                    "type": "string", 
                    "example": "[u'TYPE_CISCO']"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ciscoise_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "ciscoise:endpoint"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ciscoise_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "network_view", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "resolved_address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "resolved_secondary_address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "secondary_address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "subscribing_member", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "version", 
            "in": "query"
          }
        ], 
        "tags": [
          "ciscoise:endpoint"
        ]
      }
    }, 
    "/wapi/v2.7/notification:rest:template": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rest_template"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "outbound_type", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rest:template"
        ]
      }
    }, 
    "/wapi/v2.7/dxl:endpoint": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "log_level": {
                    "type": "string", 
                    "example": "[u'ERROR', u'WARNING', u'INFO', u'DEBUG']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "wapi_user_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "client_certificate_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "outbound_member_type": {
                    "type": "string", 
                    "example": "[u'MEMBER', u'GM']"
                  }, 
                  "wapi_user_password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "brokers_import_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vendor_identifier": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "disable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "brokers": {
                    "type": "string", 
                    "example": "[{u'port': u'uint', u'host_name': u'string', u'unique_id': u'string', u'address': u'string'}]"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "outbound_members": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "template_instance": {
                    "type": "string", 
                    "example": "notification:rest:templateinstance"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dxl_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "dxl:endpoint"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dxl_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "log_level", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "outbound_member_type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vendor_identifier", 
            "in": "query"
          }
        ], 
        "tags": [
          "dxl:endpoint"
        ]
      }
    }, 
    "/wapi/v2.7/notification:rule": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "event_deduplication_lookback_period": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "enable_event_deduplication_log": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "event_type": {
                    "type": "string", 
                    "example": "[u'DNS_RPZ', u'DHCP_LEASES', u'SECURITY_ADP', u'IPAM', u'ANALYTICS_DNS_TUNNEL', u'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV4', u'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV6', u'DB_CHANGE_DHCP_NETWORK_IPV4', u'DB_CHANGE_DHCP_NETWORK_IPV6', u'DB_CHANGE_DHCP_RANGE_IPV4', u'DB_CHANGE_DHCP_RANGE_IPV6', u'DB_CHANGE_DNS_HOST_ADDRESS_IPV4', u'DB_CHANGE_DNS_HOST_ADDRESS_IPV6']"
                  }, 
                  "expression_list": {
                    "type": "string", 
                    "example": "[{u'op2_type': u'enum', u'op1_type': u'enum', u'op1': u'enum', u'op2': u'string', u'op': u'enum'}]"
                  }, 
                  "notification_target": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enable_event_deduplication": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "all_members": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "selected_members": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "event_deduplication_fields": {
                    "type": "string", 
                    "example": "[u'SOURCE_IP', u'QUERY_NAME', u'RPZ_POLICY', u'RPZ_TYPE', u'QUERY_TYPE', u'NETWORK', u'NETWORK_VIEW']"
                  }, 
                  "disable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "publish_settings": {
                    "type": "string", 
                    "example": "ciscoise:publishsetting"
                  }, 
                  "template_instance": {
                    "type": "string", 
                    "example": "notification:rest:templateinstance"
                  }, 
                  "use_publish_settings": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "notification_action": {
                    "type": "string", 
                    "example": "[u'CISCOISE_QUARANTINE', u'CISCOISE_PUBLISH', u'RESTAPI_TEMPLATE_INSTANCE']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rule"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rule"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rule"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "event_type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "notification_action", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "notification_target", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rule"
        ]
      }
    }, 
    "/wapi/v2.7/dxl:endpoint/{dxl:endpoint_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dxl_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for dxl:endpoint", 
            "required": true, 
            "name": "dxl:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "dxl:endpoint"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "log_level": {
                    "type": "string", 
                    "example": "[u'ERROR', u'WARNING', u'INFO', u'DEBUG']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "wapi_user_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "client_certificate_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "outbound_member_type": {
                    "type": "string", 
                    "example": "[u'MEMBER', u'GM']"
                  }, 
                  "wapi_user_password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "brokers_import_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vendor_identifier": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "disable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "brokers": {
                    "type": "string", 
                    "example": "[{u'port': u'uint', u'host_name': u'string', u'unique_id': u'string', u'address': u'string'}]"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "outbound_members": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "template_instance": {
                    "type": "string", 
                    "example": "notification:rest:templateinstance"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the dxl:endpoint resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "test_broker_connectivity": {
                      "type": "string", 
                      "example": {
                        "endpoint": "string", 
                        "broker": "dxl:endpoint:broker", 
                        "client_certificate_token": "string"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for dxl:endpoint", 
            "required": true, 
            "name": "dxl:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "clear_outbound_worker_log", 
                "test_broker_connectivity"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "dxl:endpoint"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the dxl:endpoint resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for dxl:endpoint", 
            "required": true, 
            "name": "dxl:endpoint_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "dxl:endpoint"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dxl_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for dxl:endpoint", 
            "required": true, 
            "name": "dxl:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "dxl:endpoint"
        ]
      }
    }, 
    "/wapi/v2.7/allendpoints/{allendpoints_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allendpoints"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for allendpoints", 
            "required": true, 
            "name": "allendpoints_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "allendpoints"
        ]
      }
    }, 
    "/wapi/v2.7/notification:rest:endpoint": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "username": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "log_level": {
                    "type": "string", 
                    "example": "[u'ERROR', u'WARNING', u'INFO', u'DEBUG']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vendor_identifier": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "client_certificate_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "outbound_member_type": {
                    "type": "string", 
                    "example": "[u'MEMBER', u'GM']"
                  }, 
                  "uri": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "wapi_user_password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "sync_disabled": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "wapi_user_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "timeout": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "server_cert_validation": {
                    "type": "string", 
                    "example": "[u'NO_VALIDATION', u'CA_CERT', u'CA_CERT_NO_HOSTNAME']"
                  }, 
                  "password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "outbound_members": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "template_instance": {
                    "type": "string", 
                    "example": "notification:rest:templateinstance"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rest_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rest:endpoint"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rest_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "log_level", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "outbound_member_type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "uri", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vendor_identifier", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rest:endpoint"
        ]
      }
    }, 
    "/wapi/v2.7/notification:rest:template/{notification:rest:template_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rest_template"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rest:template", 
            "required": true, 
            "name": "notification:rest:template_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rest:template"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "content": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the notification:rest:template resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the notification:rest:template resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rest:template", 
            "required": true, 
            "name": "notification:rest:template_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "notification:rest:template"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rest_template"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rest:template", 
            "required": true, 
            "name": "notification:rest:template_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rest:template"
        ]
      }
    }, 
    "/wapi/v2.7/notification:rule/{notification:rule_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rule"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rule", 
            "required": true, 
            "name": "notification:rule_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rule"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "event_deduplication_lookback_period": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "enable_event_deduplication_log": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "event_type": {
                    "type": "string", 
                    "example": "[u'DNS_RPZ', u'DHCP_LEASES', u'SECURITY_ADP', u'IPAM', u'ANALYTICS_DNS_TUNNEL', u'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV4', u'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV6', u'DB_CHANGE_DHCP_NETWORK_IPV4', u'DB_CHANGE_DHCP_NETWORK_IPV6', u'DB_CHANGE_DHCP_RANGE_IPV4', u'DB_CHANGE_DHCP_RANGE_IPV6', u'DB_CHANGE_DNS_HOST_ADDRESS_IPV4', u'DB_CHANGE_DNS_HOST_ADDRESS_IPV6']"
                  }, 
                  "expression_list": {
                    "type": "string", 
                    "example": "[{u'op2_type': u'enum', u'op1_type': u'enum', u'op1': u'enum', u'op2': u'string', u'op': u'enum'}]"
                  }, 
                  "notification_target": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enable_event_deduplication": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "all_members": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "selected_members": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "event_deduplication_fields": {
                    "type": "string", 
                    "example": "[u'SOURCE_IP', u'QUERY_NAME', u'RPZ_POLICY', u'RPZ_TYPE', u'QUERY_TYPE', u'NETWORK', u'NETWORK_VIEW']"
                  }, 
                  "disable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "publish_settings": {
                    "type": "string", 
                    "example": "ciscoise:publishsetting"
                  }, 
                  "use_publish_settings": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "notification_action": {
                    "type": "string", 
                    "example": "[u'CISCOISE_QUARANTINE', u'CISCOISE_PUBLISH', u'RESTAPI_TEMPLATE_INSTANCE']"
                  }, 
                  "template_instance": {
                    "type": "string", 
                    "example": "notification:rest:templateinstance"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the notification:rule resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "trigger_outbound": {
                      "type": "string", 
                      "example": {
                        "event_text": "string"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rule", 
            "required": true, 
            "name": "notification:rule_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "trigger_outbound"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rule"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the notification:rule resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rule", 
            "required": true, 
            "name": "notification:rule_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "notification:rule"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rule"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rule", 
            "required": true, 
            "name": "notification:rule_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rule"
        ]
      }
    }, 
    "/wapi/v2.7/notification:rest:endpoint/{notification:rest:endpoint_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rest_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rest:endpoint", 
            "required": true, 
            "name": "notification:rest:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rest:endpoint"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "username": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "log_level": {
                    "type": "string", 
                    "example": "[u'ERROR', u'WARNING', u'INFO', u'DEBUG']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vendor_identifier": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "client_certificate_token": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "outbound_member_type": {
                    "type": "string", 
                    "example": "[u'MEMBER', u'GM']"
                  }, 
                  "uri": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "wapi_user_password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "sync_disabled": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "wapi_user_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "timeout": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "server_cert_validation": {
                    "type": "string", 
                    "example": "[u'NO_VALIDATION', u'CA_CERT', u'CA_CERT_NO_HOSTNAME']"
                  }, 
                  "password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "outbound_members": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "template_instance": {
                    "type": "string", 
                    "example": "notification:rest:templateinstance"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the notification:rest:endpoint resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {}
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rest:endpoint", 
            "required": true, 
            "name": "notification:rest:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "clear_outbound_worker_log", 
                "test_connection"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rest:endpoint"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the notification:rest:endpoint resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rest:endpoint", 
            "required": true, 
            "name": "notification:rest:endpoint_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "notification:rest:endpoint"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notification_rest_endpoint"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for notification:rest:endpoint", 
            "required": true, 
            "name": "notification:rest:endpoint_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "notification:rest:endpoint"
        ]
      }
    }
  }, 
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic", 
        "type": "http"
      }
    }, 
    "schemas": {
      "notification_rest_template": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The comment for this REST API template."
          }, 
          "template_type": {
            "enum": [
              "REST_ENDPOINT", 
              "REST_EVENT"
            ], 
            "type": "string", 
            "description": "The template type."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of a notification REST template."
          }, 
          "parameters": {
            "enum": [
              "notification:rest:templateparameter"
            ], 
            "type": "string", 
            "description": "The notification REST template parameters."
          }, 
          "action_name": {
            "type": "string", 
            "description": "The action name."
          }, 
          "content": {
            "type": "string", 
            "description": "The JSON formatted content of a template. The data passed by content creates parameters for a template."
          }, 
          "vendor_identifier": {
            "type": "string", 
            "description": "The vendor identifier."
          }, 
          "outbound_type": {
            "enum": [
              "DXL", 
              "REST"
            ], 
            "type": "string", 
            "description": "The outbound type for the template."
          }, 
          "added_on": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time stamp when a template was added."
          }, 
          "event_type": {
            "enum": [
              "DNS_RPZ", 
              "DHCP_LEASE", 
              "ANALYTICS_DNS_TUNNEL"
            ], 
            "type": "string", 
            "description": "The event type."
          }
        }
      }, 
      "allendpoints": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The Grid endpoint descriptive comment."
          }, 
          "version": {
            "type": "string", 
            "description": "The Grid endpoint version."
          }, 
          "subscribing_member": {
            "type": "string", 
            "description": "The name of the Grid Member object that is serving Grid endpoint."
          }, 
          "disable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether a Grid endpoint is disabled or not. When this is set to False, the Grid endpoint is enabled."
          }, 
          "address": {
            "type": "string", 
            "description": "The Grid endpoint IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN)."
          }, 
          "type": {
            "enum": [
              "TYPE_CISCO", 
              "TYPE_RESTAPI", 
              "TYPE_DXL"
            ], 
            "type": "string", 
            "description": "The Grid endpoint type."
          }
        }
      }, 
      "notification_rule": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The notification rule descriptive comment."
          }, 
          "event_deduplication_lookback_period": {
            "type": "integer", 
            "example": "integer", 
            "description": "The lookback period for the notification rule for event deduplication."
          }, 
          "enable_event_deduplication_log": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the notification rule for the event deduplication syslog is enabled."
          }, 
          "event_type": {
            "enum": [
              "DNS_RPZ", 
              "DHCP_LEASES", 
              "SECURITY_ADP", 
              "IPAM", 
              "ANALYTICS_DNS_TUNNEL", 
              "DB_CHANGE_DHCP_FIXED_ADDRESS_IPV4", 
              "DB_CHANGE_DHCP_FIXED_ADDRESS_IPV6", 
              "DB_CHANGE_DHCP_NETWORK_IPV4", 
              "DB_CHANGE_DHCP_NETWORK_IPV6", 
              "DB_CHANGE_DHCP_RANGE_IPV4", 
              "DB_CHANGE_DHCP_RANGE_IPV6", 
              "DB_CHANGE_DNS_HOST_ADDRESS_IPV4", 
              "DB_CHANGE_DNS_HOST_ADDRESS_IPV6"
            ], 
            "type": "string", 
            "description": "The notification rule event type."
          }, 
          "expression_list": {
            "enum": [
              "notification:ruleexpressionop"
            ], 
            "type": "string", 
            "description": "The notification rule expression list."
          }, 
          "notification_target": {
            "type": "string", 
            "description": "The notification target."
          }, 
          "enable_event_deduplication": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the notification rule for event deduplication is enabled. Note that to enable event deduplication, you must set at least one deduplication field."
          }, 
          "all_members": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the notification rule is applied on all members or not. When this is set to False, the notification rule is applied only on selected_members."
          }, 
          "selected_members": {
            "type": "string", 
            "description": "The list of the members on which the notification rule is applied."
          }, 
          "event_deduplication_fields": {
            "enum": [
              "SOURCE_IP", 
              "QUERY_NAME", 
              "RPZ_POLICY", 
              "RPZ_TYPE", 
              "QUERY_TYPE", 
              "NETWORK", 
              "NETWORK_VIEW"
            ], 
            "type": "string", 
            "description": "The list of fields that must be used in the notification rule for event deduplication."
          }, 
          "disable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether a notification rule is disabled or not. When this is set to False, the notification rule is enabled."
          }, 
          "publish_settings": {
            "enum": [
              "ciscoise:publishsetting"
            ], 
            "type": "string", 
            "description": "The publish settings."
          }, 
          "template_instance": {
            "enum": [
              "notification:rest:templateinstance"
            ], 
            "type": "string", 
            "description": "The notification REST template instance."
          }, 
          "use_publish_settings": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: publish_settings"
          }, 
          "notification_action": {
            "enum": [
              "CISCOISE_QUARANTINE", 
              "CISCOISE_PUBLISH", 
              "RESTAPI_TEMPLATE_INSTANCE"
            ], 
            "type": "string", 
            "description": "The notification rule action is applied if expression list evaluates to True."
          }, 
          "name": {
            "type": "string", 
            "description": "The notification rule name."
          }
        }
      }, 
      "dxl_endpoint": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The comment of a DXL endpoint."
          }, 
          "log_level": {
            "enum": [
              "ERROR", 
              "WARNING", 
              "INFO", 
              "DEBUG"
            ], 
            "type": "string", 
            "description": "The log level for a DXL endpoint."
          }, 
          "client_certificate_valid_to": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the client certificate for a DXL endpoint expires."
          }, 
          "outbound_member_type": {
            "enum": [
              "MEMBER", 
              "GM"
            ], 
            "type": "string", 
            "description": "The outbound member that will generate events."
          }, 
          "client_certificate_subject": {
            "type": "string", 
            "description": "The client certificate subject of a DXL endpoint."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "client_certificate_valid_from": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when client certificate for a DXL endpoint was created."
          }, 
          "wapi_user_password": {
            "type": "string", 
            "description": "The user password for WAPI integration."
          }, 
          "template_instance": {
            "enum": [
              "notification:rest:templateinstance"
            ], 
            "type": "string", 
            "description": "The DXL template instance. You cannot change the parameters of the DXL endpoint template instance."
          }, 
          "brokers_import_token": {
            "type": "string", 
            "description": "The token returned by the uploadinit function call in object fileop for a DXL broker configuration file. Note that you cannot specify brokers and brokers_import_token at the same time."
          }, 
          "vendor_identifier": {
            "type": "string", 
            "description": "The vendor identifier."
          }, 
          "disable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether a DXL endpoint is disabled."
          }, 
          "brokers": {
            "enum": [
              "dxl:endpoint:broker"
            ], 
            "type": "string", 
            "description": "The list of DXL endpoint brokers. Note that you cannot specify brokers and brokers_import_token at the same time."
          }, 
          "client_certificate_token": {
            "type": "string", 
            "description": "The token returned by the uploadinit function call in object fileop for a DXL endpoint client certificate."
          }, 
          "outbound_members": {
            "type": "string", 
            "description": "The list of members for outbound events."
          }, 
          "wapi_user_name": {
            "type": "string", 
            "description": "The user name for WAPI integration."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of a DXL endpoint."
          }
        }
      }, 
      "notification_rest_endpoint": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The comment of a notification REST endpoint."
          }, 
          "username": {
            "type": "string", 
            "description": "The username of the user that can log into a notification REST endpoint."
          }, 
          "log_level": {
            "enum": [
              "ERROR", 
              "WARNING", 
              "INFO", 
              "DEBUG"
            ], 
            "type": "string", 
            "description": "The log level for a notification REST endpoint."
          }, 
          "client_certificate_valid_to": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when client certificate for a notification REST endpoint expires."
          }, 
          "wapi_user_password": {
            "type": "string", 
            "description": "The user password for WAPI integration."
          }, 
          "vendor_identifier": {
            "type": "string", 
            "description": "The vendor identifier."
          }, 
          "outbound_member_type": {
            "enum": [
              "MEMBER", 
              "GM"
            ], 
            "type": "string", 
            "description": "The outbound member which will generate an event."
          }, 
          "client_certificate_subject": {
            "type": "string", 
            "description": "The client certificate subject of a notification REST endpoint."
          }, 
          "client_certificate_token": {
            "type": "string", 
            "description": "The token returned by the uploadinit function call in object fileop for a notification REST endpoit client certificate."
          }, 
          "client_certificate_valid_from": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when client certificate for a notification REST endpoint was created."
          }, 
          "uri": {
            "type": "string", 
            "description": "The URI of a notification REST endpoint."
          }, 
          "template_instance": {
            "enum": [
              "notification:rest:templateinstance"
            ], 
            "type": "string", 
            "description": "The notification REST template instance. The parameters of REST API endpoint template instance are prohibited to change."
          }, 
          "sync_disabled": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the sync process is disabled for a notification REST endpoint."
          }, 
          "wapi_user_name": {
            "type": "string", 
            "description": "The user name for WAPI integration."
          }, 
          "timeout": {
            "type": "integer", 
            "example": "integer", 
            "description": "The timeout of session management (in seconds)."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "server_cert_validation": {
            "enum": [
              "NO_VALIDATION", 
              "CA_CERT", 
              "CA_CERT_NO_HOSTNAME"
            ], 
            "type": "string", 
            "description": "The server certificate validation type."
          }, 
          "password": {
            "type": "string", 
            "description": "The password of the user that can log into a notification REST endpoint."
          }, 
          "outbound_members": {
            "type": "string", 
            "description": "The list of members for outbound events."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of a notification REST endpoint."
          }
        }
      }, 
      "ciscoise_endpoint": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The Cisco ISE endpoint descriptive comment."
          }, 
          "publish_settings": {
            "enum": [
              "ciscoise:publishsetting"
            ], 
            "type": "string", 
            "description": "The Cisco ISE publish settings."
          }, 
          "client_certificate_token": {
            "type": "string", 
            "description": "The token returned by the uploadinit function call in object fileop for Cisco ISE client certificate."
          }, 
          "resolved_secondary_address": {
            "type": "string", 
            "description": "The resolved IPv4 Address or IPv6 Address of the Cisco ISE endpoint."
          }, 
          "bulk_download_certificate_valid_to": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The Cisco ISE bulk download certificate valid to."
          }, 
          "connection_status": {
            "type": "string", 
            "description": "The Cisco ISE connection status."
          }, 
          "client_certificate_valid_to": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The Cisco ISE client certificate valid to."
          }, 
          "client_certificate_subject": {
            "type": "string", 
            "description": "The Cisco ISE client certificate subject."
          }, 
          "version": {
            "enum": [
              "VERSION_1_3", 
              "VERSION_1_4", 
              "VERSION_2_0"
            ], 
            "type": "string", 
            "description": "The Cisco ISE endpoint version."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "type": {
            "enum": [
              "TYPE_CISCO"
            ], 
            "type": "string", 
            "description": "The Cisco ISE endpoint type."
          }, 
          "secondary_address": {
            "type": "string", 
            "description": "The Cisco ISE endpoint secondary IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN)"
          }, 
          "bulk_download_certificate_valid_from": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The Cisco ISE bulk download certificate valid from."
          }, 
          "client_certificate_valid_from": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The Cisco ISE client certificate valid from."
          }, 
          "bulk_download_certificate_token": {
            "type": "string", 
            "description": "The token returned by the uploadinit function call in object fileop for Cisco ISE bulk download certificate."
          }, 
          "disable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether a Cisco ISE endpoint is disabled or not. When this is set to False, the Cisco ISE endpoint is enabled."
          }, 
          "address": {
            "type": "string", 
            "description": "The Cisco ISE endpoint IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN)"
          }, 
          "connection_timeout": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Cisco ISE connection timeout."
          }, 
          "network_view": {
            "type": "string", 
            "description": "The Cisco ISE network view name."
          }, 
          "subscribing_member": {
            "type": "string", 
            "description": "The name of the Grid Member object that is serving Cisco ISE endpoint."
          }, 
          "resolved_address": {
            "type": "string", 
            "description": "The resolved IPv4 Address or IPv6 Address of the Cisco ISE endpoint."
          }, 
          "bulk_download_certificate_subject": {
            "type": "string", 
            "description": "The Cisco ISE bulk download certificate subject."
          }, 
          "subscribe_settings": {
            "enum": [
              "ciscoise:subscribesetting"
            ], 
            "type": "string", 
            "description": "The Cisco ISE subscribe settings."
          }
        }
      }
    }
  }, 
  "openapi": "3.0.0"
}