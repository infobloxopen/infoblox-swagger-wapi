{'openapi': '3.0.0', 'info': {'description': 'Sample WAPI Documentation', 'version': 'v2.7', 'title': 'Infoblox WAPI', 'license': {'name': 'Infoblox License', 'url': 'https://www.infoblox.com/'}, 'contact': {'name': 'Vedant', 'email': 'vsethia@infoblox.com'}}, 'paths': {'/wapi/v2.7/grid:dns': {'get': {'tags': ['grid:dns'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/grid_dns'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/grid:dns/{grid:dns_reference}': {'get': {'tags': ['grid:dns'], 'parameters': [{'name': 'grid:dns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for grid:dns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/grid_dns'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['grid:dns'], 'parameters': [{'name': 'grid:dns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for grid:dns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['run_scavenging']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'run_scavenging': {'type': 'string', 'example': {'action': ['ANALYZE', 'RECLAIM', 'ANALYZE_RECLAIM', 'RESET']}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the grid:dns resource', 'tags': ['grid:dns'], 'parameters': [{'name': 'grid:dns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for grid:dns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'allow_bulkhost_ddns': {'type': 'string', 'example': "['REFUSAL', 'SUCCESS']"}, 'allow_gss_tsig_zone_updates': {'type': 'string', 'example': 'bool'}, 'allow_query': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_recursive_query': {'type': 'string', 'example': 'bool'}, 'allow_transfer': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_update': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'anonymize_response_logging': {'type': 'string', 'example': 'bool'}, 'attack_mitigation': {'type': 'string', 'example': 'grid:attackmitigation'}, 'auto_blackhole': {'type': 'string', 'example': 'grid:autoblackhole'}, 'bind_check_names_policy': {'type': 'string', 'example': "['FAIL', 'WARN']"}, 'bind_hostname_directive': {'type': 'string', 'example': "['NONE', 'HOSTNAME']"}, 'blackhole_list': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'blacklist_action': {'type': 'string', 'example': "['REDIRECT', 'REFUSE']"}, 'blacklist_log_query': {'type': 'string', 'example': 'bool'}, 'blacklist_redirect_addresses': {'type': 'string', 'example': 'string'}, 'blacklist_redirect_ttl': {'type': 'string', 'example': 'uint'}, 'blacklist_rulesets': {'type': 'string', 'example': 'string'}, 'bulk_host_name_templates': {'type': 'string', 'example': 'bulkhostnametemplate'}, 'capture_dns_queries_on_all_domains': {'type': 'string', 'example': 'bool'}, 'check_names_for_ddns_and_zone_transfer': {'type': 'string', 'example': 'bool'}, 'client_subnet_domains': {'type': 'string', 'example': "[{'domain': 'string', 'permission': 'enum'}]"}, 'client_subnet_ipv4_prefix_length': {'type': 'string', 'example': 'uint'}, 'client_subnet_ipv6_prefix_length': {'type': 'string', 'example': 'uint'}, 'copy_xfer_to_notify': {'type': 'string', 'example': 'bool'}, 'custom_root_name_servers': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'ddns_principal_group': {'type': 'string', 'example': 'string'}, 'ddns_principal_tracking': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns_list': {'type': 'string', 'example': 'string'}, 'ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_secure': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'default_bulk_host_name_template': {'type': 'string', 'example': 'string'}, 'default_ttl': {'type': 'string', 'example': 'uint'}, 'disable_edns': {'type': 'string', 'example': 'bool'}, 'dns64_groups': {'type': 'string', 'example': 'string'}, 'dns_cache_acceleration_ttl': {'type': 'string', 'example': 'uint'}, 'dns_health_check_anycast_control': {'type': 'string', 'example': 'bool'}, 'dns_health_check_domain_list': {'type': 'string', 'example': 'string'}, 'dns_health_check_interval': {'type': 'string', 'example': 'uint'}, 'dns_health_check_recursion_flag': {'type': 'string', 'example': 'bool'}, 'dns_health_check_retries': {'type': 'string', 'example': 'uint'}, 'dns_health_check_timeout': {'type': 'string', 'example': 'uint'}, 'dns_query_capture_file_time_limit': {'type': 'string', 'example': 'uint'}, 'dnssec_blacklist_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_dns64_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_expired_signatures_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_key_params': {'type': 'string', 'example': 'dnsseckeyparams'}, 'dnssec_negative_trust_anchors': {'type': 'string', 'example': 'string'}, 'dnssec_nxdomain_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_rpz_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_trusted_keys': {'type': 'string', 'example': "[{'fqdn': 'string', 'algorithm': 'string', 'key': 'string', 'secure_entry_point': 'bool'}]"}, 'dnssec_validation_enabled': {'type': 'string', 'example': 'bool'}, 'domains_to_capture_dns_queries': {'type': 'string', 'example': 'string'}, 'dtc_dnssec_mode': {'type': 'string', 'example': "['SIGNED', 'UNSIGNED']"}, 'dtc_edns_prefer_client_subnet': {'type': 'string', 'example': 'bool'}, 'dtc_topology_ea_list': {'type': 'string', 'example': 'string'}, 'email': {'type': 'string', 'example': 'string'}, 'enable_blackhole': {'type': 'string', 'example': 'bool'}, 'enable_blacklist': {'type': 'string', 'example': 'bool'}, 'enable_capture_dns_queries': {'type': 'string', 'example': 'bool'}, 'enable_capture_dns_responses': {'type': 'string', 'example': 'bool'}, 'enable_client_subnet_forwarding': {'type': 'string', 'example': 'bool'}, 'enable_client_subnet_recursive': {'type': 'string', 'example': 'bool'}, 'enable_delete_associated_ptr': {'type': 'string', 'example': 'bool'}, 'enable_dns64': {'type': 'string', 'example': 'bool'}, 'enable_dns_health_check': {'type': 'string', 'example': 'bool'}, 'enable_dtc_dns_fall_through': {'type': 'string', 'example': 'bool'}, 'enable_excluded_domain_names': {'type': 'string', 'example': 'bool'}, 'enable_fixed_rrset_order_fqdns': {'type': 'string', 'example': 'bool'}, 'enable_ftc': {'type': 'string', 'example': 'bool'}, 'enable_gss_tsig': {'type': 'string', 'example': 'bool'}, 'enable_host_rrset_order': {'type': 'string', 'example': 'bool'}, 'enable_hsm_signing': {'type': 'string', 'example': 'bool'}, 'enable_notify_source_port': {'type': 'string', 'example': 'bool'}, 'enable_query_rewrite': {'type': 'string', 'example': 'bool'}, 'enable_query_source_port': {'type': 'string', 'example': 'bool'}, 'excluded_domain_names': {'type': 'string', 'example': 'string'}, 'expire_after': {'type': 'string', 'example': 'uint'}, 'file_transfer_setting': {'type': 'string', 'example': 'filetransfersetting'}, 'filter_aaaa': {'type': 'string', 'example': "['YES', 'NO', 'BREAK_DNSSEC']"}, 'filter_aaaa_list': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'fixed_rrset_order_fqdns': {'type': 'string', 'example': "[{'fqdn': 'string', 'record_type': 'enum'}]"}, 'forward_only': {'type': 'string', 'example': 'bool'}, 'forward_updates': {'type': 'string', 'example': 'bool'}, 'forwarders': {'type': 'string', 'example': 'string'}, 'ftc_expired_record_timeout': {'type': 'string', 'example': 'uint'}, 'ftc_expired_record_ttl': {'type': 'string', 'example': 'uint'}, 'gss_tsig_keys': {'type': 'string', 'example': 'kerberoskey'}, 'lame_ttl': {'type': 'string', 'example': 'uint'}, 'logging_categories': {'type': 'string', 'example': 'grid:loggingcategories'}, 'max_cache_ttl': {'type': 'string', 'example': 'uint'}, 'max_cached_lifetime': {'type': 'string', 'example': 'uint'}, 'max_ncache_ttl': {'type': 'string', 'example': 'uint'}, 'member_secondary_notify': {'type': 'string', 'example': 'bool'}, 'negative_ttl': {'type': 'string', 'example': 'uint'}, 'notify_delay': {'type': 'string', 'example': 'uint'}, 'notify_source_port': {'type': 'string', 'example': 'uint'}, 'nsgroup_default': {'type': 'string', 'example': 'string'}, 'nsgroups': {'type': 'string', 'example': 'string'}, 'nxdomain_log_query': {'type': 'string', 'example': 'bool'}, 'nxdomain_redirect': {'type': 'string', 'example': 'bool'}, 'nxdomain_redirect_addresses': {'type': 'string', 'example': 'string'}, 'nxdomain_redirect_addresses_v6': {'type': 'string', 'example': 'string'}, 'nxdomain_redirect_ttl': {'type': 'string', 'example': 'uint'}, 'nxdomain_rulesets': {'type': 'string', 'example': 'string'}, 'preserve_host_rrset_order_on_secondaries': {'type': 'string', 'example': 'bool'}, 'protocol_record_name_policies': {'type': 'string', 'example': 'recordnamepolicy'}, 'query_rewrite_domain_names': {'type': 'string', 'example': 'string'}, 'query_rewrite_prefix': {'type': 'string', 'example': 'string'}, 'query_source_port': {'type': 'string', 'example': 'uint'}, 'recursive_query_list': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'refresh_timer': {'type': 'string', 'example': 'uint'}, 'resolver_query_timeout': {'type': 'string', 'example': 'uint'}, 'response_rate_limiting': {'type': 'string', 'example': 'grid:responseratelimiting'}, 'restart_setting': {'type': 'string', 'example': 'grid:servicerestart'}, 'retry_timer': {'type': 'string', 'example': 'uint'}, 'rpz_disable_nsdname_nsip': {'type': 'string', 'example': 'bool'}, 'rpz_drop_ip_rule_enabled': {'type': 'string', 'example': 'bool'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'string', 'example': 'uint'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'string', 'example': 'uint'}, 'rpz_qname_wait_recurse': {'type': 'string', 'example': 'bool'}, 'scavenging_settings': {'type': 'string', 'example': 'setting:scavenging'}, 'serial_query_rate': {'type': 'string', 'example': 'uint'}, 'server_id_directive': {'type': 'string', 'example': "['NONE', 'HOSTNAME']"}, 'sortlist': {'type': 'string', 'example': "[{'address': 'string', 'match_list': 'string'}]"}, 'store_locally': {'type': 'string', 'example': 'bool'}, 'syslog_facility': {'type': 'string', 'example': "['DAEMON', 'LOCAL0', 'LOCAL1', 'LOCAL2', 'LOCAL3', 'LOCAL4', 'LOCAL5', 'LOCAL6', 'LOCAL7']"}, 'transfer_excluded_servers': {'type': 'string', 'example': 'string'}, 'transfer_format': {'type': 'string', 'example': "['MANY_ANSWERS', 'ONE_ANSWER']"}, 'transfers_in': {'type': 'string', 'example': 'uint'}, 'transfers_out': {'type': 'string', 'example': 'uint'}, 'transfers_per_ns': {'type': 'string', 'example': 'uint'}, 'zone_deletion_double_confirm': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/grid_dns'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/member:dns': {'get': {'tags': ['member:dns'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'host_name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv4addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv6addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/member_dns'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/member:dns/{member:dns_reference}': {'get': {'tags': ['member:dns'], 'parameters': [{'name': 'member:dns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for member:dns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/member_dns'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['member:dns'], 'parameters': [{'name': 'member:dns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for member:dns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['clear_dns_cache']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'clear_dns_cache': {'type': 'string', 'example': {'domain': 'string', 'view': 'string', 'clear_full_tree': 'bool'}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the member:dns resource', 'tags': ['member:dns'], 'parameters': [{'name': 'member:dns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for member:dns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'additional_ip_list': {'type': 'string', 'example': 'string'}, 'allow_gss_tsig_zone_updates': {'type': 'string', 'example': 'bool'}, 'allow_query': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_recursive_query': {'type': 'string', 'example': 'bool'}, 'allow_transfer': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_update': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'anonymize_response_logging': {'type': 'string', 'example': 'bool'}, 'attack_mitigation': {'type': 'string', 'example': 'grid:attackmitigation'}, 'auto_blackhole': {'type': 'string', 'example': 'grid:autoblackhole'}, 'auto_create_a_and_ptr_for_lan2': {'type': 'string', 'example': 'bool'}, 'auto_create_aaaa_and_ipv6ptr_for_lan2': {'type': 'string', 'example': 'bool'}, 'auto_sort_views': {'type': 'string', 'example': 'bool'}, 'bind_check_names_policy': {'type': 'string', 'example': "['FAIL', 'WARN']"}, 'bind_hostname_directive': {'type': 'string', 'example': "['NONE', 'HOSTNAME', 'USER_DEFINED']"}, 'bind_hostname_directive_fqdn': {'type': 'string', 'example': 'string'}, 'blackhole_list': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'blacklist_action': {'type': 'string', 'example': "['REDIRECT', 'REFUSE']"}, 'blacklist_log_query': {'type': 'string', 'example': 'bool'}, 'blacklist_redirect_addresses': {'type': 'string', 'example': 'string'}, 'blacklist_redirect_ttl': {'type': 'string', 'example': 'uint'}, 'blacklist_rulesets': {'type': 'string', 'example': 'string'}, 'capture_dns_queries_on_all_domains': {'type': 'string', 'example': 'bool'}, 'check_names_for_ddns_and_zone_transfer': {'type': 'string', 'example': 'bool'}, 'copy_xfer_to_notify': {'type': 'string', 'example': 'bool'}, 'custom_root_name_servers': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'disable_edns': {'type': 'string', 'example': 'bool'}, 'dns64_groups': {'type': 'string', 'example': 'string'}, 'dns_cache_acceleration_ttl': {'type': 'string', 'example': 'uint'}, 'dns_health_check_anycast_control': {'type': 'string', 'example': 'bool'}, 'dns_health_check_domain_list': {'type': 'string', 'example': 'string'}, 'dns_health_check_interval': {'type': 'string', 'example': 'uint'}, 'dns_health_check_recursion_flag': {'type': 'string', 'example': 'bool'}, 'dns_health_check_retries': {'type': 'string', 'example': 'uint'}, 'dns_health_check_timeout': {'type': 'string', 'example': 'uint'}, 'dns_notify_transfer_source': {'type': 'string', 'example': "['VIP', 'MGMT', 'LAN2', 'ANY', 'IP']"}, 'dns_notify_transfer_source_address': {'type': 'string', 'example': 'string'}, 'dns_query_capture_file_time_limit': {'type': 'string', 'example': 'uint'}, 'dns_query_source_address': {'type': 'string', 'example': 'string'}, 'dns_query_source_interface': {'type': 'string', 'example': "['VIP', 'MGMT', 'LAN2', 'ANY', 'IP']"}, 'dns_view_address_settings': {'type': 'string', 'example': "[{'view_name': 'string', 'dns_notify_transfer_source': 'enum', 'dns_notify_transfer_source_address': 'string', 'dns_query_source_interface': 'enum', 'dns_query_source_address': 'string', 'enable_notify_source_port': 'bool', 'notify_source_port': 'uint', 'enable_query_source_port': 'bool', 'query_source_port': 'uint', 'notify_delay': 'uint', 'use_source_ports': 'bool', 'use_notify_delay': 'bool'}]"}, 'dnssec_blacklist_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_dns64_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_expired_signatures_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_negative_trust_anchors': {'type': 'string', 'example': 'string'}, 'dnssec_nxdomain_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_rpz_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_trusted_keys': {'type': 'string', 'example': "[{'fqdn': 'string', 'algorithm': 'string', 'key': 'string', 'secure_entry_point': 'bool'}]"}, 'dnssec_validation_enabled': {'type': 'string', 'example': 'bool'}, 'domains_to_capture_dns_queries': {'type': 'string', 'example': 'string'}, 'dtc_edns_prefer_client_subnet': {'type': 'string', 'example': 'bool'}, 'dtc_health_source': {'type': 'string', 'example': "['VIP', 'MGMT', 'LAN2', 'ANY', 'IP']"}, 'dtc_health_source_address': {'type': 'string', 'example': 'string'}, 'enable_blackhole': {'type': 'string', 'example': 'bool'}, 'enable_blacklist': {'type': 'string', 'example': 'bool'}, 'enable_capture_dns_queries': {'type': 'string', 'example': 'bool'}, 'enable_capture_dns_responses': {'type': 'string', 'example': 'bool'}, 'enable_dns': {'type': 'string', 'example': 'bool'}, 'enable_dns64': {'type': 'string', 'example': 'bool'}, 'enable_dns_cache_acceleration': {'type': 'string', 'example': 'bool'}, 'enable_dns_health_check': {'type': 'string', 'example': 'bool'}, 'enable_excluded_domain_names': {'type': 'string', 'example': 'bool'}, 'enable_fixed_rrset_order_fqdns': {'type': 'string', 'example': 'bool'}, 'enable_ftc': {'type': 'string', 'example': 'bool'}, 'enable_gss_tsig': {'type': 'string', 'example': 'bool'}, 'enable_notify_source_port': {'type': 'string', 'example': 'bool'}, 'enable_query_rewrite': {'type': 'string', 'example': 'bool'}, 'enable_query_source_port': {'type': 'string', 'example': 'bool'}, 'excluded_domain_names': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'file_transfer_setting': {'type': 'string', 'example': 'filetransfersetting'}, 'filter_aaaa': {'type': 'string', 'example': "['YES', 'NO', 'BREAK_DNSSEC']"}, 'filter_aaaa_list': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'fixed_rrset_order_fqdns': {'type': 'string', 'example': "[{'fqdn': 'string', 'record_type': 'enum'}]"}, 'forward_only': {'type': 'string', 'example': 'bool'}, 'forward_updates': {'type': 'string', 'example': 'bool'}, 'forwarders': {'type': 'string', 'example': 'string'}, 'ftc_expired_record_timeout': {'type': 'string', 'example': 'uint'}, 'ftc_expired_record_ttl': {'type': 'string', 'example': 'uint'}, 'glue_record_addresses': {'type': 'string', 'example': "[{'attach_empty_recursive_view': 'bool', 'glue_record_address': 'string', 'view': 'string', 'glue_address_choice': 'enum'}]"}, 'gss_tsig_keys': {'type': 'string', 'example': 'kerberoskey'}, 'ipv6_glue_record_addresses': {'type': 'string', 'example': "[{'attach_empty_recursive_view': 'bool', 'glue_record_address': 'string', 'view': 'string', 'glue_address_choice': 'enum'}]"}, 'lame_ttl': {'type': 'string', 'example': 'uint'}, 'logging_categories': {'type': 'string', 'example': 'grid:loggingcategories'}, 'max_cache_ttl': {'type': 'string', 'example': 'uint'}, 'max_cached_lifetime': {'type': 'string', 'example': 'uint'}, 'max_ncache_ttl': {'type': 'string', 'example': 'uint'}, 'minimal_resp': {'type': 'string', 'example': 'bool'}, 'notify_delay': {'type': 'string', 'example': 'uint'}, 'notify_source_port': {'type': 'string', 'example': 'uint'}, 'nxdomain_log_query': {'type': 'string', 'example': 'bool'}, 'nxdomain_redirect': {'type': 'string', 'example': 'bool'}, 'nxdomain_redirect_addresses': {'type': 'string', 'example': 'string'}, 'nxdomain_redirect_addresses_v6': {'type': 'string', 'example': 'string'}, 'nxdomain_redirect_ttl': {'type': 'string', 'example': 'uint'}, 'nxdomain_rulesets': {'type': 'string', 'example': 'string'}, 'query_source_port': {'type': 'string', 'example': 'uint'}, 'record_name_policy': {'type': 'string', 'example': 'string'}, 'recursive_client_limit': {'type': 'string', 'example': 'uint'}, 'recursive_query_list': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'recursive_resolver': {'type': 'string', 'example': "['BIND', 'UNBOUND']"}, 'resolver_query_timeout': {'type': 'string', 'example': 'uint'}, 'response_rate_limiting': {'type': 'string', 'example': 'grid:responseratelimiting'}, 'root_name_server_type': {'type': 'string', 'example': "['CUSTOM', 'INTERNET']"}, 'rpz_disable_nsdname_nsip': {'type': 'string', 'example': 'bool'}, 'rpz_drop_ip_rule_enabled': {'type': 'string', 'example': 'bool'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'string', 'example': 'uint'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'string', 'example': 'uint'}, 'rpz_qname_wait_recurse': {'type': 'string', 'example': 'bool'}, 'serial_query_rate': {'type': 'string', 'example': 'uint'}, 'server_id_directive': {'type': 'string', 'example': "['NONE', 'HOSTNAME', 'USER_DEFINED']"}, 'server_id_directive_string': {'type': 'string', 'example': 'string'}, 'skip_in_grid_rpz_queries': {'type': 'string', 'example': 'bool'}, 'sortlist': {'type': 'string', 'example': "[{'address': 'string', 'match_list': 'string'}]"}, 'store_locally': {'type': 'string', 'example': 'bool'}, 'syslog_facility': {'type': 'string', 'example': "['DAEMON', 'LOCAL0', 'LOCAL1', 'LOCAL2', 'LOCAL3', 'LOCAL4', 'LOCAL5', 'LOCAL6', 'LOCAL7']"}, 'transfer_excluded_servers': {'type': 'string', 'example': 'string'}, 'transfer_format': {'type': 'string', 'example': "['MANY_ANSWERS', 'ONE_ANSWER']"}, 'transfers_in': {'type': 'string', 'example': 'uint'}, 'transfers_out': {'type': 'string', 'example': 'uint'}, 'transfers_per_ns': {'type': 'string', 'example': 'uint'}, 'unbound_logging_level': {'type': 'string', 'example': "['ERRORS_ONLY', 'OPERATIONS', 'DETAILED_OPERATIONS', 'QUERY', 'ALGORITHM', 'CACHE_MISSES']"}, 'use_allow_query': {'type': 'string', 'example': 'bool'}, 'use_allow_transfer': {'type': 'string', 'example': 'bool'}, 'use_attack_mitigation': {'type': 'string', 'example': 'bool'}, 'use_auto_blackhole': {'type': 'string', 'example': 'bool'}, 'use_bind_hostname_directive': {'type': 'string', 'example': 'bool'}, 'use_blackhole': {'type': 'string', 'example': 'bool'}, 'use_blacklist': {'type': 'string', 'example': 'bool'}, 'use_capture_dns_queries_on_all_domains': {'type': 'string', 'example': 'bool'}, 'use_copy_xfer_to_notify': {'type': 'string', 'example': 'bool'}, 'use_disable_edns': {'type': 'string', 'example': 'bool'}, 'use_dns64': {'type': 'string', 'example': 'bool'}, 'use_dns_cache_acceleration_ttl': {'type': 'string', 'example': 'bool'}, 'use_dns_health_check': {'type': 'string', 'example': 'bool'}, 'use_dnssec': {'type': 'string', 'example': 'bool'}, 'use_dtc_edns_prefer_client_subnet': {'type': 'string', 'example': 'bool'}, 'use_enable_capture_dns': {'type': 'string', 'example': 'bool'}, 'use_enable_excluded_domain_names': {'type': 'string', 'example': 'bool'}, 'use_enable_gss_tsig': {'type': 'string', 'example': 'bool'}, 'use_enable_query_rewrite': {'type': 'string', 'example': 'bool'}, 'use_filter_aaaa': {'type': 'string', 'example': 'bool'}, 'use_fixed_rrset_order_fqdns': {'type': 'string', 'example': 'bool'}, 'use_forward_updates': {'type': 'string', 'example': 'bool'}, 'use_forwarders': {'type': 'string', 'example': 'bool'}, 'use_ftc': {'type': 'string', 'example': 'bool'}, 'use_gss_tsig_keys': {'type': 'string', 'example': 'bool'}, 'use_lame_ttl': {'type': 'string', 'example': 'bool'}, 'use_lan2_ipv6_port': {'type': 'string', 'example': 'bool'}, 'use_lan2_port': {'type': 'string', 'example': 'bool'}, 'use_lan_ipv6_port': {'type': 'string', 'example': 'bool'}, 'use_lan_port': {'type': 'string', 'example': 'bool'}, 'use_max_cache_ttl': {'type': 'string', 'example': 'bool'}, 'use_max_cached_lifetime': {'type': 'string', 'example': 'bool'}, 'use_max_ncache_ttl': {'type': 'string', 'example': 'bool'}, 'use_mgmt_ipv6_port': {'type': 'string', 'example': 'bool'}, 'use_mgmt_port': {'type': 'string', 'example': 'bool'}, 'use_notify_delay': {'type': 'string', 'example': 'bool'}, 'use_nxdomain_redirect': {'type': 'string', 'example': 'bool'}, 'use_record_name_policy': {'type': 'string', 'example': 'bool'}, 'use_recursive_client_limit': {'type': 'string', 'example': 'bool'}, 'use_recursive_query_setting': {'type': 'string', 'example': 'bool'}, 'use_resolver_query_timeout': {'type': 'string', 'example': 'bool'}, 'use_response_rate_limiting': {'type': 'string', 'example': 'bool'}, 'use_root_name_server': {'type': 'string', 'example': 'bool'}, 'use_rpz_disable_nsdname_nsip': {'type': 'string', 'example': 'bool'}, 'use_rpz_drop_ip_rule': {'type': 'string', 'example': 'bool'}, 'use_rpz_qname_wait_recurse': {'type': 'string', 'example': 'bool'}, 'use_serial_query_rate': {'type': 'string', 'example': 'bool'}, 'use_server_id_directive': {'type': 'string', 'example': 'bool'}, 'use_sortlist': {'type': 'string', 'example': 'bool'}, 'use_source_ports': {'type': 'string', 'example': 'bool'}, 'use_syslog_facility': {'type': 'string', 'example': 'bool'}, 'use_transfers_in': {'type': 'string', 'example': 'bool'}, 'use_transfers_out': {'type': 'string', 'example': 'bool'}, 'use_transfers_per_ns': {'type': 'string', 'example': 'bool'}, 'use_update_setting': {'type': 'string', 'example': 'bool'}, 'use_zone_transfer_format': {'type': 'string', 'example': 'bool'}, 'views': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/member_dns'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/allrecords': {'get': {'tags': ['allrecords'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/allrecords'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/allrecords/{allrecords_reference}': {'get': {'tags': ['allrecords'], 'parameters': [{'name': 'allrecords_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for allrecords', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/allrecords'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/bulkhost': {'get': {'tags': ['bulkhost'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'disable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'end_addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name_template', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'prefix', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reverse', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'start_addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ttl', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'use_name_template', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/bulkhost'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['bulkhost'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'end_addr': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name_template': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'reverse': {'type': 'string', 'example': 'bool'}, 'start_addr': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_name_template': {'type': 'string', 'example': 'bool'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}, 'zone': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/bulkhost'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/bulkhost/{bulkhost_reference}': {'get': {'tags': ['bulkhost'], 'parameters': [{'name': 'bulkhost_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for bulkhost', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/bulkhost'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the bulkhost resource', 'tags': ['bulkhost'], 'parameters': [{'name': 'bulkhost_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for bulkhost', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'end_addr': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name_template': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'reverse': {'type': 'string', 'example': 'bool'}, 'start_addr': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_name_template': {'type': 'string', 'example': 'bool'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}, 'zone': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/bulkhost'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the bulkhost resource', 'tags': ['bulkhost'], 'parameters': [{'name': 'bulkhost_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for bulkhost', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:host': {'get': {'tags': ['record:host'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'device_description', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'device_location', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'device_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'device_vendor', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'network_view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:host'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'aliases': {'type': 'string', 'example': 'string'}, 'allow_telnet': {'type': 'string', 'example': 'bool'}, 'cli_credentials': {'type': 'string', 'example': "[{'user': 'string', 'password': 'string', 'credential_type': 'enum', 'comment': 'string', 'id': 'uint'}]"}, 'comment': {'type': 'string', 'example': 'string'}, 'configure_for_dns': {'type': 'string', 'example': 'bool'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'device_description': {'type': 'string', 'example': 'string'}, 'device_location': {'type': 'string', 'example': 'string'}, 'device_type': {'type': 'string', 'example': 'string'}, 'device_vendor': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'disable_discovery': {'type': 'string', 'example': 'bool'}, 'dns_aliases': {'type': 'string', 'example': 'string'}, 'enable_immediate_discovery': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'ipv4addrs': {'type': 'string', 'example': 'record:host_ipv4addr'}, 'ipv6addrs': {'type': 'string', 'example': 'record:host_ipv6addr'}, 'name': {'type': 'string', 'example': 'string'}, 'network_view': {'type': 'string', 'example': 'string'}, 'restart_if_needed': {'type': 'string', 'example': 'bool'}, 'rrset_order': {'type': 'string', 'example': 'string'}, 'snmp3_credential': {'type': 'string', 'example': 'discovery:snmp3credential'}, 'snmp_credential': {'type': 'string', 'example': 'discovery:snmpcredential'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_cli_credentials': {'type': 'string', 'example': 'bool'}, 'use_snmp3_credential': {'type': 'string', 'example': 'bool'}, 'use_snmp_credential': {'type': 'string', 'example': 'bool'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:host/{record:host_reference}': {'get': {'tags': ['record:host'], 'parameters': [{'name': 'record:host_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:host', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:host resource', 'tags': ['record:host'], 'parameters': [{'name': 'record:host_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:host', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'aliases': {'type': 'string', 'example': 'string'}, 'allow_telnet': {'type': 'string', 'example': 'bool'}, 'cli_credentials': {'type': 'string', 'example': "[{'user': 'string', 'password': 'string', 'credential_type': 'enum', 'comment': 'string', 'id': 'uint'}]"}, 'comment': {'type': 'string', 'example': 'string'}, 'configure_for_dns': {'type': 'string', 'example': 'bool'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'device_description': {'type': 'string', 'example': 'string'}, 'device_location': {'type': 'string', 'example': 'string'}, 'device_type': {'type': 'string', 'example': 'string'}, 'device_vendor': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'disable_discovery': {'type': 'string', 'example': 'bool'}, 'dns_aliases': {'type': 'string', 'example': 'string'}, 'enable_immediate_discovery': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'ipv4addrs': {'type': 'string', 'example': 'record:host_ipv4addr'}, 'ipv6addrs': {'type': 'string', 'example': 'record:host_ipv6addr'}, 'name': {'type': 'string', 'example': 'string'}, 'restart_if_needed': {'type': 'string', 'example': 'bool'}, 'rrset_order': {'type': 'string', 'example': 'string'}, 'snmp3_credential': {'type': 'string', 'example': 'discovery:snmp3credential'}, 'snmp_credential': {'type': 'string', 'example': 'discovery:snmpcredential'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_cli_credentials': {'type': 'string', 'example': 'bool'}, 'use_snmp3_credential': {'type': 'string', 'example': 'bool'}, 'use_snmp_credential': {'type': 'string', 'example': 'bool'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:host resource', 'tags': ['record:host'], 'parameters': [{'name': 'record:host_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:host', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:a': {'get': {'tags': ['record:a'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv4addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_a'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:a'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'ipv4addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_a'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:a/{record:a_reference}': {'get': {'tags': ['record:a'], 'parameters': [{'name': 'record:a_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:a', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_a'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:a resource', 'tags': ['record:a'], 'parameters': [{'name': 'record:a_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:a', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'ipv4addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_a'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:a resource', 'tags': ['record:a'], 'parameters': [{'name': 'record:a_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:a', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:aaaa': {'get': {'tags': ['record:aaaa'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv6addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_aaaa'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:aaaa'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'ipv6addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_aaaa'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:aaaa/{record:aaaa_reference}': {'get': {'tags': ['record:aaaa'], 'parameters': [{'name': 'record:aaaa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:aaaa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_aaaa'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:aaaa resource', 'tags': ['record:aaaa'], 'parameters': [{'name': 'record:aaaa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:aaaa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'ipv6addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_aaaa'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:aaaa resource', 'tags': ['record:aaaa'], 'parameters': [{'name': 'record:aaaa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:aaaa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:alias': {'get': {'tags': ['record:alias'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'target_name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'target_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_alias'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:alias'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC']"}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'target_name': {'type': 'string', 'example': 'string'}, 'target_type': {'type': 'string', 'example': "['A', 'AAAA', 'MX', 'NAPTR', 'PTR', 'SPF', 'SRV', 'TXT']"}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_alias'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:alias/{record:alias_reference}': {'get': {'tags': ['record:alias'], 'parameters': [{'name': 'record:alias_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:alias', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_alias'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:alias resource', 'tags': ['record:alias'], 'parameters': [{'name': 'record:alias_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:alias', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC']"}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'target_name': {'type': 'string', 'example': 'string'}, 'target_type': {'type': 'string', 'example': "['A', 'AAAA', 'MX', 'NAPTR', 'PTR', 'SPF', 'SRV', 'TXT']"}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_alias'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:alias resource', 'tags': ['record:alias'], 'parameters': [{'name': 'record:alias_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:alias', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:cname': {'get': {'tags': ['record:cname'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'canonical', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_cname'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:cname'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'canonical': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_cname'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:cname/{record:cname_reference}': {'get': {'tags': ['record:cname'], 'parameters': [{'name': 'record:cname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:cname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_cname'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:cname resource', 'tags': ['record:cname'], 'parameters': [{'name': 'record:cname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:cname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'canonical': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_cname'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:cname resource', 'tags': ['record:cname'], 'parameters': [{'name': 'record:cname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:cname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:dhcid': {'get': {'tags': ['record:dhcid'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'dhcid', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dhcid'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:dhcid/{record:dhcid_reference}': {'get': {'tags': ['record:dhcid'], 'parameters': [{'name': 'record:dhcid_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:dhcid', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dhcid'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:dhcid resource', 'tags': ['record:dhcid'], 'parameters': [{'name': 'record:dhcid_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:dhcid', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:dname': {'get': {'tags': ['record:dname'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'target', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dname'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:dname'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'target': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dname'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:dname/{record:dname_reference}': {'get': {'tags': ['record:dname'], 'parameters': [{'name': 'record:dname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:dname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dname'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:dname resource', 'tags': ['record:dname'], 'parameters': [{'name': 'record:dname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:dname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'target': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dname'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:dname resource', 'tags': ['record:dname'], 'parameters': [{'name': 'record:dname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:dname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:dnskey': {'get': {'tags': ['record:dnskey'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'algorithm', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'flags', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'key_tag', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'public_key', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dnskey'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:dnskey/{record:dnskey_reference}': {'get': {'tags': ['record:dnskey'], 'parameters': [{'name': 'record:dnskey_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:dnskey', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dnskey'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:ds': {'get': {'tags': ['record:ds'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'algorithm', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'digest_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'key_tag', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ds'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:ds/{record:ds_reference}': {'get': {'tags': ['record:ds'], 'parameters': [{'name': 'record:ds_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:ds', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ds'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:dtclbdn': {'get': {'tags': ['record:dtclbdn'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'disable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'pattern', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dtclbdn'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:dtclbdn/{record:dtclbdn_reference}': {'get': {'tags': ['record:dtclbdn'], 'parameters': [{'name': 'record:dtclbdn_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:dtclbdn', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_dtclbdn'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:host_ipv4addr': {'get': {'tags': ['record:host_ipv4addr'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'ipv4addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'mac', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'network_view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host_ipv4addr'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:host_ipv4addr/{record:host_ipv4addr_reference}': {'get': {'tags': ['record:host_ipv4addr'], 'parameters': [{'name': 'record:host_ipv4addr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:host_ipv4addr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host_ipv4addr'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:host_ipv4addr resource', 'tags': ['record:host_ipv4addr'], 'parameters': [{'name': 'record:host_ipv4addr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:host_ipv4addr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'bootfile': {'type': 'string', 'example': 'string'}, 'bootserver': {'type': 'string', 'example': 'string'}, 'configure_for_dhcp': {'type': 'string', 'example': 'bool'}, 'deny_bootp': {'type': 'string', 'example': 'bool'}, 'enable_pxe_lease_time': {'type': 'string', 'example': 'bool'}, 'ignore_client_requested_options': {'type': 'string', 'example': 'bool'}, 'ipv4addr': {'type': 'string', 'example': 'string'}, 'logic_filter_rules': {'type': 'string', 'example': "[{'filter': 'string', 'type': 'string'}]"}, 'mac': {'type': 'string', 'example': 'string'}, 'match_client': {'type': 'string', 'example': 'string'}, 'nextserver': {'type': 'string', 'example': 'string'}, 'options': {'type': 'string', 'example': "[{'name': 'string', 'num': 'uint', 'vendor_class': 'string', 'value': 'string', 'use_option': 'bool'}]"}, 'pxe_lease_time': {'type': 'string', 'example': 'uint'}, 'reserved_interface': {'type': 'string', 'example': 'string'}, 'use_bootfile': {'type': 'string', 'example': 'bool'}, 'use_bootserver': {'type': 'string', 'example': 'bool'}, 'use_deny_bootp': {'type': 'string', 'example': 'bool'}, 'use_for_ea_inheritance': {'type': 'string', 'example': 'bool'}, 'use_ignore_client_requested_options': {'type': 'string', 'example': 'bool'}, 'use_logic_filter_rules': {'type': 'string', 'example': 'bool'}, 'use_nextserver': {'type': 'string', 'example': 'bool'}, 'use_options': {'type': 'string', 'example': 'bool'}, 'use_pxe_lease_time': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host_ipv4addr'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:host_ipv6addr': {'get': {'tags': ['record:host_ipv6addr'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'duid', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv6addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv6prefix', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv6prefix_bits', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'network_view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host_ipv6addr'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:host_ipv6addr/{record:host_ipv6addr_reference}': {'get': {'tags': ['record:host_ipv6addr'], 'parameters': [{'name': 'record:host_ipv6addr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:host_ipv6addr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host_ipv6addr'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:host_ipv6addr resource', 'tags': ['record:host_ipv6addr'], 'parameters': [{'name': 'record:host_ipv6addr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:host_ipv6addr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'address_type': {'type': 'string', 'example': "['ADDRESS', 'PREFIX', 'BOTH']"}, 'configure_for_dhcp': {'type': 'string', 'example': 'bool'}, 'domain_name': {'type': 'string', 'example': 'string'}, 'domain_name_servers': {'type': 'string', 'example': 'string'}, 'duid': {'type': 'string', 'example': 'string'}, 'ipv6addr': {'type': 'string', 'example': 'string'}, 'ipv6prefix': {'type': 'string', 'example': 'string'}, 'ipv6prefix_bits': {'type': 'string', 'example': 'uint'}, 'match_client': {'type': 'string', 'example': 'string'}, 'options': {'type': 'string', 'example': "[{'name': 'string', 'num': 'uint', 'vendor_class': 'string', 'value': 'string', 'use_option': 'bool'}]"}, 'preferred_lifetime': {'type': 'string', 'example': 'uint'}, 'reserved_interface': {'type': 'string', 'example': 'string'}, 'use_domain_name': {'type': 'string', 'example': 'bool'}, 'use_domain_name_servers': {'type': 'string', 'example': 'bool'}, 'use_for_ea_inheritance': {'type': 'string', 'example': 'bool'}, 'use_options': {'type': 'string', 'example': 'bool'}, 'use_preferred_lifetime': {'type': 'string', 'example': 'bool'}, 'use_valid_lifetime': {'type': 'string', 'example': 'bool'}, 'valid_lifetime': {'type': 'string', 'example': 'uint'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_host_ipv6addr'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:mx': {'get': {'tags': ['record:mx'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'mail_exchanger', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'preference', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_mx'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:mx'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'mail_exchanger': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'preference': {'type': 'string', 'example': 'uint'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_mx'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:mx/{record:mx_reference}': {'get': {'tags': ['record:mx'], 'parameters': [{'name': 'record:mx_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:mx', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_mx'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:mx resource', 'tags': ['record:mx'], 'parameters': [{'name': 'record:mx_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:mx', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'mail_exchanger': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'preference': {'type': 'string', 'example': 'uint'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_mx'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:mx resource', 'tags': ['record:mx'], 'parameters': [{'name': 'record:mx_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:mx', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:naptr': {'get': {'tags': ['record:naptr'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'flags', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'order', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'preference', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'replacement', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'services', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_naptr'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:naptr'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'flags': {'type': 'string', 'example': 'string'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'order': {'type': 'string', 'example': 'uint'}, 'preference': {'type': 'string', 'example': 'uint'}, 'regexp': {'type': 'string', 'example': 'string'}, 'replacement': {'type': 'string', 'example': 'string'}, 'services': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_naptr'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:naptr/{record:naptr_reference}': {'get': {'tags': ['record:naptr'], 'parameters': [{'name': 'record:naptr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:naptr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_naptr'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:naptr resource', 'tags': ['record:naptr'], 'parameters': [{'name': 'record:naptr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:naptr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'flags': {'type': 'string', 'example': 'string'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'order': {'type': 'string', 'example': 'uint'}, 'preference': {'type': 'string', 'example': 'uint'}, 'regexp': {'type': 'string', 'example': 'string'}, 'replacement': {'type': 'string', 'example': 'string'}, 'services': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_naptr'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:naptr resource', 'tags': ['record:naptr'], 'parameters': [{'name': 'record:naptr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:naptr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:ns': {'get': {'tags': ['record:ns'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'nameserver', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ns'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:ns'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'addresses': {'type': 'string', 'example': "[{'address': 'string', 'auto_create_ptr': 'bool'}]"}, 'ms_delegation_name': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'nameserver': {'type': 'string', 'example': 'string'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ns'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:ns/{record:ns_reference}': {'get': {'tags': ['record:ns'], 'parameters': [{'name': 'record:ns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:ns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ns'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:ns resource', 'tags': ['record:ns'], 'parameters': [{'name': 'record:ns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:ns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'addresses': {'type': 'string', 'example': "[{'address': 'string', 'auto_create_ptr': 'bool'}]"}, 'ms_delegation_name': {'type': 'string', 'example': 'string'}, 'nameserver': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ns'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:ns resource', 'tags': ['record:ns'], 'parameters': [{'name': 'record:ns_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:ns', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:nsec': {'get': {'tags': ['record:nsec'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'next_owner_name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_nsec'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:nsec/{record:nsec_reference}': {'get': {'tags': ['record:nsec'], 'parameters': [{'name': 'record:nsec_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:nsec', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_nsec'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:nsec3': {'get': {'tags': ['record:nsec3'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'algorithm', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'flags', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'iterations', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_nsec3'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:nsec3/{record:nsec3_reference}': {'get': {'tags': ['record:nsec3'], 'parameters': [{'name': 'record:nsec3_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:nsec3', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_nsec3'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:nsec3param': {'get': {'tags': ['record:nsec3param'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'algorithm', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'flags', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'iterations', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_nsec3param'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:nsec3param/{record:nsec3param_reference}': {'get': {'tags': ['record:nsec3param'], 'parameters': [{'name': 'record:nsec3param_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:nsec3param', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_nsec3param'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:ptr': {'get': {'tags': ['record:ptr'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv4addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv6addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ptrdname', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ptr'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:ptr'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'ipv4addr': {'type': 'string', 'example': 'string'}, 'ipv6addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'ptrdname': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ptr'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:ptr/{record:ptr_reference}': {'get': {'tags': ['record:ptr'], 'parameters': [{'name': 'record:ptr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:ptr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ptr'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:ptr resource', 'tags': ['record:ptr'], 'parameters': [{'name': 'record:ptr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:ptr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'ipv4addr': {'type': 'string', 'example': 'string'}, 'ipv6addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'ptrdname': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_ptr'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:ptr resource', 'tags': ['record:ptr'], 'parameters': [{'name': 'record:ptr_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:ptr', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:rrsig': {'get': {'tags': ['record:rrsig'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'algorithm', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'key_tag', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'labels', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'original_ttl', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'signer_name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'type_covered', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_rrsig'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:rrsig/{record:rrsig_reference}': {'get': {'tags': ['record:rrsig'], 'parameters': [{'name': 'record:rrsig_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:rrsig', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_rrsig'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:srv': {'get': {'tags': ['record:srv'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'port', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'priority', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'target', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'weight', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_srv'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:srv'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'port': {'type': 'string', 'example': 'uint'}, 'priority': {'type': 'string', 'example': 'uint'}, 'target': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}, 'weight': {'type': 'string', 'example': 'uint'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_srv'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:srv/{record:srv_reference}': {'get': {'tags': ['record:srv'], 'parameters': [{'name': 'record:srv_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:srv', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_srv'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:srv resource', 'tags': ['record:srv'], 'parameters': [{'name': 'record:srv_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:srv', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'port': {'type': 'string', 'example': 'uint'}, 'priority': {'type': 'string', 'example': 'uint'}, 'target': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'weight': {'type': 'string', 'example': 'uint'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_srv'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:srv resource', 'tags': ['record:srv'], 'parameters': [{'name': 'record:srv_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:srv', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:tlsa': {'get': {'tags': ['record:tlsa'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_tlsa'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:tlsa'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'certificate_data': {'type': 'string', 'example': 'string'}, 'certificate_usage': {'type': 'string', 'example': 'uint'}, 'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'matched_type': {'type': 'string', 'example': 'uint'}, 'name': {'type': 'string', 'example': 'string'}, 'selector': {'type': 'string', 'example': 'uint'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_tlsa'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:tlsa/{record:tlsa_reference}': {'get': {'tags': ['record:tlsa'], 'parameters': [{'name': 'record:tlsa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:tlsa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_tlsa'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:tlsa resource', 'tags': ['record:tlsa'], 'parameters': [{'name': 'record:tlsa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:tlsa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'certificate_data': {'type': 'string', 'example': 'string'}, 'certificate_usage': {'type': 'string', 'example': 'uint'}, 'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'matched_type': {'type': 'string', 'example': 'uint'}, 'name': {'type': 'string', 'example': 'string'}, 'selector': {'type': 'string', 'example': 'uint'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_tlsa'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:tlsa resource', 'tags': ['record:tlsa'], 'parameters': [{'name': 'record:tlsa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:tlsa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:txt': {'get': {'tags': ['record:txt'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'creator', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ddns_principal', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'reclaimable', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'text', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_txt'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['record:txt'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'text': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_txt'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/record:txt/{record:txt_reference}': {'get': {'tags': ['record:txt'], 'parameters': [{'name': 'record:txt_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:txt', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_txt'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the record:txt resource', 'tags': ['record:txt'], 'parameters': [{'name': 'record:txt_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:txt', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'creator': {'type': 'string', 'example': "['STATIC', 'DYNAMIC', 'SYSTEM']"}, 'ddns_principal': {'type': 'string', 'example': 'string'}, 'ddns_protected': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forbid_reclamation': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'text': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/record_txt'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the record:txt resource', 'tags': ['record:txt'], 'parameters': [{'name': 'record:txt_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for record:txt', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/recordnamepolicy': {'get': {'tags': ['recordnamepolicy'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/recordnamepolicy'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['recordnamepolicy'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'is_default': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'regex': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/recordnamepolicy'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/recordnamepolicy/{recordnamepolicy_reference}': {'get': {'tags': ['recordnamepolicy'], 'parameters': [{'name': 'recordnamepolicy_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for recordnamepolicy', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/recordnamepolicy'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the recordnamepolicy resource', 'tags': ['recordnamepolicy'], 'parameters': [{'name': 'recordnamepolicy_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for recordnamepolicy', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'is_default': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'regex': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/recordnamepolicy'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the recordnamepolicy resource', 'tags': ['recordnamepolicy'], 'parameters': [{'name': 'recordnamepolicy_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for recordnamepolicy', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/ruleset': {'get': {'tags': ['ruleset'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'disabled', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ruleset'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['ruleset'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disabled': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'nxdomain_rules': {'type': 'string', 'example': "[{'action': 'enum', 'pattern': 'string'}]"}, 'type': {'type': 'string', 'example': "['NXDOMAIN', 'BLACKLIST']"}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ruleset'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/ruleset/{ruleset_reference}': {'get': {'tags': ['ruleset'], 'parameters': [{'name': 'ruleset_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ruleset', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ruleset'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the ruleset resource', 'tags': ['ruleset'], 'parameters': [{'name': 'ruleset_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ruleset', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disabled': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'nxdomain_rules': {'type': 'string', 'example': "[{'action': 'enum', 'pattern': 'string'}]"}, 'type': {'type': 'string', 'example': "['NXDOMAIN', 'BLACKLIST']"}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ruleset'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the ruleset resource', 'tags': ['ruleset'], 'parameters': [{'name': 'ruleset_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ruleset', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:a': {'get': {'tags': ['sharedrecord:a'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv4addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_a'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['sharedrecord:a'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'ipv4addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_a'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:a/{sharedrecord:a_reference}': {'get': {'tags': ['sharedrecord:a'], 'parameters': [{'name': 'sharedrecord:a_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:a', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_a'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the sharedrecord:a resource', 'tags': ['sharedrecord:a'], 'parameters': [{'name': 'sharedrecord:a_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:a', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'ipv4addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_a'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the sharedrecord:a resource', 'tags': ['sharedrecord:a'], 'parameters': [{'name': 'sharedrecord:a_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:a', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:aaaa': {'get': {'tags': ['sharedrecord:aaaa'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'ipv6addr', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_aaaa'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['sharedrecord:aaaa'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'ipv6addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_aaaa'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:aaaa/{sharedrecord:aaaa_reference}': {'get': {'tags': ['sharedrecord:aaaa'], 'parameters': [{'name': 'sharedrecord:aaaa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:aaaa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_aaaa'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the sharedrecord:aaaa resource', 'tags': ['sharedrecord:aaaa'], 'parameters': [{'name': 'sharedrecord:aaaa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:aaaa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'ipv6addr': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_aaaa'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the sharedrecord:aaaa resource', 'tags': ['sharedrecord:aaaa'], 'parameters': [{'name': 'sharedrecord:aaaa_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:aaaa', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:cname': {'get': {'tags': ['sharedrecord:cname'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'canonical', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_cname'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['sharedrecord:cname'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'canonical': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_cname'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:cname/{sharedrecord:cname_reference}': {'get': {'tags': ['sharedrecord:cname'], 'parameters': [{'name': 'sharedrecord:cname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:cname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_cname'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the sharedrecord:cname resource', 'tags': ['sharedrecord:cname'], 'parameters': [{'name': 'sharedrecord:cname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:cname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'canonical': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_cname'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the sharedrecord:cname resource', 'tags': ['sharedrecord:cname'], 'parameters': [{'name': 'sharedrecord:cname_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:cname', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:mx': {'get': {'tags': ['sharedrecord:mx'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'mail_exchanger', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'preference', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_mx'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['sharedrecord:mx'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'mail_exchanger': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'preference': {'type': 'string', 'example': 'uint'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_mx'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:mx/{sharedrecord:mx_reference}': {'get': {'tags': ['sharedrecord:mx'], 'parameters': [{'name': 'sharedrecord:mx_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:mx', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_mx'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the sharedrecord:mx resource', 'tags': ['sharedrecord:mx'], 'parameters': [{'name': 'sharedrecord:mx_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:mx', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'mail_exchanger': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'preference': {'type': 'string', 'example': 'uint'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_mx'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the sharedrecord:mx resource', 'tags': ['sharedrecord:mx'], 'parameters': [{'name': 'sharedrecord:mx_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:mx', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:srv': {'get': {'tags': ['sharedrecord:srv'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'port', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'priority', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'target', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'weight', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_srv'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['sharedrecord:srv'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'port': {'type': 'string', 'example': 'uint'}, 'priority': {'type': 'string', 'example': 'uint'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'target': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'weight': {'type': 'string', 'example': 'uint'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_srv'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:srv/{sharedrecord:srv_reference}': {'get': {'tags': ['sharedrecord:srv'], 'parameters': [{'name': 'sharedrecord:srv_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:srv', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_srv'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the sharedrecord:srv resource', 'tags': ['sharedrecord:srv'], 'parameters': [{'name': 'sharedrecord:srv_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:srv', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'port': {'type': 'string', 'example': 'uint'}, 'priority': {'type': 'string', 'example': 'uint'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'target': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}, 'weight': {'type': 'string', 'example': 'uint'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_srv'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the sharedrecord:srv resource', 'tags': ['sharedrecord:srv'], 'parameters': [{'name': 'sharedrecord:srv_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:srv', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:txt': {'get': {'tags': ['sharedrecord:txt'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'text', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_txt'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['sharedrecord:txt'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'text': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_txt'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecord:txt/{sharedrecord:txt_reference}': {'get': {'tags': ['sharedrecord:txt'], 'parameters': [{'name': 'sharedrecord:txt_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:txt', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_txt'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the sharedrecord:txt resource', 'tags': ['sharedrecord:txt'], 'parameters': [{'name': 'sharedrecord:txt_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:txt', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'shared_record_group': {'type': 'string', 'example': 'string'}, 'text': {'type': 'string', 'example': 'string'}, 'ttl': {'type': 'string', 'example': 'uint'}, 'use_ttl': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecord_txt'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the sharedrecord:txt resource', 'tags': ['sharedrecord:txt'], 'parameters': [{'name': 'sharedrecord:txt_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecord:txt', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecordgroup': {'get': {'tags': ['sharedrecordgroup'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecordgroup'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['sharedrecordgroup'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'record_name_policy': {'type': 'string', 'example': 'string'}, 'use_record_name_policy': {'type': 'string', 'example': 'bool'}, 'zone_associations': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecordgroup'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/sharedrecordgroup/{sharedrecordgroup_reference}': {'get': {'tags': ['sharedrecordgroup'], 'parameters': [{'name': 'sharedrecordgroup_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecordgroup', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecordgroup'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the sharedrecordgroup resource', 'tags': ['sharedrecordgroup'], 'parameters': [{'name': 'sharedrecordgroup_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecordgroup', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'record_name_policy': {'type': 'string', 'example': 'string'}, 'use_record_name_policy': {'type': 'string', 'example': 'bool'}, 'zone_associations': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/sharedrecordgroup'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the sharedrecordgroup resource', 'tags': ['sharedrecordgroup'], 'parameters': [{'name': 'sharedrecordgroup_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for sharedrecordgroup', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/view': {'get': {'tags': ['view'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'blacklist_action', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'blacklist_log_query', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'dns64_enabled', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'dnssec_enabled', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'dnssec_expired_signatures_enabled', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'dnssec_validation_enabled', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'enable_blacklist', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'filter_aaaa', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'forward_only', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'is_default', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'network_view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'nxdomain_log_query', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'nxdomain_redirect', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'recursion', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'root_name_server_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/view'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['view'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'blacklist_action': {'type': 'string', 'example': "['REDIRECT', 'REFUSE']"}, 'blacklist_log_query': {'type': 'string', 'example': 'bool'}, 'blacklist_redirect_addresses': {'type': 'string', 'example': 'string'}, 'blacklist_redirect_ttl': {'type': 'string', 'example': 'uint'}, 'blacklist_rulesets': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'custom_root_name_servers': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'ddns_principal_group': {'type': 'string', 'example': 'string'}, 'ddns_principal_tracking': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns_list': {'type': 'string', 'example': 'string'}, 'ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_secure': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'dns64_enabled': {'type': 'string', 'example': 'bool'}, 'dns64_groups': {'type': 'string', 'example': 'string'}, 'dnssec_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_expired_signatures_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_negative_trust_anchors': {'type': 'string', 'example': 'string'}, 'dnssec_trusted_keys': {'type': 'string', 'example': "[{'fqdn': 'string', 'algorithm': 'string', 'key': 'string', 'secure_entry_point': 'bool'}]"}, 'dnssec_validation_enabled': {'type': 'string', 'example': 'bool'}, 'enable_blacklist': {'type': 'string', 'example': 'bool'}, 'enable_fixed_rrset_order_fqdns': {'type': 'string', 'example': 'bool'}, 'enable_match_recursive_only': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'filter_aaaa': {'type': 'string', 'example': "['YES', 'NO', 'BREAK_DNSSEC']"}, 'filter_aaaa_list': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'fixed_rrset_order_fqdns': {'type': 'string', 'example': "[{'fqdn': 'string', 'record_type': 'enum'}]"}, 'forward_only': {'type': 'string', 'example': 'bool'}, 'forwarders': {'type': 'string', 'example': 'string'}, 'lame_ttl': {'type': 'string', 'example': 'uint'}, 'match_clients': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'match_destinations': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'max_cache_ttl': {'type': 'string', 'example': 'uint'}, 'max_ncache_ttl': {'type': 'string', 'example': 'uint'}, 'name': {'type': 'string', 'example': 'string'}, 'network_view': {'type': 'string', 'example': 'string'}, 'notify_delay': {'type': 'string', 'example': 'uint'}, 'nxdomain_log_query': {'type': 'string', 'example': 'bool'}, 'nxdomain_redirect': {'type': 'string', 'example': 'bool'}, 'nxdomain_redirect_addresses': {'type': 'string', 'example': 'string'}, 'nxdomain_redirect_addresses_v6': {'type': 'string', 'example': 'string'}, 'nxdomain_redirect_ttl': {'type': 'string', 'example': 'uint'}, 'nxdomain_rulesets': {'type': 'string', 'example': 'string'}, 'recursion': {'type': 'string', 'example': 'bool'}, 'response_rate_limiting': {'type': 'string', 'example': 'grid:responseratelimiting'}, 'root_name_server_type': {'type': 'string', 'example': "['CUSTOM', 'INTERNET']"}, 'rpz_drop_ip_rule_enabled': {'type': 'string', 'example': 'bool'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'string', 'example': 'uint'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'string', 'example': 'uint'}, 'rpz_qname_wait_recurse': {'type': 'string', 'example': 'bool'}, 'scavenging_settings': {'type': 'string', 'example': 'setting:scavenging'}, 'sortlist': {'type': 'string', 'example': "[{'address': 'string', 'match_list': 'string'}]"}, 'use_blacklist': {'type': 'string', 'example': 'bool'}, 'use_ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'use_ddns_patterns_restriction': {'type': 'string', 'example': 'bool'}, 'use_ddns_principal_security': {'type': 'string', 'example': 'bool'}, 'use_ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'use_ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'use_dns64': {'type': 'string', 'example': 'bool'}, 'use_dnssec': {'type': 'string', 'example': 'bool'}, 'use_filter_aaaa': {'type': 'string', 'example': 'bool'}, 'use_fixed_rrset_order_fqdns': {'type': 'string', 'example': 'bool'}, 'use_forwarders': {'type': 'string', 'example': 'bool'}, 'use_lame_ttl': {'type': 'string', 'example': 'bool'}, 'use_max_cache_ttl': {'type': 'string', 'example': 'bool'}, 'use_max_ncache_ttl': {'type': 'string', 'example': 'bool'}, 'use_nxdomain_redirect': {'type': 'string', 'example': 'bool'}, 'use_recursion': {'type': 'string', 'example': 'bool'}, 'use_response_rate_limiting': {'type': 'string', 'example': 'bool'}, 'use_root_name_server': {'type': 'string', 'example': 'bool'}, 'use_rpz_drop_ip_rule': {'type': 'string', 'example': 'bool'}, 'use_rpz_qname_wait_recurse': {'type': 'string', 'example': 'bool'}, 'use_scavenging_settings': {'type': 'string', 'example': 'bool'}, 'use_sortlist': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/view'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/view/{view_reference}': {'get': {'tags': ['view'], 'parameters': [{'name': 'view_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for view', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/view'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['view'], 'parameters': [{'name': 'view_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for view', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['run_scavenging']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'run_scavenging': {'type': 'string', 'example': {'action': ['ANALYZE', 'RECLAIM', 'ANALYZE_RECLAIM', 'RESET']}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the view resource', 'tags': ['view'], 'parameters': [{'name': 'view_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for view', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'blacklist_action': {'type': 'string', 'example': "['REDIRECT', 'REFUSE']"}, 'blacklist_log_query': {'type': 'string', 'example': 'bool'}, 'blacklist_redirect_addresses': {'type': 'string', 'example': 'string'}, 'blacklist_redirect_ttl': {'type': 'string', 'example': 'uint'}, 'blacklist_rulesets': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'custom_root_name_servers': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'ddns_principal_group': {'type': 'string', 'example': 'string'}, 'ddns_principal_tracking': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns_list': {'type': 'string', 'example': 'string'}, 'ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_secure': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'dns64_enabled': {'type': 'string', 'example': 'bool'}, 'dns64_groups': {'type': 'string', 'example': 'string'}, 'dnssec_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_expired_signatures_enabled': {'type': 'string', 'example': 'bool'}, 'dnssec_negative_trust_anchors': {'type': 'string', 'example': 'string'}, 'dnssec_trusted_keys': {'type': 'string', 'example': "[{'fqdn': 'string', 'algorithm': 'string', 'key': 'string', 'secure_entry_point': 'bool'}]"}, 'dnssec_validation_enabled': {'type': 'string', 'example': 'bool'}, 'enable_blacklist': {'type': 'string', 'example': 'bool'}, 'enable_fixed_rrset_order_fqdns': {'type': 'string', 'example': 'bool'}, 'enable_match_recursive_only': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'filter_aaaa': {'type': 'string', 'example': "['YES', 'NO', 'BREAK_DNSSEC']"}, 'filter_aaaa_list': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'fixed_rrset_order_fqdns': {'type': 'string', 'example': "[{'fqdn': 'string', 'record_type': 'enum'}]"}, 'forward_only': {'type': 'string', 'example': 'bool'}, 'forwarders': {'type': 'string', 'example': 'string'}, 'lame_ttl': {'type': 'string', 'example': 'uint'}, 'match_clients': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'match_destinations': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'max_cache_ttl': {'type': 'string', 'example': 'uint'}, 'max_ncache_ttl': {'type': 'string', 'example': 'uint'}, 'name': {'type': 'string', 'example': 'string'}, 'network_view': {'type': 'string', 'example': 'string'}, 'notify_delay': {'type': 'string', 'example': 'uint'}, 'nxdomain_log_query': {'type': 'string', 'example': 'bool'}, 'nxdomain_redirect': {'type': 'string', 'example': 'bool'}, 'nxdomain_redirect_addresses': {'type': 'string', 'example': 'string'}, 'nxdomain_redirect_addresses_v6': {'type': 'string', 'example': 'string'}, 'nxdomain_redirect_ttl': {'type': 'string', 'example': 'uint'}, 'nxdomain_rulesets': {'type': 'string', 'example': 'string'}, 'recursion': {'type': 'string', 'example': 'bool'}, 'response_rate_limiting': {'type': 'string', 'example': 'grid:responseratelimiting'}, 'root_name_server_type': {'type': 'string', 'example': "['CUSTOM', 'INTERNET']"}, 'rpz_drop_ip_rule_enabled': {'type': 'string', 'example': 'bool'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'string', 'example': 'uint'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'string', 'example': 'uint'}, 'rpz_qname_wait_recurse': {'type': 'string', 'example': 'bool'}, 'scavenging_settings': {'type': 'string', 'example': 'setting:scavenging'}, 'sortlist': {'type': 'string', 'example': "[{'address': 'string', 'match_list': 'string'}]"}, 'use_blacklist': {'type': 'string', 'example': 'bool'}, 'use_ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'use_ddns_patterns_restriction': {'type': 'string', 'example': 'bool'}, 'use_ddns_principal_security': {'type': 'string', 'example': 'bool'}, 'use_ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'use_ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'use_dns64': {'type': 'string', 'example': 'bool'}, 'use_dnssec': {'type': 'string', 'example': 'bool'}, 'use_filter_aaaa': {'type': 'string', 'example': 'bool'}, 'use_fixed_rrset_order_fqdns': {'type': 'string', 'example': 'bool'}, 'use_forwarders': {'type': 'string', 'example': 'bool'}, 'use_lame_ttl': {'type': 'string', 'example': 'bool'}, 'use_max_cache_ttl': {'type': 'string', 'example': 'bool'}, 'use_max_ncache_ttl': {'type': 'string', 'example': 'bool'}, 'use_nxdomain_redirect': {'type': 'string', 'example': 'bool'}, 'use_recursion': {'type': 'string', 'example': 'bool'}, 'use_response_rate_limiting': {'type': 'string', 'example': 'bool'}, 'use_root_name_server': {'type': 'string', 'example': 'bool'}, 'use_rpz_drop_ip_rule': {'type': 'string', 'example': 'bool'}, 'use_rpz_qname_wait_recurse': {'type': 'string', 'example': 'bool'}, 'use_scavenging_settings': {'type': 'string', 'example': 'bool'}, 'use_sortlist': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/view'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the view resource', 'tags': ['view'], 'parameters': [{'name': 'view_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for view', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_auth': {'get': {'tags': ['zone_auth'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'dnssec_ksk_rollover_date', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'dnssec_zsk_rollover_date', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'fqdn', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'parent', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone_format', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_auth'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['zone_auth'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'allow_active_dir': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'allow_gss_tsig_for_underscore_zone': {'type': 'string', 'example': 'bool'}, 'allow_gss_tsig_zone_updates': {'type': 'string', 'example': 'bool'}, 'allow_query': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_transfer': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_update': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_update_forwarding': {'type': 'string', 'example': 'bool'}, 'comment': {'type': 'string', 'example': 'string'}, 'copy_xfer_to_notify': {'type': 'string', 'example': 'bool'}, 'create_ptr_for_bulk_hosts': {'type': 'string', 'example': 'bool'}, 'create_ptr_for_hosts': {'type': 'string', 'example': 'bool'}, 'create_underscore_zones': {'type': 'string', 'example': 'bool'}, 'ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'ddns_principal_group': {'type': 'string', 'example': 'string'}, 'ddns_principal_tracking': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns_list': {'type': 'string', 'example': 'string'}, 'ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_secure': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'disable_forwarding': {'type': 'string', 'example': 'bool'}, 'dns_integrity_enable': {'type': 'string', 'example': 'bool'}, 'dns_integrity_frequency': {'type': 'string', 'example': 'uint'}, 'dns_integrity_member': {'type': 'string', 'example': 'string'}, 'dns_integrity_verbose_logging': {'type': 'string', 'example': 'bool'}, 'dnssec_key_params': {'type': 'string', 'example': 'dnsseckeyparams'}, 'dnssec_keys': {'type': 'string', 'example': "[{'tag': 'uint', 'status': 'enum', 'next_event_date': 'timestamp', 'type': 'enum', 'algorithm': 'enum', 'public_key': 'string'}]"}, 'do_host_abstraction': {'type': 'string', 'example': 'bool'}, 'effective_check_names_policy': {'type': 'string', 'example': "['FAIL', 'WARN']"}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_primaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'external_secondaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'fqdn': {'type': 'string', 'example': 'string'}, 'grid_primary': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'grid_secondaries': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'import_from': {'type': 'string', 'example': 'string'}, 'locked': {'type': 'string', 'example': 'bool'}, 'member_soa_mnames': {'type': 'string', 'example': "[{'grid_primary': 'string', 'ms_server_primary': 'string', 'mname': 'string', 'dns_mname': 'string'}]"}, 'ms_ad_integrated': {'type': 'string', 'example': 'bool'}, 'ms_allow_transfer': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'ms_allow_transfer_mode': {'type': 'string', 'example': "['ADDRESS_AC', 'ANY', 'ANY_NS', 'NONE']"}, 'ms_dc_ns_record_creation': {'type': 'string', 'example': "[{'address': 'string', 'comment': 'string'}]"}, 'ms_ddns_mode': {'type': 'string', 'example': "['ANY', 'NONE', 'SECURE']"}, 'ms_primaries': {'type': 'string', 'example': "[{'address': 'string', 'is_master': 'bool', 'ns_ip': 'string', 'ns_name': 'string', 'stealth': 'bool', 'shared_with_ms_parent_delegation': 'bool'}]"}, 'ms_secondaries': {'type': 'string', 'example': "[{'address': 'string', 'is_master': 'bool', 'ns_ip': 'string', 'ns_name': 'string', 'stealth': 'bool', 'shared_with_ms_parent_delegation': 'bool'}]"}, 'ms_sync_disabled': {'type': 'string', 'example': 'bool'}, 'notify_delay': {'type': 'string', 'example': 'uint'}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'record_name_policy': {'type': 'string', 'example': 'string'}, 'restart_if_needed': {'type': 'string', 'example': 'bool'}, 'scavenging_settings': {'type': 'string', 'example': 'setting:scavenging'}, 'set_soa_serial_number': {'type': 'string', 'example': 'bool'}, 'soa_default_ttl': {'type': 'string', 'example': 'uint'}, 'soa_email': {'type': 'string', 'example': 'string'}, 'soa_expire': {'type': 'string', 'example': 'uint'}, 'soa_negative_ttl': {'type': 'string', 'example': 'uint'}, 'soa_refresh': {'type': 'string', 'example': 'uint'}, 'soa_retry': {'type': 'string', 'example': 'uint'}, 'soa_serial_number': {'type': 'string', 'example': 'uint'}, 'srgs': {'type': 'string', 'example': 'string'}, 'update_forwarding': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'use_allow_active_dir': {'type': 'string', 'example': 'bool'}, 'use_allow_query': {'type': 'string', 'example': 'bool'}, 'use_allow_transfer': {'type': 'string', 'example': 'bool'}, 'use_allow_update': {'type': 'string', 'example': 'bool'}, 'use_allow_update_forwarding': {'type': 'string', 'example': 'bool'}, 'use_check_names_policy': {'type': 'string', 'example': 'bool'}, 'use_copy_xfer_to_notify': {'type': 'string', 'example': 'bool'}, 'use_ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'use_ddns_patterns_restriction': {'type': 'string', 'example': 'bool'}, 'use_ddns_principal_security': {'type': 'string', 'example': 'bool'}, 'use_ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'use_ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'use_dnssec_key_params': {'type': 'string', 'example': 'bool'}, 'use_external_primary': {'type': 'string', 'example': 'bool'}, 'use_grid_zone_timer': {'type': 'string', 'example': 'bool'}, 'use_import_from': {'type': 'string', 'example': 'bool'}, 'use_notify_delay': {'type': 'string', 'example': 'bool'}, 'use_record_name_policy': {'type': 'string', 'example': 'bool'}, 'use_scavenging_settings': {'type': 'string', 'example': 'bool'}, 'use_soa_email': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}, 'zone_format': {'type': 'string', 'example': "['FORWARD', 'IPV4', 'IPV6']"}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_auth'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_auth/{zone_auth_reference}': {'get': {'tags': ['zone_auth'], 'parameters': [{'name': 'zone_auth_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_auth', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_auth'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['zone_auth'], 'parameters': [{'name': 'zone_auth_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_auth', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['copyzonerecords', 'dnssec_export', 'dnssec_get_zone_keys', 'dnssec_operation', 'dnssec_set_zone_keys', 'dnssecgetkskrollover', 'execute_dns_parent_check', 'lock_unlock_zone', 'run_scavenging']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'copyzonerecords': {'type': 'string', 'example': {'destination_zone': 'string', 'clear_destination_first': 'bool', 'replace_existing_records': 'bool', 'select_records': ['A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SRV', 'TLSA', 'TXT', 'HOST', 'BULK_HOST', 'DNAME', 'NAPTR', 'RESOURCE_RECORD']}}, 'dnssec_export': {'type': 'string', 'example': {'operation': ['EXPORT_DS', 'EXPORT_ANCHORS', 'EXPORT_DNSKEY']}}, 'dnssec_get_zone_keys': {'type': 'string', 'example': {'key_pair_type': ['KSK', 'ZSK']}}, 'dnssec_operation': {'type': 'string', 'example': {'operation': ['IMPORT_DS', 'ROLLOVER_KSK', 'SIGN', 'UNSIGN', 'ROLLOVER_ZSK', 'RESIGN'], 'buffer': 'string'}}, 'dnssec_set_zone_keys': {'type': 'string', 'example': {'token': 'string', 'key_pair_type': ['KSK', 'ZSK']}}, 'dnssecgetkskrollover': {'type': 'string', 'example': {'num_days_to_countdown': 'uint'}}, 'lock_unlock_zone': {'type': 'string', 'example': {'operation': ['LOCK', 'UNLOCK']}}, 'run_scavenging': {'type': 'string', 'example': {'action': ['ANALYZE', 'RECLAIM', 'ANALYZE_RECLAIM', 'RESET']}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the zone_auth resource', 'tags': ['zone_auth'], 'parameters': [{'name': 'zone_auth_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_auth', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'allow_active_dir': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'allow_gss_tsig_for_underscore_zone': {'type': 'string', 'example': 'bool'}, 'allow_gss_tsig_zone_updates': {'type': 'string', 'example': 'bool'}, 'allow_query': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_transfer': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_update': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'allow_update_forwarding': {'type': 'string', 'example': 'bool'}, 'comment': {'type': 'string', 'example': 'string'}, 'copy_xfer_to_notify': {'type': 'string', 'example': 'bool'}, 'create_ptr_for_bulk_hosts': {'type': 'string', 'example': 'bool'}, 'create_ptr_for_hosts': {'type': 'string', 'example': 'bool'}, 'create_underscore_zones': {'type': 'string', 'example': 'bool'}, 'ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'ddns_principal_group': {'type': 'string', 'example': 'string'}, 'ddns_principal_tracking': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_patterns_list': {'type': 'string', 'example': 'string'}, 'ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_secure': {'type': 'string', 'example': 'bool'}, 'ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'disable': {'type': 'string', 'example': 'bool'}, 'disable_forwarding': {'type': 'string', 'example': 'bool'}, 'dns_integrity_enable': {'type': 'string', 'example': 'bool'}, 'dns_integrity_frequency': {'type': 'string', 'example': 'uint'}, 'dns_integrity_member': {'type': 'string', 'example': 'string'}, 'dns_integrity_verbose_logging': {'type': 'string', 'example': 'bool'}, 'dnssec_key_params': {'type': 'string', 'example': 'dnsseckeyparams'}, 'dnssec_keys': {'type': 'string', 'example': "[{'tag': 'uint', 'status': 'enum', 'next_event_date': 'timestamp', 'type': 'enum', 'algorithm': 'enum', 'public_key': 'string'}]"}, 'do_host_abstraction': {'type': 'string', 'example': 'bool'}, 'effective_check_names_policy': {'type': 'string', 'example': "['FAIL', 'WARN']"}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_primaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'external_secondaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'grid_primary': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'grid_secondaries': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'import_from': {'type': 'string', 'example': 'string'}, 'locked': {'type': 'string', 'example': 'bool'}, 'member_soa_mnames': {'type': 'string', 'example': "[{'grid_primary': 'string', 'ms_server_primary': 'string', 'mname': 'string', 'dns_mname': 'string'}]"}, 'ms_ad_integrated': {'type': 'string', 'example': 'bool'}, 'ms_allow_transfer': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'ms_allow_transfer_mode': {'type': 'string', 'example': "['ADDRESS_AC', 'ANY', 'ANY_NS', 'NONE']"}, 'ms_dc_ns_record_creation': {'type': 'string', 'example': "[{'address': 'string', 'comment': 'string'}]"}, 'ms_ddns_mode': {'type': 'string', 'example': "['ANY', 'NONE', 'SECURE']"}, 'ms_primaries': {'type': 'string', 'example': "[{'address': 'string', 'is_master': 'bool', 'ns_ip': 'string', 'ns_name': 'string', 'stealth': 'bool', 'shared_with_ms_parent_delegation': 'bool'}]"}, 'ms_secondaries': {'type': 'string', 'example': "[{'address': 'string', 'is_master': 'bool', 'ns_ip': 'string', 'ns_name': 'string', 'stealth': 'bool', 'shared_with_ms_parent_delegation': 'bool'}]"}, 'ms_sync_disabled': {'type': 'string', 'example': 'bool'}, 'notify_delay': {'type': 'string', 'example': 'uint'}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'record_name_policy': {'type': 'string', 'example': 'string'}, 'restart_if_needed': {'type': 'string', 'example': 'bool'}, 'scavenging_settings': {'type': 'string', 'example': 'setting:scavenging'}, 'set_soa_serial_number': {'type': 'string', 'example': 'bool'}, 'soa_default_ttl': {'type': 'string', 'example': 'uint'}, 'soa_email': {'type': 'string', 'example': 'string'}, 'soa_expire': {'type': 'string', 'example': 'uint'}, 'soa_negative_ttl': {'type': 'string', 'example': 'uint'}, 'soa_refresh': {'type': 'string', 'example': 'uint'}, 'soa_retry': {'type': 'string', 'example': 'uint'}, 'soa_serial_number': {'type': 'string', 'example': 'uint'}, 'srgs': {'type': 'string', 'example': 'string'}, 'update_forwarding': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'use_allow_active_dir': {'type': 'string', 'example': 'bool'}, 'use_allow_query': {'type': 'string', 'example': 'bool'}, 'use_allow_transfer': {'type': 'string', 'example': 'bool'}, 'use_allow_update': {'type': 'string', 'example': 'bool'}, 'use_allow_update_forwarding': {'type': 'string', 'example': 'bool'}, 'use_check_names_policy': {'type': 'string', 'example': 'bool'}, 'use_copy_xfer_to_notify': {'type': 'string', 'example': 'bool'}, 'use_ddns_force_creation_timestamp_update': {'type': 'string', 'example': 'bool'}, 'use_ddns_patterns_restriction': {'type': 'string', 'example': 'bool'}, 'use_ddns_principal_security': {'type': 'string', 'example': 'bool'}, 'use_ddns_restrict_protected': {'type': 'string', 'example': 'bool'}, 'use_ddns_restrict_static': {'type': 'string', 'example': 'bool'}, 'use_dnssec_key_params': {'type': 'string', 'example': 'bool'}, 'use_external_primary': {'type': 'string', 'example': 'bool'}, 'use_grid_zone_timer': {'type': 'string', 'example': 'bool'}, 'use_import_from': {'type': 'string', 'example': 'bool'}, 'use_notify_delay': {'type': 'string', 'example': 'bool'}, 'use_record_name_policy': {'type': 'string', 'example': 'bool'}, 'use_scavenging_settings': {'type': 'string', 'example': 'bool'}, 'use_soa_email': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_auth'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the zone_auth resource', 'tags': ['zone_auth'], 'parameters': [{'name': 'zone_auth_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_auth', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_auth_discrepancy': {'get': {'tags': ['zone_auth_discrepancy'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'severity', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_auth_discrepancy'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_auth_discrepancy/{zone_auth_discrepancy_reference}': {'get': {'tags': ['zone_auth_discrepancy'], 'parameters': [{'name': 'zone_auth_discrepancy_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_auth_discrepancy', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_auth_discrepancy'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_delegated': {'get': {'tags': ['zone_delegated'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'fqdn', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'parent', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone_format', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_delegated'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['zone_delegated'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'delegate_to': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'delegated_ttl': {'type': 'string', 'example': 'uint'}, 'disable': {'type': 'string', 'example': 'bool'}, 'enable_rfc2317_exclusion': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'fqdn': {'type': 'string', 'example': 'string'}, 'locked': {'type': 'string', 'example': 'bool'}, 'ms_ad_integrated': {'type': 'string', 'example': 'bool'}, 'ms_ddns_mode': {'type': 'string', 'example': "['ANY', 'NONE', 'SECURE']"}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'use_delegated_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}, 'zone_format': {'type': 'string', 'example': "['FORWARD', 'IPV4', 'IPV6']"}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_delegated'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_delegated/{zone_delegated_reference}': {'get': {'tags': ['zone_delegated'], 'parameters': [{'name': 'zone_delegated_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_delegated', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_delegated'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['zone_delegated'], 'parameters': [{'name': 'zone_delegated_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_delegated', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['lock_unlock_zone']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'lock_unlock_zone': {'type': 'string', 'example': {'operation': ['LOCK', 'UNLOCK']}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the zone_delegated resource', 'tags': ['zone_delegated'], 'parameters': [{'name': 'zone_delegated_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_delegated', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'delegate_to': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'delegated_ttl': {'type': 'string', 'example': 'uint'}, 'disable': {'type': 'string', 'example': 'bool'}, 'enable_rfc2317_exclusion': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'locked': {'type': 'string', 'example': 'bool'}, 'ms_ad_integrated': {'type': 'string', 'example': 'bool'}, 'ms_ddns_mode': {'type': 'string', 'example': "['ANY', 'NONE', 'SECURE']"}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'use_delegated_ttl': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_delegated'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the zone_delegated resource', 'tags': ['zone_delegated'], 'parameters': [{'name': 'zone_delegated_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_delegated', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_forward': {'get': {'tags': ['zone_forward'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'fqdn', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'parent', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone_format', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_forward'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['zone_forward'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_ns_group': {'type': 'string', 'example': 'string'}, 'forward_to': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'forwarders_only': {'type': 'string', 'example': 'bool'}, 'forwarding_servers': {'type': 'string', 'example': "[{'name': 'string', 'forwarders_only': 'bool', 'forward_to': 'extserver', 'use_override_forwarders': 'bool'}]"}, 'fqdn': {'type': 'string', 'example': 'string'}, 'locked': {'type': 'string', 'example': 'bool'}, 'ms_ad_integrated': {'type': 'string', 'example': 'bool'}, 'ms_ddns_mode': {'type': 'string', 'example': "['ANY', 'NONE', 'SECURE']"}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'view': {'type': 'string', 'example': 'string'}, 'zone_format': {'type': 'string', 'example': "['FORWARD', 'IPV4', 'IPV6']"}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_forward'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_forward/{zone_forward_reference}': {'get': {'tags': ['zone_forward'], 'parameters': [{'name': 'zone_forward_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_forward', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_forward'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['zone_forward'], 'parameters': [{'name': 'zone_forward_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_forward', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['lock_unlock_zone']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'lock_unlock_zone': {'type': 'string', 'example': {'operation': ['LOCK', 'UNLOCK']}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the zone_forward resource', 'tags': ['zone_forward'], 'parameters': [{'name': 'zone_forward_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_forward', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_ns_group': {'type': 'string', 'example': 'string'}, 'forward_to': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'forwarders_only': {'type': 'string', 'example': 'bool'}, 'forwarding_servers': {'type': 'string', 'example': "[{'name': 'string', 'forwarders_only': 'bool', 'forward_to': 'extserver', 'use_override_forwarders': 'bool'}]"}, 'locked': {'type': 'string', 'example': 'bool'}, 'ms_ad_integrated': {'type': 'string', 'example': 'bool'}, 'ms_ddns_mode': {'type': 'string', 'example': "['ANY', 'NONE', 'SECURE']"}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_forward'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the zone_forward resource', 'tags': ['zone_forward'], 'parameters': [{'name': 'zone_forward_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_forward', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_rp': {'get': {'tags': ['zone_rp'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'fqdn', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'parent', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_rp'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['zone_rp'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_primaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'external_secondaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'fireeye_rule_mapping': {'type': 'string', 'example': 'fireeye:rulemapping'}, 'fqdn': {'type': 'string', 'example': 'string'}, 'grid_primary': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'grid_secondaries': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'locked': {'type': 'string', 'example': 'bool'}, 'member_soa_mnames': {'type': 'string', 'example': "[{'grid_primary': 'string', 'ms_server_primary': 'string', 'mname': 'string', 'dns_mname': 'string'}]"}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'record_name_policy': {'type': 'string', 'example': 'string'}, 'rpz_drop_ip_rule_enabled': {'type': 'string', 'example': 'bool'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'string', 'example': 'uint'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'string', 'example': 'uint'}, 'rpz_policy': {'type': 'string', 'example': "['DISABLED', 'GIVEN', 'NODATA', 'NXDOMAIN', 'PASSTHRU', 'SUBSTITUTE']"}, 'rpz_severity': {'type': 'string', 'example': "['CRITICAL', 'MAJOR', 'WARNING', 'INFORMATIONAL']"}, 'rpz_type': {'type': 'string', 'example': "['LOCAL', 'FIREEYE', 'FEED']"}, 'set_soa_serial_number': {'type': 'string', 'example': 'bool'}, 'soa_default_ttl': {'type': 'string', 'example': 'uint'}, 'soa_email': {'type': 'string', 'example': 'string'}, 'soa_expire': {'type': 'string', 'example': 'uint'}, 'soa_negative_ttl': {'type': 'string', 'example': 'uint'}, 'soa_refresh': {'type': 'string', 'example': 'uint'}, 'soa_retry': {'type': 'string', 'example': 'uint'}, 'soa_serial_number': {'type': 'string', 'example': 'uint'}, 'substitute_name': {'type': 'string', 'example': 'string'}, 'use_external_primary': {'type': 'string', 'example': 'bool'}, 'use_grid_zone_timer': {'type': 'string', 'example': 'bool'}, 'use_record_name_policy': {'type': 'string', 'example': 'bool'}, 'use_rpz_drop_ip_rule': {'type': 'string', 'example': 'bool'}, 'use_soa_email': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_rp'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_rp/{zone_rp_reference}': {'get': {'tags': ['zone_rp'], 'parameters': [{'name': 'zone_rp_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_rp', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_rp'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['zone_rp'], 'parameters': [{'name': 'zone_rp_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_rp', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['copy_rpz_records', 'lock_unlock_zone']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'copy_rpz_records': {'type': 'string', 'example': {'dest_zone': 'string', 'dest_view': 'string', 'clear_destination_first': 'bool', 'replace_existing_records': 'bool', 'select_records': ['PassthruIpaddr', 'PassthruDomain', 'BlockNxdomainIpaddr', 'BlockNxdomainDomain', 'BlockNoDataIpaddr', 'BlockNoDataDomain', 'SubstituteARecord', 'SubstituteAAAARecord', 'SubstituteCName', 'SubstituteMXRecord', 'SubstituteNAPTRRecord', 'SubstitutePTRRecord', 'SubstituteSRVRecord', 'SubstituteTXTRecord', 'SubstituteIPv4AddressRecord', 'SubstituteIPv6AddressRecord', 'SubstituteIPAddressCname', 'PassthruClientIpaddr', 'BlockNxdomainClientIpaddr', 'BlockNoDataClientIpaddr', 'SubstituteClientIPAddressCname']}}, 'lock_unlock_zone': {'type': 'string', 'example': {'operation': ['LOCK', 'UNLOCK']}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the zone_rp resource', 'tags': ['zone_rp'], 'parameters': [{'name': 'zone_rp_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_rp', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_primaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'external_secondaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'fireeye_rule_mapping': {'type': 'string', 'example': 'fireeye:rulemapping'}, 'grid_primary': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'grid_secondaries': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'locked': {'type': 'string', 'example': 'bool'}, 'member_soa_mnames': {'type': 'string', 'example': "[{'grid_primary': 'string', 'ms_server_primary': 'string', 'mname': 'string', 'dns_mname': 'string'}]"}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'record_name_policy': {'type': 'string', 'example': 'string'}, 'rpz_drop_ip_rule_enabled': {'type': 'string', 'example': 'bool'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'string', 'example': 'uint'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'string', 'example': 'uint'}, 'rpz_policy': {'type': 'string', 'example': "['DISABLED', 'GIVEN', 'NODATA', 'NXDOMAIN', 'PASSTHRU', 'SUBSTITUTE']"}, 'rpz_severity': {'type': 'string', 'example': "['CRITICAL', 'MAJOR', 'WARNING', 'INFORMATIONAL']"}, 'set_soa_serial_number': {'type': 'string', 'example': 'bool'}, 'soa_default_ttl': {'type': 'string', 'example': 'uint'}, 'soa_email': {'type': 'string', 'example': 'string'}, 'soa_expire': {'type': 'string', 'example': 'uint'}, 'soa_negative_ttl': {'type': 'string', 'example': 'uint'}, 'soa_refresh': {'type': 'string', 'example': 'uint'}, 'soa_retry': {'type': 'string', 'example': 'uint'}, 'soa_serial_number': {'type': 'string', 'example': 'uint'}, 'substitute_name': {'type': 'string', 'example': 'string'}, 'use_external_primary': {'type': 'string', 'example': 'bool'}, 'use_grid_zone_timer': {'type': 'string', 'example': 'bool'}, 'use_record_name_policy': {'type': 'string', 'example': 'bool'}, 'use_rpz_drop_ip_rule': {'type': 'string', 'example': 'bool'}, 'use_soa_email': {'type': 'string', 'example': 'bool'}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_rp'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the zone_rp resource', 'tags': ['zone_rp'], 'parameters': [{'name': 'zone_rp_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_rp', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_stub': {'get': {'tags': ['zone_stub'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'fqdn', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'parent', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'zone_format', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_stub'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['zone_stub'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'disable_forwarding': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_ns_group': {'type': 'string', 'example': 'string'}, 'fqdn': {'type': 'string', 'example': 'string'}, 'locked': {'type': 'string', 'example': 'bool'}, 'ms_ad_integrated': {'type': 'string', 'example': 'bool'}, 'ms_ddns_mode': {'type': 'string', 'example': "['ANY', 'NONE', 'SECURE']"}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'stub_from': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'stub_members': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'stub_msservers': {'type': 'string', 'example': "[{'address': 'string', 'is_master': 'bool', 'ns_ip': 'string', 'ns_name': 'string', 'stealth': 'bool', 'shared_with_ms_parent_delegation': 'bool'}]"}, 'view': {'type': 'string', 'example': 'string'}, 'zone_format': {'type': 'string', 'example': "['FORWARD', 'IPV4', 'IPV6']"}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_stub'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/zone_stub/{zone_stub_reference}': {'get': {'tags': ['zone_stub'], 'parameters': [{'name': 'zone_stub_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_stub', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_stub'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['zone_stub'], 'parameters': [{'name': 'zone_stub_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_stub', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['lock_unlock_zone']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'lock_unlock_zone': {'type': 'string', 'example': {'operation': ['LOCK', 'UNLOCK']}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the zone_stub resource', 'tags': ['zone_stub'], 'parameters': [{'name': 'zone_stub_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_stub', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'disable_forwarding': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_ns_group': {'type': 'string', 'example': 'string'}, 'locked': {'type': 'string', 'example': 'bool'}, 'ms_ad_integrated': {'type': 'string', 'example': 'bool'}, 'ms_ddns_mode': {'type': 'string', 'example': "['ANY', 'NONE', 'SECURE']"}, 'ns_group': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}, 'stub_from': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'stub_members': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'stub_msservers': {'type': 'string', 'example': "[{'address': 'string', 'is_master': 'bool', 'ns_ip': 'string', 'ns_name': 'string', 'stealth': 'bool', 'shared_with_ms_parent_delegation': 'bool'}]"}, 'view': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/zone_stub'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the zone_stub resource', 'tags': ['zone_stub'], 'parameters': [{'name': 'zone_stub_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for zone_stub', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup': {'get': {'tags': ['nsgroup'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['nsgroup'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_primaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'external_secondaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'grid_primary': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'grid_secondaries': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'is_grid_default': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'use_external_primary': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup/{nsgroup_reference}': {'get': {'tags': ['nsgroup'], 'parameters': [{'name': 'nsgroup_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the nsgroup resource', 'tags': ['nsgroup'], 'parameters': [{'name': 'nsgroup_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_primaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'external_secondaries': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'grid_primary': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'grid_secondaries': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}, 'is_grid_default': {'type': 'string', 'example': 'bool'}, 'name': {'type': 'string', 'example': 'string'}, 'use_external_primary': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the nsgroup resource', 'tags': ['nsgroup'], 'parameters': [{'name': 'nsgroup_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup:delegation': {'get': {'tags': ['nsgroup:delegation'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_delegation'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['nsgroup:delegation'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'delegate_to': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_delegation'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup:delegation/{nsgroup:delegation_reference}': {'get': {'tags': ['nsgroup:delegation'], 'parameters': [{'name': 'nsgroup:delegation_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:delegation', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_delegation'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the nsgroup:delegation resource', 'tags': ['nsgroup:delegation'], 'parameters': [{'name': 'nsgroup:delegation_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:delegation', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'delegate_to': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_delegation'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the nsgroup:delegation resource', 'tags': ['nsgroup:delegation'], 'parameters': [{'name': 'nsgroup:delegation_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:delegation', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup:forwardingmember': {'get': {'tags': ['nsgroup:forwardingmember'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_forwardingmember'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['nsgroup:forwardingmember'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forwarding_servers': {'type': 'string', 'example': "[{'name': 'string', 'forwarders_only': 'bool', 'forward_to': 'extserver', 'use_override_forwarders': 'bool'}]"}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_forwardingmember'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup:forwardingmember/{nsgroup:forwardingmember_reference}': {'get': {'tags': ['nsgroup:forwardingmember'], 'parameters': [{'name': 'nsgroup:forwardingmember_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:forwardingmember', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_forwardingmember'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the nsgroup:forwardingmember resource', 'tags': ['nsgroup:forwardingmember'], 'parameters': [{'name': 'nsgroup:forwardingmember_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:forwardingmember', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'forwarding_servers': {'type': 'string', 'example': "[{'name': 'string', 'forwarders_only': 'bool', 'forward_to': 'extserver', 'use_override_forwarders': 'bool'}]"}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_forwardingmember'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the nsgroup:forwardingmember resource', 'tags': ['nsgroup:forwardingmember'], 'parameters': [{'name': 'nsgroup:forwardingmember_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:forwardingmember', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup:stubmember': {'get': {'tags': ['nsgroup:stubmember'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_stubmember'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['nsgroup:stubmember'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'stub_members': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_stubmember'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup:stubmember/{nsgroup:stubmember_reference}': {'get': {'tags': ['nsgroup:stubmember'], 'parameters': [{'name': 'nsgroup:stubmember_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:stubmember', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_stubmember'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the nsgroup:stubmember resource', 'tags': ['nsgroup:stubmember'], 'parameters': [{'name': 'nsgroup:stubmember_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:stubmember', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'name': {'type': 'string', 'example': 'string'}, 'stub_members': {'type': 'string', 'example': "[{'name': 'string', 'stealth': 'bool', 'grid_replicate': 'bool', 'lead': 'bool', 'preferred_primaries': 'extserver', 'enable_preferred_primaries': 'bool'}]"}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_stubmember'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the nsgroup:stubmember resource', 'tags': ['nsgroup:stubmember'], 'parameters': [{'name': 'nsgroup:stubmember_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:stubmember', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup:forwardstubserver': {'get': {'tags': ['nsgroup:forwardstubserver'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_forwardstubserver'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['nsgroup:forwardstubserver'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_servers': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_forwardstubserver'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/nsgroup:forwardstubserver/{nsgroup:forwardstubserver_reference}': {'get': {'tags': ['nsgroup:forwardstubserver'], 'parameters': [{'name': 'nsgroup:forwardstubserver_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:forwardstubserver', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_forwardstubserver'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the nsgroup:forwardstubserver resource', 'tags': ['nsgroup:forwardstubserver'], 'parameters': [{'name': 'nsgroup:forwardstubserver_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:forwardstubserver', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'external_servers': {'type': 'string', 'example': "[{'address': 'string', 'name': 'string', 'shared_with_ms_parent_delegation': 'bool', 'stealth': 'bool', 'tsig_key': 'string', 'tsig_key_alg': 'enum', 'tsig_key_name': 'string', 'use_tsig_key_name': 'bool'}]"}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/nsgroup_forwardstubserver'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the nsgroup:forwardstubserver resource', 'tags': ['nsgroup:forwardstubserver'], 'parameters': [{'name': 'nsgroup:forwardstubserver_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for nsgroup:forwardstubserver', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/ddns:principalcluster': {'get': {'tags': ['ddns:principalcluster'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'group', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ddns_principalcluster'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['ddns:principalcluster'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'group': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'principals': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ddns_principalcluster'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/ddns:principalcluster/{ddns:principalcluster_reference}': {'get': {'tags': ['ddns:principalcluster'], 'parameters': [{'name': 'ddns:principalcluster_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ddns:principalcluster', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ddns_principalcluster'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the ddns:principalcluster resource', 'tags': ['ddns:principalcluster'], 'parameters': [{'name': 'ddns:principalcluster_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ddns:principalcluster', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'group': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}, 'principals': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ddns_principalcluster'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the ddns:principalcluster resource', 'tags': ['ddns:principalcluster'], 'parameters': [{'name': 'ddns:principalcluster_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ddns:principalcluster', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/ddns:principalcluster:group': {'get': {'tags': ['ddns:principalcluster:group'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ddns_principalcluster_group'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['ddns:principalcluster:group'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ddns_principalcluster_group'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/ddns:principalcluster:group/{ddns:principalcluster:group_reference}': {'get': {'tags': ['ddns:principalcluster:group'], 'parameters': [{'name': 'ddns:principalcluster:group_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ddns:principalcluster:group', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ddns_principalcluster_group'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the ddns:principalcluster:group resource', 'tags': ['ddns:principalcluster:group'], 'parameters': [{'name': 'ddns:principalcluster:group_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ddns:principalcluster:group', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ddns_principalcluster_group'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the ddns:principalcluster:group resource', 'tags': ['ddns:principalcluster:group'], 'parameters': [{'name': 'ddns:principalcluster:group_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ddns:principalcluster:group', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/dns64group': {'get': {'tags': ['dns64group'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'prefix', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/dns64group'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['dns64group'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'clients': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'enable_dnssec_dns64': {'type': 'string', 'example': 'bool'}, 'exclude': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'mapped': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'name': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/dns64group'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/dns64group/{dns64group_reference}': {'get': {'tags': ['dns64group'], 'parameters': [{'name': 'dns64group_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for dns64group', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/dns64group'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the dns64group resource', 'tags': ['dns64group'], 'parameters': [{'name': 'dns64group_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for dns64group', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'clients': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'enable_dnssec_dns64': {'type': 'string', 'example': 'bool'}, 'exclude': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'mapped': {'type': 'string', 'example': "[{'address': 'string', 'permission': 'enum'}]"}, 'name': {'type': 'string', 'example': 'string'}, 'prefix': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/dns64group'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the dns64group resource', 'tags': ['dns64group'], 'parameters': [{'name': 'dns64group_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for dns64group', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/hostnamerewritepolicy': {'get': {'tags': ['hostnamerewritepolicy'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/hostnamerewritepolicy'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/hostnamerewritepolicy/{hostnamerewritepolicy_reference}': {'get': {'tags': ['hostnamerewritepolicy'], 'parameters': [{'name': 'hostnamerewritepolicy_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for hostnamerewritepolicy', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/hostnamerewritepolicy'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/bulkhostnametemplate': {'get': {'tags': ['bulkhostnametemplate'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'template_format', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'template_name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/bulkhostnametemplate'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['bulkhostnametemplate'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'template_format': {'type': 'string', 'example': 'string'}, 'template_name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/bulkhostnametemplate'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/bulkhostnametemplate/{bulkhostnametemplate_reference}': {'get': {'tags': ['bulkhostnametemplate'], 'parameters': [{'name': 'bulkhostnametemplate_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for bulkhostnametemplate', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/bulkhostnametemplate'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the bulkhostnametemplate resource', 'tags': ['bulkhostnametemplate'], 'parameters': [{'name': 'bulkhostnametemplate_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for bulkhostnametemplate', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'template_format': {'type': 'string', 'example': 'string'}, 'template_name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/bulkhostnametemplate'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the bulkhostnametemplate resource', 'tags': ['bulkhostnametemplate'], 'parameters': [{'name': 'bulkhostnametemplate_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for bulkhostnametemplate', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/scavengingtask': {'get': {'tags': ['scavengingtask'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'action', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'associated_object', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'status', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/scavengingtask'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.7/scavengingtask/{scavengingtask_reference}': {'get': {'tags': ['scavengingtask'], 'parameters': [{'name': 'scavengingtask_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for scavengingtask', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/scavengingtask'}}}}}, 'security': [{'basicAuth': []}]}}}, 'components': {'securitySchemes': {'basicAuth': {'type': 'http', 'scheme': 'basic'}}, 'schemas': {'grid_dns': {'type': 'object', 'properties': {'allow_bulkhost_ddns': {'type': 'string', 'enum': ['REFUSAL', 'SUCCESS'], 'description': 'Determines if DDNS bulk host is allowed or not.'}, 'allow_gss_tsig_zone_updates': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether GSS-TSIG zone update is enabled for all Grid members.'}, 'allow_query': {'type': 'string', 'enum': ['addressac'], 'description': 'Determines if queries from the specified IPv4 or IPv6 addresses and networks are allowed or not. The appliance can also use Transaction Signature (TSIG) keys to authenticate the queries.'}, 'allow_recursive_query': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the responses to recursive queries are enabled or not.'}, 'allow_transfer': {'type': 'string', 'enum': ['addressac'], 'description': 'Determines if zone transfers from specified IPv4 or IPv6 addresses and networks or transfers from hosts authenticated by Transaction signature (TSIG) key are allowed or not.'}, 'allow_update': {'type': 'string', 'enum': ['addressac'], 'description': 'Determines if dynamic updates from specified IPv4 or IPv6 addresses, networks or from host authenticated by TSIG key are allowed or not.'}, 'anonymize_response_logging': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the anonymization of captured DNS responses is enabled or disabled.'}, 'attack_mitigation': {'type': 'string', 'enum': ['grid:attackmitigation'], 'description': 'Mitigation settings for DNS attacks.'}, 'auto_blackhole': {'type': 'string', 'enum': ['grid:autoblackhole'], 'description': 'The auto blackhole settings.'}, 'bind_check_names_policy': {'type': 'string', 'enum': ['FAIL', 'WARN'], 'description': 'The BIND check names policy, which indicates the action the appliance takes when it encounters host names that do not comply with the Strict Hostname Checking policy. This method applies only if the host name restriction policy is set to Strict Hostname Checking.'}, 'bind_hostname_directive': {'type': 'string', 'enum': ['NONE', 'HOSTNAME'], 'description': 'The value of the hostname directive for BIND.'}, 'blackhole_list': {'type': 'string', 'enum': ['addressac'], 'description': 'The list of IPv4 or IPv6 addresses and networks from which DNS queries are blocked.'}, 'blacklist_action': {'type': 'string', 'enum': ['REDIRECT', 'REFUSE'], 'description': 'The action to perform when a domain name matches the pattern defined in a rule that is specified by the blacklist ruleset.'}, 'blacklist_log_query': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if blacklist redirection queries are logged or not.'}, 'blacklist_redirect_addresses': {'type': 'string', 'description': 'The IP addresses the appliance includes in the response it sends in place of a blacklisted IP address.'}, 'blacklist_redirect_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The TTL value (in seconds) of the synthetic DNS responses that result from blacklist redirection.'}, 'blacklist_rulesets': {'type': 'string', 'description': 'The DNS Ruleset object names assigned at the Grid level for blacklist redirection.'}, 'bulk_host_name_templates': {'type': 'string', 'enum': ['bulkhostnametemplate'], 'description': 'The list of bulk host name templates. There are four Infoblox predefined bulk host name templates. Template Name Template Format Four Octets -$1-$2-$3-$4 Three Octets -$2-$3-$4 Two Octets -$3-$4 One Octet -$4'}, 'capture_dns_queries_on_all_domains': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the capture of DNS queries for all domains is enabled or disabled.'}, 'check_names_for_ddns_and_zone_transfer': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the application of BIND check-names for zone transfers and DDNS updates are enabled.'}, 'client_subnet_domains': {'type': 'string', 'enum': ['clientsubnetdomain'], 'description': 'The list of zone domain names that are allowed or forbidden for EDNS client subnet (ECS) recursion.'}, 'client_subnet_ipv4_prefix_length': {'type': 'integer', 'example': 'integer', 'description': 'Default IPv4 Source Prefix-Length used when sending queries with EDNS client subnet option.'}, 'client_subnet_ipv6_prefix_length': {'type': 'integer', 'example': 'integer', 'description': 'Default IPv6 Source Prefix-Length used when sending queries with EDNS client subnet option.'}, 'copy_xfer_to_notify': {'type': 'boolean', 'example': 'boolean', 'description': 'The allowed IPs, from the zone transfer list, added to the also-notify statement in the named.conf file.'}, 'custom_root_name_servers': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of customized root nameserver(s). You can use Internet root name servers or specify host names and IP addresses of custom root name servers.'}, 'ddns_force_creation_timestamp_update': {'type': 'boolean', 'example': 'boolean', 'description': "Defines whether creation timestamp of RR should be updated ' when DDNS update happens even if there is no change to ' the RR."}, 'ddns_principal_group': {'type': 'string', 'description': 'The DDNS Principal cluster group name.'}, 'ddns_principal_tracking': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS principal track is enabled or disabled.'}, 'ddns_restrict_patterns': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if an option to restrict DDNS update request based on FQDN patterns is enabled or disabled.'}, 'ddns_restrict_patterns_list': {'type': 'string', 'description': 'The unordered list of restriction patterns for an option of to restrict DDNS updates based on FQDN patterns.'}, 'ddns_restrict_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if an option to restrict DDNS update request to protected resource records is enabled or disabled.'}, 'ddns_restrict_secure': {'type': 'boolean', 'example': 'boolean', 'description': "Determines if DDNS update request for principal other than target resource record's principal is restricted."}, 'ddns_restrict_static': {'type': 'boolean', 'example': 'boolean', 'description': "Determines if an option to restrict DDNS update request to resource records which are marked as 'STATIC' is enabled or disabled."}, 'default_bulk_host_name_template': {'type': 'string', 'description': 'Default bulk host name of a Grid DNS.'}, 'default_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The default TTL value of a Grid DNS object. This interval tells the secondary how long the data can be cached.'}, 'disable_edns': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the EDNS0 support for queries that require recursive resolution on Grid members is enabled or not.'}, 'dns64_groups': {'type': 'string', 'description': 'The list of DNS64 synthesis groups associated with this Grid DNS object.'}, 'dns_cache_acceleration_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The minimum TTL value, in seconds, that a DNS record must have in order for it to be cached by the DNS Cache Acceleration service. An integer from 1 to 65000 that represents the TTL in seconds.'}, 'dns_health_check_anycast_control': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the anycast failure (BFD session down) is enabled on member failure or not.'}, 'dns_health_check_domain_list': {'type': 'string', 'description': 'The list of domain names for the DNS health check.'}, 'dns_health_check_interval': {'type': 'integer', 'example': 'integer', 'description': 'The time interval (in seconds) for DNS health check.'}, 'dns_health_check_recursion_flag': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the recursive DNS health check is enabled or not.'}, 'dns_health_check_retries': {'type': 'integer', 'example': 'integer', 'description': 'The number of DNS health check retries.'}, 'dns_health_check_timeout': {'type': 'integer', 'example': 'integer', 'description': 'The DNS health check timeout interval (in seconds).'}, 'dns_query_capture_file_time_limit': {'type': 'integer', 'example': 'integer', 'description': 'The time limit (in minutes) for the DNS query capture file.'}, 'dnssec_blacklist_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the blacklist rules for DNSSEC-enabled clients are enabled or not.'}, 'dnssec_dns64_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS64 groups for DNSSEC-enabled clients are enabled or not.'}, 'dnssec_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS security extension is enabled or not.'}, 'dnssec_expired_signatures_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines when the DNS member accepts expired signatures.'}, 'dnssec_key_params': {'type': 'string', 'enum': ['dnsseckeyparams'], 'description': 'This structure contains the DNSSEC key parameters for this zone.'}, 'dnssec_negative_trust_anchors': {'type': 'string', 'description': 'A list of zones for which the server does not perform DNSSEC validation.'}, 'dnssec_nxdomain_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the NXDOMAIN rules for DNSSEC-enabled clients are enabled or not.'}, 'dnssec_rpz_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the RPZ policies for DNSSEC-enabled clients are enabled or not.'}, 'dnssec_trusted_keys': {'type': 'string', 'enum': ['dnssectrustedkey'], 'description': 'The list of trusted keys for the DNSSEC feature.'}, 'dnssec_validation_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS security validation is enabled or not.'}, 'domains_to_capture_dns_queries': {'type': 'string', 'description': 'The list of domains for DNS query capture.'}, 'dtc_dnssec_mode': {'type': 'string', 'enum': ['SIGNED', 'UNSIGNED'], 'description': 'DTC DNSSEC operation mode.'}, 'dtc_edns_prefer_client_subnet': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether to prefer the client address from the edns-client-subnet option for DTC or not.'}, 'dtc_topology_ea_list': {'type': 'string', 'description': 'The DTC topology extensible attribute definition list. When configuring a DTC topology, users may configure classification as either Geographic or Extensible Attributes. Selecting extensible attributes will replace supported Topology database labels (Continent, Country, Subdivision, City) with the names of the selection EA types and provide values extracted from DHCP Network Container, Network and Range objects with those extensible attributes.'}, 'email': {'type': 'string', 'description': 'The email address of a Grid DNS object.'}, 'enable_blackhole': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the blocking of DNS queries is enabled or not.'}, 'enable_blacklist': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if a blacklist is enabled or not.'}, 'enable_capture_dns_queries': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the capture of DNS queries is enabled or disabled.'}, 'enable_capture_dns_responses': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the capture of DNS responses is enabled or disabled.'}, 'enable_client_subnet_forwarding': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether to enable forwarding EDNS client subnet options to upstream servers.'}, 'enable_client_subnet_recursive': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether to enable adding EDNS client subnet options in recursive resolution.'}, 'enable_delete_associated_ptr': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the ability to automatically remove associated PTR records while deleting A or AAAA records is enabled or not.'}, 'enable_dns64': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS64 support is enabled or not.'}, 'enable_dns_health_check': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS health check is enabled or not.'}, 'enable_dtc_dns_fall_through': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether to enable the DTC to DNS fall-through or not.'}, 'enable_excluded_domain_names': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if excluding domain names from captured DNS queries and responses is enabled or disabled.'}, 'enable_fixed_rrset_order_fqdns': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the fixed RRset order FQDN is enabled or not.'}, 'enable_ftc': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether Fault Tolerant Caching (FTC) is enabled.'}, 'enable_gss_tsig': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether all appliances in the Grid are enabled to receive GSS-TSIG authenticated updates from DNS clients.'}, 'enable_host_rrset_order': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the host RRset order is enabled or not.'}, 'enable_hsm_signing': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether Hardware Security Modules (HSMs) are enabled for key generation and signing. Note, that you must configure the HSM group with at least one enabled HSM.'}, 'enable_notify_source_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the notify source port at the Grid Level is enabled or not.'}, 'enable_query_rewrite': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS query rewrite is enabled or not.'}, 'enable_query_source_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the query source port at the Grid Level is enabled or not.'}, 'excluded_domain_names': {'type': 'string', 'description': 'The list of domains that are excluded from DNS query and response capture.'}, 'expire_after': {'type': 'integer', 'example': 'integer', 'description': 'The expiration time of a Grid DNS object. If the secondary DNS server fails to contact the primary server for the specified interval, the secondary server stops giving out answers about the zone because the zone data is too old to be useful.'}, 'file_transfer_setting': {'type': 'string', 'enum': ['filetransfersetting'], 'description': 'The DNS capture file transfer settings.Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.'}, 'filter_aaaa': {'type': 'string', 'enum': ['YES', 'NO', 'BREAK_DNSSEC'], 'description': 'The type of AAAA filtering for this member DNS object.'}, 'filter_aaaa_list': {'type': 'string', 'enum': ['addressac'], 'description': 'The list of IPv4 addresses and networks from which queries are received. AAAA filtering is applied to these addresses.'}, 'fixed_rrset_order_fqdns': {'type': 'string', 'enum': ['grid:dns:fixedrrsetorderfqdn'], 'description': "The fixed RRset order FQDN. If this field does not contain an empty value, the appliance will automatically set the enable_fixed_rrset_order_fqdns field to 'true', unless the same request sets the enable field to 'false'."}, 'forward_only': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if member sends queries to forwarders only. When the value is true, the member sends queries to forwarders only, and not to other internal or Internet root servers.'}, 'forward_updates': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if secondary servers is allowed to forward updates to the DNS server or not.'}, 'forwarders': {'type': 'string', 'description': 'The forwarders for the member. A forwarder is essentially a name server to which other name servers first send all of their off-site queries. The forwarder builds up a cache of information, avoiding the need for the other name servers to send queries off-site.'}, 'ftc_expired_record_timeout': {'type': 'integer', 'example': 'integer', 'description': 'The timeout interval (in seconds) after which the expired Fault Tolerant Caching (FTC)record is stale and no longer valid.'}, 'ftc_expired_record_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The TTL value (in seconds) of the expired Fault Tolerant Caching (FTC) record in DNS responses.'}, 'gss_tsig_keys': {'type': 'string', 'enum': ['kerberoskey'], 'description': 'The list of GSS-TSIG keys for a Grid DNS object.'}, 'lame_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The number of seconds to cache lame delegations or lame servers.'}, 'logging_categories': {'type': 'string', 'enum': ['grid:loggingcategories'], 'description': 'The logging categories.'}, 'max_cache_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The maximum time (in seconds) for which the server will cache positive answers.'}, 'max_cached_lifetime': {'type': 'integer', 'example': 'integer', 'description': 'The maximum time (in seconds) a DNS response can be stored in the hardware acceleration cache. Valid values are unsigned integer between 60 and 86400, inclusive.'}, 'max_ncache_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The maximum time (in seconds) for which the server will cache negative (NXDOMAIN) responses. The maximum allowed value is 604800.'}, 'member_secondary_notify': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if Grid members that are authoritative secondary servers are allowed to send notification messages to external name servers, if the Grid member that is primary for a zone fails or loses connectivity.'}, 'negative_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The negative TTL value of a Grid DNS object. This interval tells the secondary how long data can be cached for Does Not Respond responses.'}, 'notify_delay': {'type': 'integer', 'example': 'integer', 'description': 'Specifies with how many seconds of delay the notify messages are sent to secondaries.'}, 'notify_source_port': {'type': 'integer', 'example': 'integer', 'description': 'The source port for notify messages. When requesting zone transfers from the primary server, some secondary DNS servers use the source port number (the primary server used to send the notify message) as the destination port number in the zone transfer request. Valid values are between 1 and 63999. The default is picked by BIND.'}, 'nsgroup_default': {'type': 'string', 'description': 'The default nameserver group.'}, 'nsgroups': {'type': 'string', 'description': 'A name server group is a collection of one primary DNS server and one or more secondary DNS servers.'}, 'nxdomain_log_query': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if NXDOMAIN redirection queries are logged or not.'}, 'nxdomain_redirect': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if NXDOMAIN redirection is enabled or not.'}, 'nxdomain_redirect_addresses': {'type': 'string', 'description': 'The list of IPv4 NXDOMAIN redirection addresses.'}, 'nxdomain_redirect_addresses_v6': {'type': 'string', 'description': 'The list of IPv6 NXDOMAIN redirection addresses.'}, 'nxdomain_redirect_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The TTL value (in seconds) of synthetic DNS responses that result from NXDOMAIN redirection.'}, 'nxdomain_rulesets': {'type': 'string', 'description': 'The Ruleset object names assigned at the Grid level for NXDOMAIN redirection.'}, 'preserve_host_rrset_order_on_secondaries': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the host RRset order on secondaries is preserved or not.'}, 'protocol_record_name_policies': {'type': 'string', 'enum': ['recordnamepolicy'], 'description': 'The list of record name policies.'}, 'query_rewrite_domain_names': {'type': 'string', 'description': 'The list of domain names that trigger DNS query rewrite.'}, 'query_rewrite_prefix': {'type': 'string', 'description': 'The domain name prefix for DNS query rewrite.'}, 'query_source_port': {'type': 'integer', 'example': 'integer', 'description': 'The source port for queries. Specifying a source port number for recursive queries ensures that a firewall will allow the response. Valid values are between 1 and 63999. The default is picked by BIND.'}, 'recursive_query_list': {'type': 'string', 'enum': ['addressac'], 'description': 'The list of IPv4 or IPv6 addresses, networks or hosts authenticated by Transaction signature (TSIG) key from which recursive queries are allowed or denied.'}, 'refresh_timer': {'type': 'integer', 'example': 'integer', 'description': 'The refresh time. This interval tells the secondary how often to send a message to the primary for a zone to check that its data is current, and retrieve fresh data if it is not.'}, 'resolver_query_timeout': {'type': 'integer', 'example': 'integer', 'description': 'The recursive query timeout for the member.'}, 'response_rate_limiting': {'type': 'string', 'enum': ['grid:responseratelimiting'], 'description': 'The response rate limiting settings for the member.'}, 'restart_setting': {'type': 'string', 'enum': ['grid:servicerestart'], 'description': 'The restart setting.'}, 'retry_timer': {'type': 'integer', 'example': 'integer', 'description': 'The retry time. This interval tells the secondary how long to wait before attempting to recontact the primary after a connection failure occurs between the two servers.'}, 'rpz_disable_nsdname_nsip': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if NSDNAME and NSIP resource records from RPZ feeds are enabled or not.'}, 'rpz_drop_ip_rule_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Enables the appliance to ignore RPZ-IP triggers with prefix lengths less than the specified minimum prefix length.'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'integer', 'example': 'integer', 'description': 'The minimum prefix length for IPv4 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv4 prefix length.'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'integer', 'example': 'integer', 'description': 'The minimum prefix length for IPv6 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv6 prefix length.'}, 'rpz_qname_wait_recurse': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if recursive RPZ lookups are enabled.'}, 'scavenging_settings': {'type': 'string', 'enum': ['setting:scavenging'], 'description': 'The Grid level scavenging settings.'}, 'serial_query_rate': {'type': 'integer', 'example': 'integer', 'description': 'The number of maximum concurrent SOA queries per second. Valid values are unsigned integer between 20 and 1000, inclusive.'}, 'server_id_directive': {'type': 'string', 'enum': ['NONE', 'HOSTNAME'], 'description': 'The value of the server-id directive for BIND and Unbound DNS.'}, 'sortlist': {'type': 'string', 'enum': ['sortlist'], 'description': 'A sort list determines the order of addresses in responses made to DNS queries.'}, 'store_locally': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the storage of query capture reports on the appliance is enabled or disabled.'}, 'syslog_facility': {'type': 'string', 'enum': ['DAEMON', 'LOCAL0', 'LOCAL1', 'LOCAL2', 'LOCAL3', 'LOCAL4', 'LOCAL5', 'LOCAL6', 'LOCAL7'], 'description': 'The syslog facility. This is the location on the syslog server to which you want to sort the DNS logging messages.'}, 'transfer_excluded_servers': {'type': 'string', 'description': 'The list of excluded DNS servers during zone transfers.'}, 'transfer_format': {'type': 'string', 'enum': ['MANY_ANSWERS', 'ONE_ANSWER'], 'description': 'The BIND format for a zone transfer. This provides tracking capabilities for single or multiple transfers and their associated servers.'}, 'transfers_in': {'type': 'integer', 'example': 'integer', 'description': 'The number of maximum concurrent transfers for the Grid. Valid values are unsigned integer between 10 and 100, inclusive.'}, 'transfers_out': {'type': 'integer', 'example': 'integer', 'description': 'The number of maximum outbound concurrent zone transfers. Valid values are unsigned integer between 10 and 100, inclusive.'}, 'transfers_per_ns': {'type': 'integer', 'example': 'integer', 'description': 'The number of maximum concurrent transfers per member. Valid values are unsigned integer between 2 and 100, inclusive.'}, 'zone_deletion_double_confirm': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the double confirmation during zone deletion is enabled or not.'}}}, 'member_dns': {'type': 'object', 'properties': {'additional_ip_list': {'type': 'string', 'description': 'The list of additional IP addresses on which DNS is enabled for a Grid member.'}, 'allow_gss_tsig_zone_updates': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the GSS-TSIG zone updates is enabled for the Grid member.'}, 'allow_query': {'type': 'string', 'enum': ['addressac'], 'description': 'Determines if queries from specified IPv4 or IPv6 addresses and networks are enabled or not. The appliance can also use Transaction Signature (TSIG) keys to authenticate the queries. This setting overrides the Grid query settings.'}, 'allow_recursive_query': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the responses to recursive queries is enabled or not. This setting overrides Grid recursive query settings.'}, 'allow_transfer': {'type': 'string', 'enum': ['addressac'], 'description': 'Allows or rejects zone transfers from specified IPv4 or IPv6 addresses and networks or allows transfers from hosts authenticated by Transaction signature (TSIG) key. This setting overrides the Grid zone transfer settings.'}, 'allow_update': {'type': 'string', 'enum': ['addressac'], 'description': 'Allows or rejects dynamic updates from specified IPv4 or IPv6 addresses, networks or from host authenticated by TSIG key. This setting overrides Grid update settings.'}, 'anonymize_response_logging': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the anonymization of captured DNS responses is enabled or disabled.'}, 'attack_mitigation': {'type': 'string', 'enum': ['grid:attackmitigation'], 'description': 'Mitigation settings for DNS attacks.'}, 'auto_blackhole': {'type': 'string', 'enum': ['grid:autoblackhole'], 'description': 'The auto blackhole settings.'}, 'auto_create_a_and_ptr_for_lan2': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the auto-generation of A and PTR records for the LAN2 IP address is enabled or not, if DNS service is enabled on LAN2.'}, 'auto_create_aaaa_and_ipv6ptr_for_lan2': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if auto-generation of AAAA and IPv6 PTR records for LAN2 IPv6 address is enabled or not.'}, 'auto_sort_views': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if a Grid member to automatically sort DNS views is enabled or not. The order of the DNS views determines the order in which the appliance checks the match lists.'}, 'bind_check_names_policy': {'type': 'string', 'enum': ['FAIL', 'WARN'], 'description': "The BIND check names policy, which indicates the action the appliance takes when it encounters host names that do not comply with the Strict Hostname Checking policy. This method applies only if the host name restriction policy is set to 'Strict Hostname Checking'."}, 'bind_hostname_directive': {'type': 'string', 'enum': ['NONE', 'HOSTNAME', 'USER_DEFINED'], 'description': 'The value of the hostname directive for BIND.'}, 'bind_hostname_directive_fqdn': {'type': 'string', 'description': 'The value of the user-defined hostname directive for BIND. To enable user-defined hostname directive, you must set the bind_hostname_directive to USER_DEFINED.'}, 'blackhole_list': {'type': 'string', 'enum': ['addressac'], 'description': 'The list of IPv4 or IPv6 addresses and networks from which DNS queries are blocked. This setting overrides the Grid blackhole_list.'}, 'blacklist_action': {'type': 'string', 'enum': ['REDIRECT', 'REFUSE'], 'description': 'The action to perform when a domain name matches the pattern defined in a rule that is specified by the blacklist_ruleset method.'}, 'blacklist_log_query': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if blacklist redirection queries are logged or not.'}, 'blacklist_redirect_addresses': {'type': 'string', 'description': 'The IP addresses the appliance includes in the response it sends in place of a blacklisted IP address.'}, 'blacklist_redirect_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The TTL value of the synthetic DNS responses that result from blacklist redirection.'}, 'blacklist_rulesets': {'type': 'string', 'description': 'The DNS Ruleset object names assigned at the Grid level for blacklist redirection.'}, 'capture_dns_queries_on_all_domains': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the capture of DNS queries for all domains is enabled or disabled.'}, 'check_names_for_ddns_and_zone_transfer': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the application of BIND check-names for zone transfers and DDNS updates are enabled.'}, 'copy_xfer_to_notify': {'type': 'boolean', 'example': 'boolean', 'description': 'Copies the allowed IPs from the zone transfer list into the also-notify statement in the named.conf file.'}, 'custom_root_name_servers': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of custom root name servers. You can either select and use Internet root name servers or specify custom root name servers by providing a host name and IP address to which the Infoblox appliance can send queries.'}, 'disable_edns': {'type': 'boolean', 'example': 'boolean', 'description': 'The EDNS0 support for queries that require recursive resolution on Grid members.'}, 'dns64_groups': {'type': 'string', 'description': 'The list of DNS64 synthesis groups associated with this member.'}, 'dns_cache_acceleration_status': {'type': 'string', 'description': 'The DNS cache acceleration status.'}, 'dns_cache_acceleration_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The minimum TTL value, in seconds, that a DNS record must have in order for it to be cached by the DNS Cache Acceleration service. An integer from 1 to 65000 that represents the TTL in seconds.'}, 'dns_health_check_anycast_control': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the anycast failure (BFD session down) is enabled on member failure or not.'}, 'dns_health_check_domain_list': {'type': 'string', 'description': 'The list of domain names for the DNS health check.'}, 'dns_health_check_interval': {'type': 'integer', 'example': 'integer', 'description': 'The time interval (in seconds) for DNS health check.'}, 'dns_health_check_recursion_flag': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the recursive DNS health check is enabled or not.'}, 'dns_health_check_retries': {'type': 'integer', 'example': 'integer', 'description': 'The number of DNS health check retries.'}, 'dns_health_check_timeout': {'type': 'integer', 'example': 'integer', 'description': 'The DNS health check timeout interval (in seconds).'}, 'dns_notify_transfer_source': {'type': 'string', 'enum': ['VIP', 'MGMT', 'LAN2', 'ANY', 'IP'], 'description': 'Determines which IP address is used as the source for DDNS notify and transfer operations.'}, 'dns_notify_transfer_source_address': {'type': 'string', 'description': 'The source address used if dns_notify_transfer_source type is IP.'}, 'dns_query_capture_file_time_limit': {'type': 'integer', 'example': 'integer', 'description': 'The time limit (in minutes) for the DNS query capture file.'}, 'dns_query_source_address': {'type': 'string', 'description': 'The source address used if dns_query_source_interface type is IP.'}, 'dns_query_source_interface': {'type': 'string', 'enum': ['VIP', 'MGMT', 'LAN2', 'ANY', 'IP'], 'description': 'Determines which IP address is used as the source for DDNS query operations.'}, 'dns_view_address_settings': {'type': 'string', 'enum': ['setting:viewaddress'], 'description': 'Array of notify/query source settings for views.'}, 'dnssec_blacklist_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the blacklist rules for DNSSEC-enabled clients are enabled or not.'}, 'dnssec_dns64_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS64 groups for DNSSEC-enabled clients are enabled or not.'}, 'dnssec_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS security extension is enabled or not.'}, 'dnssec_expired_signatures_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines when the DNS member accepts expired signatures.'}, 'dnssec_negative_trust_anchors': {'type': 'string', 'description': 'A list of zones for which the server does not perform DNSSEC validation.'}, 'dnssec_nxdomain_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the NXDOMAIN rules for DNSSEC-enabled clients are enabled or not.'}, 'dnssec_rpz_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the RPZ policies for DNSSEC-enabled clients are enabled or not.'}, 'dnssec_trusted_keys': {'type': 'string', 'enum': ['dnssectrustedkey'], 'description': 'The list of trusted keys for the DNSSEC feature.'}, 'dnssec_validation_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS security validation is enabled or not.'}, 'domains_to_capture_dns_queries': {'type': 'string', 'description': 'The list of domains for DNS query capture.'}, 'dtc_edns_prefer_client_subnet': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether to prefer the client address from the edns-client-subnet option for DTC or not.'}, 'dtc_health_source': {'type': 'string', 'enum': ['VIP', 'MGMT', 'LAN2', 'ANY', 'IP'], 'description': 'The health check source type.'}, 'dtc_health_source_address': {'type': 'string', 'description': 'The source address used if dtc_health_source type is IP.'}, 'enable_blackhole': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the blocking of DNS queries is enabled or not. This setting overrides the Grid enable_blackhole settings.'}, 'enable_blacklist': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if a blacklist is enabled or not on the Grid member.'}, 'enable_capture_dns_queries': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the capture of DNS queries is enabled or disabled.'}, 'enable_capture_dns_responses': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the capture of DNS responses is enabled or disabled.'}, 'enable_dns': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS service of a member is enabled or not.'}, 'enable_dns64': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS64 support is enabled or not for this member.'}, 'enable_dns_cache_acceleration': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS Cache Acceleration service is enabled or not for a member.'}, 'enable_dns_health_check': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the DNS health check is enabled or not.'}, 'enable_excluded_domain_names': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether excluding domain names from captured DNS queries and responses is enabled or disabled.'}, 'enable_fixed_rrset_order_fqdns': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the fixed RRset order FQDN is enabled or not.'}, 'enable_ftc': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether Fault Tolerant Caching (FTC) is enabled.'}, 'enable_gss_tsig': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the appliance is enabled to receive GSS-TSIG authenticated updates from DHCP clients.'}, 'enable_notify_source_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the notify source port for a member is enabled or not.'}, 'enable_query_rewrite': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS query rewrite is enabled or not for this member.'}, 'enable_query_source_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the query source port for a memer is enabled or not.'}, 'excluded_domain_names': {'type': 'string', 'description': 'The list of domains that are excluded from DNS query and response capture.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'file_transfer_setting': {'type': 'string', 'enum': ['filetransfersetting'], 'description': 'The DNS capture file transfer settings. Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.'}, 'filter_aaaa': {'type': 'string', 'enum': ['YES', 'NO', 'BREAK_DNSSEC'], 'description': 'The type of AAAA filtering for this member DNS object.'}, 'filter_aaaa_list': {'type': 'string', 'enum': ['addressac'], 'description': 'The list of IPv4 addresses and networks from which queries are received. AAAA filtering is applied to these addresses.'}, 'fixed_rrset_order_fqdns': {'type': 'string', 'enum': ['grid:dns:fixedrrsetorderfqdn'], 'description': "The fixed RRset order FQDN. If this field does not contain an empty value, the appliance will automatically set the enable_fixed_rrset_order_fqdns field to 'true', unless the same request sets the enable field to 'false'."}, 'forward_only': {'type': 'boolean', 'example': 'boolean', 'description': 'Permits this member to send queries to forwarders only. When the value is true, the member sends queries to forwarders only, and not to other internal or Internet root servers.'}, 'forward_updates': {'type': 'boolean', 'example': 'boolean', 'description': 'Allows secondary servers to forward updates to the DNS server. This setting overrides grid update settings.'}, 'forwarders': {'type': 'string', 'description': 'The forwarders for the member. A forwarder is essentially a name server to which other name servers first send all of their off-site queries. The forwarder builds up a cache of information, avoiding the need for the other name servers to send queries off-site. This setting overrides the Grid level setting.'}, 'ftc_expired_record_timeout': {'type': 'integer', 'example': 'integer', 'description': 'The timeout interval (in seconds) after which the expired Fault Tolerant Caching (FTC)record is stale and no longer valid.'}, 'ftc_expired_record_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The TTL value (in seconds) of the expired Fault Tolerant Caching (FTC) record in DNS responses.'}, 'glue_record_addresses': {'type': 'string', 'enum': ['member:dnsgluerecordaddr'], 'description': 'The list of glue record addresses.'}, 'gss_tsig_keys': {'type': 'string', 'enum': ['kerberoskey'], 'description': 'The list of GSS-TSIG keys for a member DNS object.'}, 'host_name': {'type': 'string', 'description': 'The host name of the Grid member.'}, 'ipv4addr': {'type': 'string', 'description': 'The IPv4 Address of the Grid member.'}, 'ipv6_glue_record_addresses': {'type': 'string', 'enum': ['member:dnsgluerecordaddr'], 'description': 'The list of IPv6 glue record addresses.'}, 'ipv6addr': {'type': 'string', 'description': 'The IPv6 Address of the Grid member.'}, 'is_unbound_capable': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether member DNS supports Unbound as the recursive resolver or not.'}, 'lame_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The number of seconds to cache lame delegations or lame servers.'}, 'logging_categories': {'type': 'string', 'enum': ['grid:loggingcategories'], 'description': 'The logging categories for this DNS member.'}, 'max_cache_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The maximum time (in seconds) for which the server will cache positive answers.'}, 'max_cached_lifetime': {'type': 'integer', 'example': 'integer', 'description': 'The maximum time in seconds a DNS response can be stored in the hardware acceleration cache. Valid values are unsigned integer between 60 and 86400, inclusive.'}, 'max_ncache_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The maximum time (in seconds) for which the server will cache negative (NXDOMAIN) responses. The maximum allowed value is 604800.'}, 'minimal_resp': {'type': 'boolean', 'example': 'boolean', 'description': 'Enables the ability to return a minimal amount of data in response to a query. This capability speeds up the DNS services provided by the appliance.'}, 'notify_delay': {'type': 'integer', 'example': 'integer', 'description': 'Specifies the number of seconds of delay the notify messages are sent to secondaries.'}, 'notify_source_port': {'type': 'integer', 'example': 'integer', 'description': 'The source port for notify messages. When requesting zone transfers from the primary server, some secondary DNS servers use the source port number (the primary server used to send the notify message) as the destination port number in the zone transfer request. This setting overrides Grid static source port settings. Valid values are between 1 and 63999. The default is selected by BIND.'}, 'nxdomain_log_query': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if NXDOMAIN redirection queries are logged or not.'}, 'nxdomain_redirect': {'type': 'boolean', 'example': 'boolean', 'description': 'Enables NXDOMAIN redirection.'}, 'nxdomain_redirect_addresses': {'type': 'string', 'description': 'The IPv4 NXDOMAIN redirection addresses.'}, 'nxdomain_redirect_addresses_v6': {'type': 'string', 'description': 'The IPv6 NXDOMAIN redirection addresses.'}, 'nxdomain_redirect_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The TTL value of synthetic DNS responses that result from NXDOMAIN redirection.'}, 'nxdomain_rulesets': {'type': 'string', 'description': 'The names of the Ruleset objects assigned at the Grid level for NXDOMAIN redirection.'}, 'query_source_port': {'type': 'integer', 'example': 'integer', 'description': 'The source port for queries. Specifying a source port number for recursive queries ensures that a firewall will allow the response. Valid values are between 1 and 63999. The default is selected by BIND.'}, 'record_name_policy': {'type': 'string', 'description': 'The record name restriction policy.'}, 'recursive_client_limit': {'type': 'integer', 'example': 'integer', 'description': 'A limit on the number of concurrent recursive clients.'}, 'recursive_query_list': {'type': 'string', 'enum': ['addressac'], 'description': 'The list of IPv4 or IPv6 addresses, networks or hosts authenticated by Transaction signature (TSIG) key from which recursive queries are allowed or denied.'}, 'recursive_resolver': {'type': 'string', 'enum': ['BIND', 'UNBOUND'], 'description': 'The recursive resolver for member DNS.'}, 'resolver_query_timeout': {'type': 'integer', 'example': 'integer', 'description': 'The recursive query timeout for the member. The value must be 0 or between 10 and 30.'}, 'response_rate_limiting': {'type': 'string', 'enum': ['grid:responseratelimiting'], 'description': 'The response rate limiting settings for the member.'}, 'root_name_server_type': {'type': 'string', 'enum': ['CUSTOM', 'INTERNET'], 'description': 'Determines the type of root name servers.'}, 'rpz_disable_nsdname_nsip': {'type': 'boolean', 'example': 'boolean', 'description': 'Enables NSDNAME and NSIP resource records from RPZ feeds at member level.'}, 'rpz_drop_ip_rule_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Enables the appliance to ignore RPZ-IP triggers with prefix lengths less than the specified minimum prefix length.'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'integer', 'example': 'integer', 'description': 'The minimum prefix length for IPv4 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv4 prefix length.'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'integer', 'example': 'integer', 'description': 'The minimum prefix length for IPv6 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv6 prefix length.'}, 'rpz_qname_wait_recurse': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether recursive RPZ lookups are enabled.'}, 'serial_query_rate': {'type': 'integer', 'example': 'integer', 'description': 'The number of maximum concurrent SOA queries per second for the member.'}, 'server_id_directive': {'type': 'string', 'enum': ['NONE', 'HOSTNAME', 'USER_DEFINED'], 'description': 'The value of the server-id directive for BIND and Unbound DNS.'}, 'server_id_directive_string': {'type': 'string', 'description': 'The value of the user-defined hostname directive for BIND and UNBOUND DNS. To enable user-defined hostname directive, you must set the bind_hostname_directive to USER_DEFINED.'}, 'skip_in_grid_rpz_queries': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if RPZ rules are applied to queries originated from this member and received by other Grid members.'}, 'sortlist': {'type': 'string', 'enum': ['sortlist'], 'description': 'A sort list determines the order of addresses in responses made to DNS queries. This setting overrides Grid sort list settings.'}, 'store_locally': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the storage of query capture reports on the appliance is enabled or disabled.'}, 'syslog_facility': {'type': 'string', 'enum': ['DAEMON', 'LOCAL0', 'LOCAL1', 'LOCAL2', 'LOCAL3', 'LOCAL4', 'LOCAL5', 'LOCAL6', 'LOCAL7'], 'description': 'The syslog facility. This is the location on the syslog server to which you want to sort the DNS logging messages. This setting overrides the Grid logging facility settings.'}, 'transfer_excluded_servers': {'type': 'string', 'description': 'Excludes specified DNS servers during zone transfers.'}, 'transfer_format': {'type': 'string', 'enum': ['MANY_ANSWERS', 'ONE_ANSWER'], 'description': 'The BIND format for a zone transfer. This provides tracking capabilities for single or multiple transfers and their associated servers.'}, 'transfers_in': {'type': 'integer', 'example': 'integer', 'description': 'The number of maximum concurrent transfers for the member.'}, 'transfers_out': {'type': 'integer', 'example': 'integer', 'description': 'The number of maximum outbound concurrent zone transfers for the member.'}, 'transfers_per_ns': {'type': 'integer', 'example': 'integer', 'description': 'The number of maximum concurrent transfers per member for the member.'}, 'unbound_logging_level': {'type': 'string', 'enum': ['ERRORS_ONLY', 'OPERATIONS', 'DETAILED_OPERATIONS', 'QUERY', 'ALGORITHM', 'CACHE_MISSES'], 'description': 'Logging level for the Unbound recursive resolver.'}, 'use_allow_query': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_query'}, 'use_allow_transfer': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_transfer'}, 'use_attack_mitigation': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: attack_mitigation'}, 'use_auto_blackhole': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: auto_blackhole'}, 'use_bind_hostname_directive': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: bind_hostname_directive'}, 'use_blackhole': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: enable_blackhole'}, 'use_blacklist': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: blackhole_list , blacklist_action, blacklist_log_query, blacklist_redirect_addresses, blacklist_redirect_ttl, blacklist_rulesets, enable_blacklist'}, 'use_capture_dns_queries_on_all_domains': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: capture_dns_queries_on_all_domains'}, 'use_copy_xfer_to_notify': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: copy_xfer_to_notify'}, 'use_disable_edns': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: disable_edns'}, 'use_dns64': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: enable_dns64 , dns64_groups'}, 'use_dns_cache_acceleration_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: dns_cache_acceleration_ttl'}, 'use_dns_health_check': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: dns_health_check_domain_list , dns_health_check_recursion_flag, dns_health_check_anycast_control, enable_dns_health_check, dns_health_check_interval, dns_health_check_timeout, dns_health_check_retries'}, 'use_dnssec': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: dnssec_enabled , dnssec_expired_signatures_enabled, dnssec_validation_enabled, dnssec_trusted_keys'}, 'use_dtc_edns_prefer_client_subnet': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: dtc_edns_prefer_client_subnet'}, 'use_enable_capture_dns': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: enable_capture_dns_queries , enable_capture_dns_responses'}, 'use_enable_excluded_domain_names': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: enable_excluded_domain_names'}, 'use_enable_gss_tsig': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: enable_gss_tsig'}, 'use_enable_query_rewrite': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: enable_query_rewrite'}, 'use_filter_aaaa': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: filter_aaaa , filter_aaaa_list'}, 'use_fixed_rrset_order_fqdns': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: fixed_rrset_order_fqdns , enable_fixed_rrset_order_fqdns'}, 'use_forward_updates': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: forward_updates'}, 'use_forwarders': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: forwarders , forward_only'}, 'use_ftc': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: enable_ftc , ftc_expired_record_ttl, ftc_expired_record_timeout'}, 'use_gss_tsig_keys': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: gss_tsig_keys'}, 'use_lame_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: lame_ttl'}, 'use_lan2_ipv6_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS service on the IPv6 LAN2 port is enabled or not.'}, 'use_lan2_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS service on the LAN2 port is enabled or not.'}, 'use_lan_ipv6_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS service on the IPv6 LAN port is enabled or not.'}, 'use_lan_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines the status of the use of DNS services on the IPv4 LAN1 port.'}, 'use_max_cache_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: max_cache_ttl'}, 'use_max_cached_lifetime': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: max_cached_lifetime'}, 'use_max_ncache_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: max_ncache_ttl'}, 'use_mgmt_ipv6_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS services on the IPv6 MGMT port is enabled or not.'}, 'use_mgmt_port': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS services on the MGMT port is enabled or not.'}, 'use_notify_delay': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: notify_delay'}, 'use_nxdomain_redirect': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: nxdomain_redirect , nxdomain_redirect_addresses, nxdomain_redirect_addresses_v6, nxdomain_redirect_ttl, nxdomain_log_query, nxdomain_rulesets'}, 'use_record_name_policy': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: record_name_policy'}, 'use_recursive_client_limit': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: recursive_client_limit'}, 'use_recursive_query_setting': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_recursive_query , recursive_query_list'}, 'use_resolver_query_timeout': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: resolver_query_timeout'}, 'use_response_rate_limiting': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: response_rate_limiting'}, 'use_root_name_server': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: root_name_server_type , custom_root_name_servers'}, 'use_rpz_disable_nsdname_nsip': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: rpz_disable_nsdname_nsip'}, 'use_rpz_drop_ip_rule': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: rpz_drop_ip_rule_enabled , rpz_drop_ip_rule_min_prefix_length_ipv4, rpz_drop_ip_rule_min_prefix_length_ipv6'}, 'use_rpz_qname_wait_recurse': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: rpz_qname_wait_recurse'}, 'use_serial_query_rate': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: serial_query_rate'}, 'use_server_id_directive': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: server_id_directive'}, 'use_sortlist': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: sortlist'}, 'use_source_ports': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: enable_notify_source_port , notify_source_port, enable_query_source_port, query_source_port'}, 'use_syslog_facility': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: syslog_facility'}, 'use_transfers_in': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: transfers_in'}, 'use_transfers_out': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: transfers_out'}, 'use_transfers_per_ns': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: transfers_per_ns'}, 'use_update_setting': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_update , allow_gss_tsig_zone_updates'}, 'use_zone_transfer_format': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: transfer_excluded_servers , transfer_format'}, 'views': {'type': 'string', 'description': 'The list of views associated with this member.'}}}, 'allrecords': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The record address.'}, 'comment': {'type': 'string', 'description': 'The record comment.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': 'The record creator.'}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'The disable value determines if the record is disabled or not. False means the record is enabled.'}, 'dtc_obscured': {'type': 'string', 'description': 'The specific LBDN record.'}, 'name': {'type': 'string', 'description': 'The name of the record.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'record': {'type': 'string', 'description': 'The record object, if supported by the WAPI. Otherwise, the value is None.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for which the record is valid or being cached. The 32-bit unsigned integer represents the duration in seconds. Zero indicates that the record should not be cached.'}, 'type': {'type': 'string', 'enum': ['ALL', 'record:a', 'record:aaaa', 'record:cname', 'record:dname', 'record:host', 'record:host_ipv4addr', 'record:host_ipv6addr', 'record:mx', 'record:naptr', 'record:ptr', 'record:srv', 'record:txt', 'sharedrecord:a', 'sharedrecord:aaaa', 'sharedrecord:mx', 'sharedrecord:srv', 'sharedrecord:txt'], 'description': 'The record type. When searching for an unspecified record type, the search is performed for all records. On retrieval, the appliance returns UNSUPPORTED for unsupported records.'}, 'view': {'type': 'string', 'description': 'Name of the DNS View in which the record resides.'}, 'zone': {'type': 'string', 'description': 'Name of the zone in which the record resides.'}}}, 'bulkhost': {'type': 'object', 'properties': {'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'The cloud API related information.'}, 'comment': {'type': 'string', 'description': 'The descriptive comment.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'The disable flag of a DNS BulkHost record.'}, 'dns_prefix': {'type': 'string', 'description': 'The prefix, in punycode format, for the bulk host.'}, 'end_addr': {'type': 'string', 'description': 'The last IP address in the address range for the bulk host.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name_template': {'type': 'string', 'description': 'The bulk host name template.'}, 'network_view': {'type': 'string', 'description': 'The network view associated with the bulk host view.'}, 'policy': {'type': 'string', 'description': 'The hostname policy for records under the bulk host parent zone.'}, 'prefix': {'type': 'string', 'description': 'The prefix for the bulk host. The prefix is the name (or a series of characters) inserted at the beginning of each host name.'}, 'reverse': {'type': 'boolean', 'example': 'boolean', 'description': 'The reverse flag of the BulkHost record.'}, 'start_addr': {'type': 'string', 'description': 'The first IP address in the address range for the bulk host.'}, 'template_format': {'type': 'string', 'description': 'The bulk host name template format.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time to Live (TTL) value.'}, 'use_name_template': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: name_template'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The view for the bulk host.'}, 'zone': {'type': 'string', 'description': 'The zone name.'}}}, 'record_host': {'type': 'object', 'properties': {'aliases': {'type': 'string', 'description': 'This is a list of aliases for the host. The aliases must be in FQDN format. This value can be in unicode format.'}, 'allow_telnet': {'type': 'boolean', 'example': 'boolean', 'description': 'This field controls whether the credential is used for both the Telnet and SSH credentials. If set to False, the credential is used only for SSH.'}, 'cli_credentials': {'type': 'string', 'enum': ['discovery:clicredential'], 'description': 'The CLI credentials for the host record.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'configure_for_dns': {'type': 'boolean', 'example': 'boolean', 'description': 'When configure_for_dns is false, the host does not have parent zone information.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'device_description': {'type': 'string', 'description': 'The description of the device.'}, 'device_location': {'type': 'string', 'description': 'The location of the device.'}, 'device_type': {'type': 'string', 'description': 'The type of the device.'}, 'device_vendor': {'type': 'string', 'description': 'The vendor of the device.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'disable_discovery': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the discovery for the record is disabled or not. False means that the discovery is enabled.'}, 'dns_aliases': {'type': 'string', 'description': 'The list of aliases for the host in punycode format.'}, 'dns_name': {'type': 'string', 'description': 'The name for a host record in punycode format.'}, 'enable_immediate_discovery': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the discovery for the record should be immediately enabled.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'ipv4addrs': {'type': 'string', 'enum': ['record:host_ipv4addr'], 'description': 'This is a list of IPv4 Addresses for the host.'}, 'ipv6addrs': {'type': 'string', 'enum': ['record:host_ipv6addr'], 'description': 'This is a list of IPv6 Addresses for the host.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'ms_ad_user_data': {'type': 'string', 'enum': ['msserver:aduser:data'], 'description': 'The Microsoft Active Directory user related information.'}, 'name': {'type': 'string', 'description': 'The host name in FQDN format This value can be in unicode format. Regular expression search is not supported for unicode values.'}, 'network_view': {'type': 'string', 'description': 'The name of the network view in which the host record resides.'}, 'restart_if_needed': {'type': 'boolean', 'example': 'boolean', 'description': 'Restarts the member service.'}, 'rrset_order': {'type': 'string', 'description': 'The value of this field specifies the order in which resource record sets are returned. The possible values are cyclic, random and fixed.'}, 'snmp3_credential': {'type': 'string', 'enum': ['discovery:snmp3credential'], 'description': 'The SNMPv3 credential for a host record.'}, 'snmp_credential': {'type': 'string', 'enum': ['discovery:snmpcredential'], 'description': 'The SNMPv1 or SNMPv2 credential for a host record.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_cli_credentials': {'type': 'boolean', 'example': 'boolean', 'description': 'If set to true, the CLI credential will override member-level settings.'}, 'use_snmp3_credential': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the SNMPv3 credential should be used for the record.'}, 'use_snmp_credential': {'type': 'boolean', 'example': 'boolean', 'description': 'If set to true, the SNMP credential will override member-level settings.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_a': {'type': 'object', 'properties': {'aws_rte53_record_info': {'type': 'string', 'enum': ['awsrte53recordinfo'], 'description': 'Aws Route 53 record information.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'discovered_data': {'type': 'string', 'enum': ['discoverydata'], 'description': 'The discovered data for this A record.'}, 'dns_name': {'type': 'string', 'description': 'The name for an A record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the reclamation is allowed for the record or not.'}, 'ipv4addr': {'type': 'string', 'description': 'The IPv4 Address of the record.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'ms_ad_user_data': {'type': 'string', 'enum': ['msserver:aduser:data'], 'description': 'The Microsoft Active Directory user related information.'}, 'name': {'type': 'string', 'description': 'Name for A record in FQDN format. This value can be in unicode format.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'remove_associated_ptr': {'type': 'boolean', 'example': 'boolean', 'description': 'Delete option that indicates whether the associated PTR records should be removed while deleting the specified A record.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides. This field exists only on db_objects if this record is a shared record.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_aaaa': {'type': 'object', 'properties': {'aws_rte53_record_info': {'type': 'string', 'enum': ['awsrte53recordinfo'], 'description': 'Aws Route 53 record information.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'discovered_data': {'type': 'string', 'enum': ['discoverydata'], 'description': 'The discovered data for this AAAA record.'}, 'dns_name': {'type': 'string', 'description': 'The name for an AAAA record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the reclamation is allowed for the record or not.'}, 'ipv6addr': {'type': 'string', 'description': 'The IPv6 Address of the record.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'ms_ad_user_data': {'type': 'string', 'enum': ['msserver:aduser:data'], 'description': 'The Microsoft Active Directory user related information.'}, 'name': {'type': 'string', 'description': 'Name for the AAAA record in FQDN format. This value can be in unicode format.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'remove_associated_ptr': {'type': 'boolean', 'example': 'boolean', 'description': 'Delete option that indicates whether the associated PTR records should be removed while deleting the specified A record.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides. This field exists only on db_objects if this record is a shared record.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_alias': {'type': 'object', 'properties': {'aws_rte53_record_info': {'type': 'string', 'enum': ['awsrte53recordinfo'], 'description': 'Aws Route 53 record information.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creator': {'type': 'string', 'enum': ['STATIC'], 'description': 'The record creator.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name for an Alias record in punycode format.'}, 'dns_target_name': {'type': 'string', 'description': 'Target name in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name for an Alias record in FQDN format. This value can be in unicode format. Regular expression search is not supported for unicode values.'}, 'target_name': {'type': 'string', 'description': 'Target name in FQDN format. This value can be in unicode format.'}, 'target_type': {'type': 'string', 'enum': ['A', 'AAAA', 'MX', 'NAPTR', 'PTR', 'SPF', 'SRV', 'TXT'], 'description': 'Target type.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_cname': {'type': 'object', 'properties': {'aws_rte53_record_info': {'type': 'string', 'enum': ['awsrte53recordinfo'], 'description': 'Aws Route 53 record information.'}, 'canonical': {'type': 'string', 'description': 'Canonical name in FQDN format. This value can be in unicode format.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'dns_canonical': {'type': 'string', 'description': 'Canonical name in punycode format.'}, 'dns_name': {'type': 'string', 'description': 'The name for the CNAME record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the reclamation is allowed for the record or not.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name for a CNAME record in FQDN format. This value can be in unicode format. Regular expression search is not supported for unicode values.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides. This field exists only on db_objects if this record is a shared record.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_dhcid': {'type': 'object', 'properties': {'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The creation time of the record.'}, 'creator': {'type': 'string', 'enum': ['SYSTEM', 'STATIC', 'DYNAMIC'], 'description': 'The record creator.'}, 'dhcid': {'type': 'string', 'description': 'The Base64 encoded DHCP client information.'}, 'dns_name': {'type': 'string', 'description': 'The name for the DHCID record in punycode format.'}, 'name': {'type': 'string', 'description': 'The name of the DHCID record in FQDN format.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_dname': {'type': 'object', 'properties': {'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'The structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'The comment for the record.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': 'The record creator.'}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled.'}, 'dns_name': {'type': 'string', 'description': 'Name of a DNS DNAME record in punycode format.'}, 'dns_target': {'type': 'string', 'description': 'The target domain name of the DNS DNAME record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if reclamation is allowed for the record.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name of the DNS DNAME record in FQDN format.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides. This field exists only on db_objects if this record is a shared record.'}, 'target': {'type': 'string', 'description': 'The target domain name of the DNS DNAME record in FQDN format.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, that the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides, for example external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. For example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_dnskey': {'type': 'object', 'properties': {'algorithm': {'type': 'string', 'enum': ['DSA', 'ECDSAP256SHA256', 'ECDSAP384SHA384', 'NSEC3DSA', 'NSEC3RSASHA1', 'RSAMD5', 'RSASHA1', 'RSASHA256', 'RSASHA512'], 'description': 'The public key encryption algorithm of a DNSKEY Record object.'}, 'comment': {'type': 'string', 'description': 'The comment for the record.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The creation time of the record.'}, 'creator': {'type': 'string', 'enum': ['SYSTEM'], 'description': 'The record creator.'}, 'dns_name': {'type': 'string', 'description': 'Name of a DNSKEY record in punycode format.'}, 'flags': {'type': 'string', 'enum': ['int'], 'description': 'The flags field is a 16-bit unsigned integer. Currently, only two bits of this value are used: the least significant bit and bit 7. The other bits are reserved for future use and must be zero. If bit 7 is set to 1, the key is a DNS zone key. Otherwise, the key is not a zone key and cannot be used to verify zone data. The least significant bit indicates secure entry point property. If it is not zero, the key is a key signing key (KSK type). Otherwise, the key type is ZSK.'}, 'key_tag': {'type': 'integer', 'example': 'integer', 'description': 'The key tag identifying the public key of a DNSKEY Record object.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name of the DNSKEY record in FQDN format. It has to be the same as the zone, where the record resides.'}, 'public_key': {'type': 'string', 'description': 'The public key. The format of the returned value depends on the key algorithm.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_ds': {'type': 'object', 'properties': {'algorithm': {'type': 'string', 'enum': ['DSA', 'ECDSAP256SHA256', 'ECDSAP384SHA384', 'NSEC3DSA', 'NSEC3RSASHA1', 'RSAMD5', 'RSASHA1', 'RSASHA256', 'RSASHA512'], 'description': 'The algorithm of the DNSKEY RR to which this DS RR refers. It uses the same algorithm values and types as the corresponding DNSKEY RR.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'The comment for the record.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The creation time of the record.'}, 'creator': {'type': 'string', 'enum': ['SYSTEM'], 'description': 'Creator of the record.'}, 'digest': {'type': 'string', 'description': 'The digest of the DNSKEY resource record that is stored in a DS Record object.'}, 'digest_type': {'type': 'string', 'enum': ['SHA1', 'SHA256'], 'description': 'The algorithm used to construct the digest.'}, 'dns_name': {'type': 'string', 'description': 'The name for the DS record in punycode format.'}, 'key_tag': {'type': 'integer', 'example': 'integer', 'description': 'The key tag value that is used to determine which key to use to verify signatures.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name of the DNS DS record in FQDN format.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_dtclbdn': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'The comment for the DTC LBDN record object; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the DTC LBDN is disabled or not.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'lbdn': {'type': 'string', 'description': 'The DTC LBDN object.'}, 'name': {'type': 'string', 'description': 'The display name of the DTC LBDN record.'}, 'pattern': {'type': 'string', 'description': 'An FQDN pattern, LBDN wildcards can be used.'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides.'}}}, 'record_host_ipv4addr': {'type': 'object', 'properties': {'bootfile': {'type': 'string', 'description': 'The name of the boot file the client must download.'}, 'bootserver': {'type': 'string', 'description': 'The IP address or hostname of the boot file server where the boot file is stored.'}, 'configure_for_dhcp': {'type': 'boolean', 'example': 'boolean', 'description': 'Set this to True to enable the DHCP configuration for this host address.'}, 'deny_bootp': {'type': 'boolean', 'example': 'boolean', 'description': 'Set this to True to disable the BOOTP settings and deny BOOTP boot requests.'}, 'discover_now_status': {'type': 'string', 'enum': ['NONE', 'PENDING', 'RUNNING', 'COMPLETE', 'FAILED'], 'description': 'The discovery status of this Host Address.'}, 'discovered_data': {'type': 'string', 'enum': ['discoverydata'], 'description': 'The discovered data for this Host Address.'}, 'enable_pxe_lease_time': {'type': 'boolean', 'example': 'boolean', 'description': 'Set this to True if you want the DHCP server to use a different lease time for PXE clients. You can specify the duration of time it takes a host to connect to a boot server, such as a TFTP server, and download the file it needs to boot. For example, set a longer lease time if the client downloads an OS (operating system) or configuration file, or set a shorter lease time if the client downloads only configuration changes. Enter the lease time for the preboot execution environment for hosts to boot remotely from a server.'}, 'host': {'type': 'string', 'description': 'The host to which the host address belongs, in FQDN format. It is only present when the host address object is not returned as part of a host.'}, 'ignore_client_requested_options': {'type': 'boolean', 'example': 'boolean', 'description': 'If this field is set to false, the appliance returns all DHCP options the client is eligible to receive, rather than only the list of options the client has requested.'}, 'ipv4addr': {'type': 'string', 'description': 'The IPv4 Address of the host.'}, 'is_invalid_mac': {'type': 'boolean', 'example': 'boolean', 'description': 'This flag reflects whether the MAC address for this host address is invalid.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'logic_filter_rules': {'type': 'string', 'enum': ['logicfilterrule'], 'description': 'This field contains the logic filters to be applied on the this host address. This list corresponds to the match rules that are written to the dhcpd configuration file.'}, 'mac': {'type': 'string', 'description': 'The MAC address for this host address.'}, 'match_client': {'type': 'string', 'description': "Set this to 'MAC_ADDRESS' to assign the IP address to the selected host, provided that the MAC address of the requesting host matches the MAC address that you specify in the field. Set this to 'RESERVED' to reserve this particular IP address for future use, or if the IP address is statically configured on a system (the Infoblox server does not assign the address from a DHCP request)."}, 'ms_ad_user_data': {'type': 'string', 'enum': ['msserver:aduser:data'], 'description': 'The Microsoft Active Directory user related information.'}, 'network': {'type': 'string', 'description': 'The network of the host address, in FQDN/CIDR format.'}, 'network_view': {'type': 'string', 'description': 'The name of the network view in which the host address resides.'}, 'nextserver': {'type': 'string', 'description': 'The name in FQDN format and/or IPv4 Address of the next server that the host needs to boot.'}, 'options': {'type': 'string', 'enum': ['dhcpoption'], 'description': 'An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.'}, 'pxe_lease_time': {'type': 'integer', 'example': 'integer', 'description': 'The lease time for PXE clients, see *enable_pxe_lease_time* for more information.'}, 'reserved_interface': {'type': 'string', 'description': 'The reference to the reserved interface to which the device belongs.'}, 'use_bootfile': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: bootfile'}, 'use_bootserver': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: bootserver'}, 'use_deny_bootp': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: deny_bootp'}, 'use_for_ea_inheritance': {'type': 'boolean', 'example': 'boolean', 'description': 'Set this to True when using this host address for EA inheritance.'}, 'use_ignore_client_requested_options': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ignore_client_requested_options'}, 'use_logic_filter_rules': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: logic_filter_rules'}, 'use_nextserver': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: nextserver'}, 'use_options': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: options'}, 'use_pxe_lease_time': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: pxe_lease_time'}}}, 'record_host_ipv6addr': {'type': 'object', 'properties': {'address_type': {'type': 'string', 'enum': ['ADDRESS', 'PREFIX', 'BOTH'], 'description': 'Type of the DHCP IPv6 Host Address object.'}, 'configure_for_dhcp': {'type': 'boolean', 'example': 'boolean', 'description': 'Set this to True to enable the DHCP configuration for this IPv6 host address.'}, 'discover_now_status': {'type': 'string', 'enum': ['NONE', 'PENDING', 'RUNNING', 'COMPLETE', 'FAILED'], 'description': 'The discovery status of this IPv6 Host Address.'}, 'discovered_data': {'type': 'string', 'enum': ['discoverydata'], 'description': 'The discovered data for this IPv6 Host Address.'}, 'domain_name': {'type': 'string', 'description': 'Use this method to set or retrieve the domain_name value of the DHCP IPv6 Host Address object.'}, 'domain_name_servers': {'type': 'string', 'description': 'The IPv6 addresses of DNS recursive name servers to which the DHCP client can send name resolution requests. The DHCP server includes this information in the DNS Recursive Name Server option in Advertise, Rebind, Information-Request, and Reply messages.'}, 'duid': {'type': 'string', 'description': 'DHCPv6 Unique Identifier (DUID) of the address object.'}, 'host': {'type': 'string', 'description': 'The host to which the IPv6 host address belongs, in FQDN format. It is only present when the host address object is not returned as part of a host.'}, 'ipv6addr': {'type': 'string', 'description': 'The IPv6 Address prefix of the DHCP IPv6 Host Address object.'}, 'ipv6prefix': {'type': 'string', 'description': 'The IPv6 Address prefix of the DHCP IPv6 Host Address object.'}, 'ipv6prefix_bits': {'type': 'integer', 'example': 'integer', 'description': 'Prefix bits of the DHCP IPv6 Host Address object.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'match_client': {'type': 'string', 'description': "Set this to 'DUID' to assign the IP address to the selected host, provided that the DUID of the requesting host matches the DUID that you specify in the field. Set this to 'RESERVED' to reserve this particular IP address for future use, or if the IP address is statically configured on a system (the Infoblox server does not assign the address from a DHCP request)."}, 'ms_ad_user_data': {'type': 'string', 'enum': ['msserver:aduser:data'], 'description': 'The Microsoft Active Directory user related information.'}, 'network': {'type': 'string', 'description': 'The network of the host address, in FQDN/CIDR format.'}, 'network_view': {'type': 'string', 'description': 'The name of the network view in which the host address resides.'}, 'options': {'type': 'string', 'enum': ['dhcpoption'], 'description': 'An array of DHCP option dhcpoption structs that lists the DHCP options associated with the object.'}, 'preferred_lifetime': {'type': 'integer', 'example': 'integer', 'description': 'Use this method to set or retrieve the preferred lifetime value of the DHCP IPv6 Host Address object.'}, 'reserved_interface': {'type': 'string', 'description': 'The reference to the reserved interface to which the device belongs.'}, 'use_domain_name': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: domain_name'}, 'use_domain_name_servers': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: domain_name_servers'}, 'use_for_ea_inheritance': {'type': 'boolean', 'example': 'boolean', 'description': 'Set this to True when using this host address for EA inheritance.'}, 'use_options': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: options'}, 'use_preferred_lifetime': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: preferred_lifetime'}, 'use_valid_lifetime': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: valid_lifetime'}, 'valid_lifetime': {'type': 'integer', 'example': 'integer', 'description': 'Use this method to set or retrieve the valid lifetime value of the DHCP IPv6 Host Address object.'}}}, 'record_mx': {'type': 'object', 'properties': {'aws_rte53_record_info': {'type': 'string', 'enum': ['awsrte53recordinfo'], 'description': 'Aws Route 53 record information.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'dns_mail_exchanger': {'type': 'string', 'description': 'The Mail exchanger name in punycode format.'}, 'dns_name': {'type': 'string', 'description': 'The name for a MX record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the reclamation is allowed for the record or not.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'mail_exchanger': {'type': 'string', 'description': 'Mail exchanger name in FQDN format. This value can be in unicode format.'}, 'name': {'type': 'string', 'description': 'Name for the MX record in FQDN format. This value can be in unicode format.'}, 'preference': {'type': 'integer', 'example': 'integer', 'description': 'Preference value, 0 to 65535 (inclusive) in 32-bit unsigned integer format.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides. This field exists only on db_objects if this record is a shared record.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_naptr': {'type': 'object', 'properties': {'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name of the NAPTR record in punycode format.'}, 'dns_replacement': {'type': 'string', 'description': 'The replacement field of the NAPTR record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'flags': {'type': 'string', 'description': 'The flags used to control the interpretation of the fields for an NAPTR record object. Supported values for the flags field are U, S, P and A.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the reclamation is allowed for the record or not.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name of the NAPTR record in FQDN format. This value can be in unicode format.'}, 'order': {'type': 'integer', 'example': 'integer', 'description': 'The order parameter of the NAPTR records. This parameter specifies the order in which the NAPTR rules are applied when multiple rules are present. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}, 'preference': {'type': 'integer', 'example': 'integer', 'description': 'The preference of the NAPTR record. The preference field determines the order NAPTR records are processed when multiple records with the same order parameter are present. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'regexp': {'type': 'string', 'description': 'The regular expression-based rewriting rule of the NAPTR record. This should be a POSIX compliant regular expression, including the substitution rule and flags. Refer to RFC 2915 for the field syntax details.'}, 'replacement': {'type': 'string', 'description': 'The replacement field of the NAPTR record object. For nonterminal NAPTR records, this field specifies the next domain name to look up. This value can be in unicode format.'}, 'services': {'type': 'string', 'description': 'The services field of the NAPTR record object; maximum 128 characters. The services field contains protocol and service identifiers, such as http+E2U or SIPS+D2T.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time to Live (TTL) value for the NAPTR record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_ns': {'type': 'object', 'properties': {'addresses': {'type': 'string', 'enum': ['zonenameserver'], 'description': 'The list of zone name servers.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'SYSTEM'], 'description': 'The record creator.'}, 'dns_name': {'type': 'string', 'description': 'The name of the NS record in punycode format.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'ms_delegation_name': {'type': 'string', 'description': 'The MS delegation point name.'}, 'name': {'type': 'string', 'description': 'The name of the NS record in FQDN format. This value can be in unicode format.'}, 'nameserver': {'type': 'string', 'description': 'The domain name of an authoritative server for the redirected zone.'}, 'policy': {'type': 'string', 'description': 'The host name policy for the record.'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_nsec': {'type': 'object', 'properties': {'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'Time that the record was created.'}, 'creator': {'type': 'string', 'enum': ['SYSTEM', 'STATIC', 'DYNAMIC'], 'description': 'Creator of the record.'}, 'dns_name': {'type': 'string', 'description': 'Name for an NSEC record in punycode format.'}, 'dns_next_owner_name': {'type': 'string', 'description': 'Name of the next owner in punycode format.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name of the NSEC record in FQDN format.'}, 'next_owner_name': {'type': 'string', 'description': 'Name of the next owner that has authoritative data or that contains a delegation point NS record.'}, 'rrset_types': {'type': 'string', 'description': 'The RRSet types that exist at the original owner name of the NSEC RR.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_nsec3': {'type': 'object', 'properties': {'algorithm': {'type': 'string', 'enum': ['DSA', 'NSEC3DSA', 'NSEC3RSASHA1', 'RSAMD5', 'RSASHA1', 'RSASHA256', 'RSASHA512'], 'description': 'The hash algorithm that was used.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The creation time of the record.'}, 'creator': {'type': 'string', 'enum': ['SYSTEM', 'STATIC', 'DYNAMIC'], 'description': 'Creator of the record.'}, 'dns_name': {'type': 'string', 'description': 'Name for an NSEC3 record in punycode format.'}, 'flags': {'type': 'integer', 'example': 'integer', 'description': 'The set of 8 one-bit flags, of which only one flag, the Opt-Out flag, is defined by RFC 5155. The Opt-Out flag indicates whether the NSEC3 record covers unsigned delegations.'}, 'iterations': {'type': 'integer', 'example': 'integer', 'description': 'The number of times the hash function was performed.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name of the NSEC3 record in FQDN format.'}, 'next_owner_name': {'type': 'string', 'description': 'The hashed next owner name that has authoritative data or that contains a delegation point NS record.'}, 'rrset_types': {'type': 'string', 'description': 'The RRSet types that exist at the original owner name of the NSEC3 RR.'}, 'salt': {'type': 'string', 'description': 'A series of case-insensitive hexadecimal digits. It is appended to the original owner name as protection against pre-calculated dictionary attacks. A new salt value is generated when ZSK rolls over. You can control the period of the rollover. For random salt values, the selected length is between one and 15 octets.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_nsec3param': {'type': 'object', 'properties': {'algorithm': {'type': 'string', 'enum': ['DSA', 'NSEC3DSA', 'NSEC3RSASHA1', 'RSAMD5', 'RSASHA1', 'RSASHA256', 'RSASHA512'], 'description': 'The hash algorithm that was used.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The creation time of the record.'}, 'creator': {'type': 'string', 'enum': ['SYSTEM', 'STATIC', 'DYNAMIC'], 'description': 'Creator of the record.'}, 'dns_name': {'type': 'string', 'description': 'Name for an NSEC3PARAM record in punycode format.'}, 'flags': {'type': 'integer', 'example': 'integer', 'description': 'The set of 8 one-bit flags, of which only one flag, the Opt-Out flag, is defined by RFC 5155. The Opt-Out flag indicates whether the NSEC3 record covers unsigned delegations.'}, 'iterations': {'type': 'integer', 'example': 'integer', 'description': 'The number of times the hash function was performed.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name of the NSEC3PARAM record in FQDN format. It has to be the same as the zone, where the record resides.'}, 'salt': {'type': 'string', 'description': 'A series of case-insensitive hexadecimal digits. It is appended to the original owner name as protection against pre-calculated dictionary attacks. A new salt value is generated when the ZSK rolls over, for which the user can control the period. For a random salt value, the selected length is between one and 15 octets.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_ptr': {'type': 'object', 'properties': {'aws_rte53_record_info': {'type': 'string', 'enum': ['awsrte53recordinfo'], 'description': 'Aws Route 53 record information.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'discovered_data': {'type': 'string', 'enum': ['discoverydata'], 'description': 'The discovered data for this PTR record.'}, 'dns_name': {'type': 'string', 'description': 'The name for a DNS PTR record in punycode format.'}, 'dns_ptrdname': {'type': 'string', 'description': 'The domain name of the DNS PTR record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the reclamation is allowed for the record or not.'}, 'ipv4addr': {'type': 'string', 'description': 'The IPv4 Address of the record.'}, 'ipv6addr': {'type': 'string', 'description': 'The IPv6 Address of the record.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'ms_ad_user_data': {'type': 'string', 'enum': ['msserver:aduser:data'], 'description': 'The Microsoft Active Directory user related information.'}, 'name': {'type': 'string', 'description': 'The name of the DNS PTR record in FQDN format.'}, 'ptrdname': {'type': 'string', 'description': 'The domain name of the DNS PTR record in FQDN format.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides. This field exists only on db_objects if this record is a shared record.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, that the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'Name of the DNS View in which the record resides, for example external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. For example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_rrsig': {'type': 'object', 'properties': {'algorithm': {'type': 'string', 'enum': ['DSA', 'ECDSAP256SHA256', 'ECDSAP384SHA384', 'NSEC3DSA', 'NSEC3RSASHA1', 'RSAMD5', 'RSASHA1', 'RSASHA256', 'RSASHA512'], 'description': 'The cryptographic algorithm that was used to create the signature. It uses the same algorithm types as the DNSKEY record indicated in the key tag field.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The creation time of the record.'}, 'creator': {'type': 'string', 'enum': ['SYSTEM', 'STATIC', 'DYNAMIC'], 'description': 'The record creator.'}, 'dns_name': {'type': 'string', 'description': 'Name for an RRSIG record in punycode format.'}, 'dns_signer_name': {'type': 'string', 'description': 'The domain name, in punycode format, of the zone that contains the signed RRset.'}, 'expiration_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The expiry time of an RRSIG record in Epoch seconds format.'}, 'inception_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The inception time of an RRSIG record in Epoch seconds format.'}, 'key_tag': {'type': 'integer', 'example': 'integer', 'description': 'The key tag value of the DNSKEY RR that validates the signature.'}, 'labels': {'type': 'integer', 'example': 'integer', 'description': 'The number of labels in the name of the RRset signed with the RRSIG object.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'The name of the RRSIG record in FQDN format.'}, 'original_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The TTL value of the RRset covered by the RRSIG record.'}, 'signature': {'type': 'string', 'description': 'The Base64 encoded cryptographic signature that covers the RRSIG RDATA of the RRSIG Record object.'}, 'signer_name': {'type': 'string', 'description': 'The domain name of the zone in FQDN format that contains the signed RRset.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'type_covered': {'type': 'string', 'description': 'The RR type covered by the RRSIG record.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS View in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_srv': {'type': 'object', 'properties': {'aws_rte53_record_info': {'type': 'string', 'enum': ['awsrte53recordinfo'], 'description': 'Aws Route 53 record information.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name for an SRV record in punycode format.'}, 'dns_target': {'type': 'string', 'description': 'The name for a SRV record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the reclamation is allowed for the record or not.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'A name in FQDN format. This value can be in unicode format.'}, 'port': {'type': 'integer', 'example': 'integer', 'description': 'The port of the SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}, 'priority': {'type': 'integer', 'example': 'integer', 'description': 'The priority of the SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides. This field exists only on db_objects if this record is a shared record.'}, 'target': {'type': 'string', 'description': 'The target of the SRV record in FQDN format. This value can be in unicode format.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time to Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'weight': {'type': 'integer', 'example': 'integer', 'description': 'The weight of the SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_tlsa': {'type': 'object', 'properties': {'certificate_data': {'type': 'string', 'description': 'Hex dump of either raw data for matching type 0, or the hash of the raw data for matching types 1 and 2.'}, 'certificate_usage': {'type': 'integer', 'example': 'integer', 'description': 'Specifies the provided association that will be used to match the certificate presented in the TLS handshake. Based on RFC-6698.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name of the TLSA record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'matched_type': {'type': 'integer', 'example': 'integer', 'description': 'Specifies how the certificate association is presented. Based on RFC-6698.'}, 'name': {'type': 'string', 'description': 'The TLSA record name in FQDN format. This value can be in unicode format.'}, 'selector': {'type': 'integer', 'example': 'integer', 'description': 'Specifies which part of the TLS certificate presented by the server will be matched against the association data. Based on RFC-6698.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time to Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'record_txt': {'type': 'object', 'properties': {'aws_rte53_record_info': {'type': 'string', 'enum': ['awsrte53recordinfo'], 'description': 'Aws Route 53 record information.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the record; maximum 256 characters.'}, 'creation_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the record creation in Epoch seconds format.'}, 'creator': {'type': 'string', 'enum': ['STATIC', 'DYNAMIC', 'SYSTEM'], 'description': "The record creator. Note that changing creator from or to 'SYSTEM' value is not allowed."}, 'ddns_principal': {'type': 'string', 'description': 'The GSS-TSIG principal that owns this record.'}, 'ddns_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DDNS updates for this record are allowed or not.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name for a TXT record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forbid_reclamation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the reclamation is allowed for the record or not.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time of the last DNS query in Epoch seconds format.'}, 'name': {'type': 'string', 'description': 'Name for the TXT record in FQDN format. This value can be in unicode format.'}, 'reclaimable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the record is reclaimable or not.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides. This field exists only on db_objects if this record is a shared record.'}, 'text': {'type': 'string', 'description': 'Text associated with the record. It can contain up to 255 bytes per substring, up to a total of 512 bytes. To enter leading, trailing, or embedded spaces in the text, add quotes around the text to preserve the spaces.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for the record. A 32-bit unsigned integer that represents the duration, in seconds, for which the record is valid (cached). Zero indicates that the record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the record resides. Example: external.'}, 'zone': {'type': 'string', 'description': 'The name of the zone in which the record resides. Example: zone.com. If a view is not specified when searching by zone, the default view is used.'}}}, 'recordnamepolicy': {'type': 'object', 'properties': {'is_default': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the record name policy is Grid default.'}, 'name': {'type': 'string', 'description': 'The name of the record name policy object.'}, 'pre_defined': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the record name policy is a predefined one.'}, 'regex': {'type': 'string', 'description': 'The POSIX regular expression the record names should match in order to comply with the record name policy.'}}}, 'ruleset': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Descriptive comment about the Ruleset object.'}, 'disabled': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates if the Ruleset object is disabled.'}, 'name': {'type': 'string', 'description': 'The name of this Ruleset object.'}, 'nxdomain_rules': {'type': 'string', 'enum': ['nxdomainrule'], 'description': 'The list of Rules assigned to this Ruleset object. Rules can be set only when the Ruleset type is set to NXDOMAIN.'}, 'type': {'type': 'string', 'enum': ['NXDOMAIN', 'BLACKLIST'], 'description': 'The type of this Ruleset object.'}}}, 'sharedrecord_a': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for this shared record; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this shared record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name for this shared record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'ipv4addr': {'type': 'string', 'description': 'The IPv4 Address of the shared record.'}, 'name': {'type': 'string', 'description': 'Name for this shared record. This value can be in unicode format.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for this shared record. A 32-bit unsigned integer that represents the duration, in seconds, for which the shared record is valid (cached). Zero indicates that the shared record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}}}, 'sharedrecord_aaaa': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for this shared record; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this shared record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name for this shared record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'ipv6addr': {'type': 'string', 'description': 'The IPv6 Address of the shared record.'}, 'name': {'type': 'string', 'description': 'Name for this shared record. This value can be in unicode format.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for this shared record. A 32-bit unsigned integer that represents the duration, in seconds, for which the shared record is valid (cached). Zero indicates that the shared record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}}}, 'sharedrecord_cname': {'type': 'object', 'properties': {'canonical': {'type': 'string', 'description': 'Canonical name in FQDN format. This value can be in unicode format.'}, 'comment': {'type': 'string', 'description': 'Comment for this shared record; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this shared record is disabled or not. False means that the record is enabled.'}, 'dns_canonical': {'type': 'string', 'description': 'Canonical name in punycode format.'}, 'dns_name': {'type': 'string', 'description': 'The name for this shared record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'name': {'type': 'string', 'description': 'Name for this shared record. This value can be in unicode format.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for this shared record. A 32-bit unsigned integer that represents the duration, in seconds, for which the shared record is valid (cached). Zero indicates that the shared record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}}}, 'sharedrecord_mx': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for this shared record; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this shared record is disabled or not. False means that the record is enabled.'}, 'dns_mail_exchanger': {'type': 'string', 'description': 'The name of the mail exchanger in punycode format.'}, 'dns_name': {'type': 'string', 'description': 'The name for this shared record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'mail_exchanger': {'type': 'string', 'description': 'The name of the mail exchanger in FQDN format. This value can be in unicode format.'}, 'name': {'type': 'string', 'description': 'Name for this shared record. This value can be in unicode format.'}, 'preference': {'type': 'integer', 'example': 'integer', 'description': 'The preference value. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for this shared record. A 32-bit unsigned integer that represents the duration, in seconds, for which the shared record is valid (cached). Zero indicates that the shared record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}}}, 'sharedrecord_srv': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for this shared record; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this shared record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name for this shared record in punycode format.'}, 'dns_target': {'type': 'string', 'description': 'The name for a shared SRV record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'name': {'type': 'string', 'description': 'Name for this shared record. This value can be in unicode format.'}, 'port': {'type': 'integer', 'example': 'integer', 'description': 'The port of the shared SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}, 'priority': {'type': 'integer', 'example': 'integer', 'description': 'The priority of the shared SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides.'}, 'target': {'type': 'string', 'description': 'The target of the shared SRV record in FQDN format. This value can be in unicode format.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for this shared record. A 32-bit unsigned integer that represents the duration, in seconds, for which the shared record is valid (cached). Zero indicates that the shared record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}, 'weight': {'type': 'integer', 'example': 'integer', 'description': 'The weight of the shared SRV record. Valid values are from 0 to 65535 (inclusive), in 32-bit unsigned integer format.'}}}, 'sharedrecord_txt': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for this shared record; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this shared record is disabled or not. False means that the record is enabled.'}, 'dns_name': {'type': 'string', 'description': 'The name for this shared record in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'name': {'type': 'string', 'description': 'Name for this shared record. This value can be in unicode format.'}, 'shared_record_group': {'type': 'string', 'description': 'The name of the shared record group in which the record resides.'}, 'text': {'type': 'string', 'description': 'Text associated with the shared record. It can contain up to 255 bytes per substring and up a total of 512 bytes. To enter leading, trailing or embedded spaces in the text, add quotes ( ) around the text to preserve the spaces.'}, 'ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value for this shared record. A 32-bit unsigned integer that represents the duration, in seconds, for which the shared record is valid (cached). Zero indicates that the shared record should not be cached.'}, 'use_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ttl'}}}, 'sharedrecordgroup': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'The descriptive comment of this shared record group.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'name': {'type': 'string', 'description': 'The name of this shared record group.'}, 'record_name_policy': {'type': 'string', 'description': 'The record name policy of this shared record group.'}, 'use_record_name_policy': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: record_name_policy'}, 'zone_associations': {'type': 'string', 'description': 'The list of zones associated with this shared record group.'}}}, 'view': {'type': 'object', 'properties': {'blacklist_action': {'type': 'string', 'enum': ['REDIRECT', 'REFUSE'], 'description': 'The action to perform when a domain name matches the pattern defined in a rule that is specified by the blacklist_ruleset method. Valid values are REDIRECT or REFUSE. The default value is REFUSE.'}, 'blacklist_log_query': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether blacklist redirection queries are logged. Specify true to enable logging, or false to disable it. The default value is false.'}, 'blacklist_redirect_addresses': {'type': 'string', 'description': 'The array of IP addresses the appliance includes in the response it sends in place of a blacklisted IP address.'}, 'blacklist_redirect_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value of the synthetic DNS responses resulted from blacklist redirection. The TTL value is a 32-bit unsigned integer that represents the TTL in seconds.'}, 'blacklist_rulesets': {'type': 'string', 'description': 'The name of the Ruleset object assigned at the Grid level for blacklist redirection.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the DNS view; maximum 64 characters.'}, 'custom_root_name_servers': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of customized root name servers. You can either select and use Internet root name servers or specify custom root name servers by providing a host name and IP address to which the Infoblox appliance can send queries. Include the specified parameter to set the attribute value. Omit the parameter to retrieve the attribute value.'}, 'ddns_force_creation_timestamp_update': {'type': 'boolean', 'example': 'boolean', 'description': "Defines whether creation timestamp of RR should be updated ' when DDNS update happens even if there is no change to ' the RR."}, 'ddns_principal_group': {'type': 'string', 'description': 'The DDNS Principal cluster group name.'}, 'ddns_principal_tracking': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the DDNS principal track is enabled or disabled.'}, 'ddns_restrict_patterns': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether an option to restrict DDNS update request based on FQDN patterns is enabled or disabled.'}, 'ddns_restrict_patterns_list': {'type': 'string', 'description': 'The unordered list of restriction patterns for an option of to restrict DDNS updates based on FQDN patterns.'}, 'ddns_restrict_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether an option to restrict DDNS update request to protected resource records is enabled or disabled.'}, 'ddns_restrict_secure': {'type': 'boolean', 'example': 'boolean', 'description': "The flag that indicates whether DDNS update request for principal other than target resource record's principal is restricted."}, 'ddns_restrict_static': {'type': 'boolean', 'example': 'boolean', 'description': "The flag that indicates whether an option to restrict DDNS update request to resource records which are marked as 'STATIC' is enabled or disabled."}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS view is disabled or not. When this is set to False, the DNS view is enabled.'}, 'dns64_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS64 s enabled or not.'}, 'dns64_groups': {'type': 'string', 'description': 'The list of DNS64 synthesis groups associated with this DNS view.'}, 'dnssec_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS security extension is enabled or not.'}, 'dnssec_expired_signatures_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS security extension accepts expired signatures or not.'}, 'dnssec_negative_trust_anchors': {'type': 'string', 'description': 'A list of zones for which the server does not perform DNSSEC validation.'}, 'dnssec_trusted_keys': {'type': 'string', 'enum': ['dnssectrustedkey'], 'description': 'The list of trusted keys for the DNS security extension.'}, 'dnssec_validation_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the DNS security validation is enabled or not.'}, 'enable_blacklist': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the blacklist in a DNS view is enabled or not.'}, 'enable_fixed_rrset_order_fqdns': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the fixed RRset order FQDN is enabled or not.'}, 'enable_match_recursive_only': {'type': 'boolean', 'example': 'boolean', 'description': "Determines if the 'match-recursive-only' option in a DNS view is enabled or not."}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'filter_aaaa': {'type': 'string', 'enum': ['YES', 'NO', 'BREAK_DNSSEC'], 'description': 'The type of AAAA filtering for this DNS view object.'}, 'filter_aaaa_list': {'type': 'string', 'enum': ['addressac'], 'description': 'Applies AAAA filtering to a named ACL, or to a list of IPv4/IPv6 addresses and networks from which queries are received. This field does not allow TSIG keys.'}, 'fixed_rrset_order_fqdns': {'type': 'string', 'enum': ['grid:dns:fixedrrsetorderfqdn'], 'description': "The fixed RRset order FQDN. If this field does not contain an empty value, the appliance will automatically set the enable_fixed_rrset_order_fqdns field to 'true', unless the same request sets the enable field to 'false'."}, 'forward_only': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this DNS view sends queries to forwarders only or not. When the value is True, queries are sent to forwarders only, and not to other internal or Internet root servers.'}, 'forwarders': {'type': 'string', 'description': 'The list of forwarders for the DNS view. A forwarder is a name server to which other name servers first send their off-site queries. The forwarder builds up a cache of information, avoiding the need for other name servers to send queries off-site.'}, 'is_default': {'type': 'boolean', 'example': 'boolean', 'description': 'The NIOS appliance provides one default DNS view. You can rename the default view and change its settings, but you cannot delete it. There must always be at least one DNS view in the appliance.'}, 'lame_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The number of seconds to cache lame delegations or lame servers.'}, 'match_clients': {'type': 'string', 'enum': ['addressac'], 'description': 'A list of forwarders for the match clients. This list specifies a named ACL, or a list of IPv4/IPv6 addresses, networks, TSIG keys of clients that are allowed or denied access to the DNS view.'}, 'match_destinations': {'type': 'string', 'enum': ['addressac'], 'description': 'A list of forwarders for the match destinations. This list specifies a name ACL, or a list of IPv4/IPv6 addresses, networks, TSIG keys of clients that are allowed or denied access to the DNS view.'}, 'max_cache_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The maximum number of seconds to cache ordinary (positive) answers.'}, 'max_ncache_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The maximum number of seconds to cache negative (NXDOMAIN) answers.'}, 'name': {'type': 'string', 'description': 'Name of the DNS view.'}, 'network_view': {'type': 'string', 'description': 'The name of the network view object associated with this DNS view.'}, 'notify_delay': {'type': 'integer', 'example': 'integer', 'description': 'The number of seconds of delay the notify messages are sent to secondaries.'}, 'nxdomain_log_query': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether NXDOMAIN redirection queries are logged. Specify true to enable logging, or false to disable it. The default value is false.'}, 'nxdomain_redirect': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if NXDOMAIN redirection in a DNS view is enabled or not.'}, 'nxdomain_redirect_addresses': {'type': 'string', 'description': 'The array with IPv4 addresses the appliance includes in the response it sends in place of an NXDOMAIN response.'}, 'nxdomain_redirect_addresses_v6': {'type': 'string', 'description': 'The array with IPv6 addresses the appliance includes in the response it sends in place of an NXDOMAIN response.'}, 'nxdomain_redirect_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time To Live (TTL) value of the synthetic DNS responses resulted from NXDOMAIN redirection. The TTL value is a 32-bit unsigned integer that represents the TTL in seconds.'}, 'nxdomain_rulesets': {'type': 'string', 'description': 'The names of the Ruleset objects assigned at the grid level for NXDOMAIN redirection.'}, 'recursion': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if recursion is enabled or not.'}, 'response_rate_limiting': {'type': 'string', 'enum': ['grid:responseratelimiting'], 'description': 'The response rate limiting settings for the DNS View.'}, 'root_name_server_type': {'type': 'string', 'enum': ['CUSTOM', 'INTERNET'], 'description': 'Determines the type of root name servers.'}, 'rpz_drop_ip_rule_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Enables the appliance to ignore RPZ-IP triggers with prefix lengths less than the specified minimum prefix length.'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'integer', 'example': 'integer', 'description': 'The minimum prefix length for IPv4 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv4 prefix length.'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'integer', 'example': 'integer', 'description': 'The minimum prefix length for IPv6 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv6 prefix length.'}, 'rpz_qname_wait_recurse': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether recursive RPZ lookups are enabled.'}, 'scavenging_settings': {'type': 'string', 'enum': ['setting:scavenging'], 'description': 'The scavenging settings.'}, 'sortlist': {'type': 'string', 'enum': ['sortlist'], 'description': 'A sort list that determines the order of IP addresses in responses sent to DNS queries.'}, 'use_blacklist': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: blacklist_action , blacklist_log_query, blacklist_redirect_addresses, blacklist_redirect_ttl, blacklist_rulesets, enable_blacklist'}, 'use_ddns_force_creation_timestamp_update': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_force_creation_timestamp_update'}, 'use_ddns_patterns_restriction': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_restrict_patterns_list , ddns_restrict_patterns'}, 'use_ddns_principal_security': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_restrict_secure , ddns_principal_tracking, ddns_principal_group'}, 'use_ddns_restrict_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_restrict_protected'}, 'use_ddns_restrict_static': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_restrict_static'}, 'use_dns64': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: dns64_enabled , dns64_groups'}, 'use_dnssec': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: dnssec_enabled , dnssec_expired_signatures_enabled, dnssec_validation_enabled, dnssec_trusted_keys'}, 'use_filter_aaaa': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: filter_aaaa , filter_aaaa_list'}, 'use_fixed_rrset_order_fqdns': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: fixed_rrset_order_fqdns , enable_fixed_rrset_order_fqdns'}, 'use_forwarders': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: forwarders , forward_only'}, 'use_lame_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: lame_ttl'}, 'use_max_cache_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: max_cache_ttl'}, 'use_max_ncache_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: max_ncache_ttl'}, 'use_nxdomain_redirect': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: nxdomain_redirect , nxdomain_redirect_addresses, nxdomain_redirect_addresses_v6, nxdomain_redirect_ttl, nxdomain_log_query, nxdomain_rulesets'}, 'use_recursion': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: recursion'}, 'use_response_rate_limiting': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: response_rate_limiting'}, 'use_root_name_server': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: custom_root_name_servers , root_name_server_type'}, 'use_rpz_drop_ip_rule': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: rpz_drop_ip_rule_enabled , rpz_drop_ip_rule_min_prefix_length_ipv4, rpz_drop_ip_rule_min_prefix_length_ipv6'}, 'use_rpz_qname_wait_recurse': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: rpz_qname_wait_recurse'}, 'use_scavenging_settings': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: scavenging_settings'}, 'use_sortlist': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: sortlist'}}}, 'zone_auth': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The IP address of the server that is serving this zone.'}, 'allow_active_dir': {'type': 'string', 'enum': ['addressac'], 'description': "This field allows the zone to receive GSS-TSIG authenticated DDNS updates from DHCP clients and servers in an AD domain. Note that addresses specified in this field ignore the permission set in the struct which will be set to 'ALLOW'."}, 'allow_gss_tsig_for_underscore_zone': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that allows DHCP clients to perform GSS-TSIG signed updates for underscore zones.'}, 'allow_gss_tsig_zone_updates': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that enables or disables the zone for GSS-TSIG updates.'}, 'allow_query': {'type': 'string', 'enum': ['addressac'], 'description': 'Determines whether DNS queries are allowed from a named ACL, or from a list of IPv4/IPv6 addresses, networks, and TSIG keys for the hosts.'}, 'allow_transfer': {'type': 'string', 'enum': ['addressac'], 'description': 'Determines whether zone transfers are allowed from a named ACL, or from a list of IPv4/IPv6 addresses, networks, and TSIG keys for the hosts.'}, 'allow_update': {'type': 'string', 'enum': ['addressac'], 'description': 'Determines whether dynamic DNS updates are allowed from a named ACL, or from a list of IPv4/IPv6 addresses, networks, and TSIG keys for the hosts.'}, 'allow_update_forwarding': {'type': 'boolean', 'example': 'boolean', 'description': 'The list with IP addresses, networks or TSIG keys for clients, from which forwarded dynamic updates are allowed.'}, 'aws_rte53_zone_info': {'type': 'string', 'enum': ['awsrte53zoneinfo'], 'description': 'Additional information for Route53 zone.'}, 'cloud_info': {'type': 'string', 'enum': ['grid:cloudapi:info'], 'description': 'Structure containing all cloud API related information for this object.'}, 'comment': {'type': 'string', 'description': 'Comment for the zone; maximum 256 characters.'}, 'copy_xfer_to_notify': {'type': 'boolean', 'example': 'boolean', 'description': 'If this flag is set to True then copy allowed IPs from Allow Transfer to Also Notify.'}, 'create_ptr_for_bulk_hosts': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if PTR records are created for hosts automatically, if necessary, when the zone data is imported. This field is meaningful only when import_from is set.'}, 'create_ptr_for_hosts': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if PTR records are created for hosts automatically, if necessary, when the zone data is imported. This field is meaningful only when import_from is set.'}, 'create_underscore_zones': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether automatic creation of subzones is enabled or not.'}, 'ddns_force_creation_timestamp_update': {'type': 'boolean', 'example': 'boolean', 'description': "Defines whether creation timestamp of RR should be updated ' when DDNS update happens even if there is no change to ' the RR."}, 'ddns_principal_group': {'type': 'string', 'description': 'The DDNS Principal cluster group name.'}, 'ddns_principal_tracking': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether the DDNS principal track is enabled or disabled.'}, 'ddns_restrict_patterns': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether an option to restrict DDNS update request based on FQDN patterns is enabled or disabled.'}, 'ddns_restrict_patterns_list': {'type': 'string', 'description': 'The unordered list of restriction patterns for an option of to restrict DDNS updates based on FQDN patterns.'}, 'ddns_restrict_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that indicates whether an option to restrict DDNS update request to protected resource records is enabled or disabled.'}, 'ddns_restrict_secure': {'type': 'boolean', 'example': 'boolean', 'description': "The flag that indicates whether DDNS update request for principal other than target resource record's principal is restricted."}, 'ddns_restrict_static': {'type': 'boolean', 'example': 'boolean', 'description': "The flag that indicates whether an option to restrict DDNS update request to resource records which are marked as 'STATIC' is enabled or disabled."}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a zone is disabled or not. When this is set to False, the zone is enabled.'}, 'disable_forwarding': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the name servers that host the zone should forward queries (ended with the domain name of the zone) to any configured forwarders.'}, 'display_domain': {'type': 'string', 'description': 'The displayed name of the DNS zone.'}, 'dns_fqdn': {'type': 'string', 'description': 'The name of this DNS zone in punycode format. For a reverse zone, this is in address/cidr format. For other zones, this is in FQDN format in punycode format.'}, 'dns_integrity_enable': {'type': 'boolean', 'example': 'boolean', 'description': 'If this is set to True, DNS integrity check is enabled for this zone.'}, 'dns_integrity_frequency': {'type': 'integer', 'example': 'integer', 'description': 'The frequency, in seconds, of DNS integrity checks for this zone.'}, 'dns_integrity_member': {'type': 'string', 'description': 'The Grid member that performs DNS integrity checks for this zone.'}, 'dns_integrity_verbose_logging': {'type': 'boolean', 'example': 'boolean', 'description': 'If this is set to True, more information is logged for DNS integrity checks for this zone.'}, 'dns_soa_email': {'type': 'string', 'description': 'The SOA email for the zone in punycode format.'}, 'dnssec_key_params': {'type': 'string', 'enum': ['dnsseckeyparams'], 'description': 'This structure contains the DNSSEC key parameters for this zone.'}, 'dnssec_keys': {'type': 'string', 'enum': ['dnsseckey'], 'description': 'A list of DNSSEC keys for the zone.'}, 'dnssec_ksk_rollover_date': {'type': 'string', 'enum': ['timestamp'], 'description': 'The rollover date for the Key Signing Key.'}, 'dnssec_zsk_rollover_date': {'type': 'string', 'enum': ['timestamp'], 'description': 'The rollover date for the Zone Signing Key.'}, 'do_host_abstraction': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if hosts and bulk hosts are automatically created when the zone data is imported. This field is meaningful only when import_from is set.'}, 'effective_check_names_policy': {'type': 'string', 'enum': ['FAIL', 'WARN'], 'description': 'The value of the check names policy, which indicates the action the appliance takes when it encounters host names that do not comply with the Strict Hostname Checking policy. This value applies only if the host name restriction policy is set to Strict Hostname Checking.'}, 'effective_record_name_policy': {'type': 'string', 'description': 'The selected hostname policy for records under this zone.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'external_primaries': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of external primary servers.'}, 'external_secondaries': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of external secondary servers.'}, 'fqdn': {'type': 'string', 'description': 'The name of this DNS zone. For a reverse zone, this is in address/cidr format. For other zones, this is in FQDN format. This value can be in unicode format. Note that for a reverse zone, the corresponding zone_format value should be set.'}, 'grid_primary': {'type': 'string', 'enum': ['memberserver'], 'description': 'The grid primary servers for this zone.'}, 'grid_primary_shared_with_ms_parent_delegation': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the server is duplicated with parent delegation.'}, 'grid_secondaries': {'type': 'string', 'enum': ['memberserver'], 'description': 'The list with Grid members that are secondary servers for this zone.'}, 'import_from': {'type': 'string', 'description': "The IP address of the Infoblox appliance from which zone data is imported. Setting this address to '255.255.255.255' and do_host_abstraction to 'true' will create Host records from A records in this zone without importing zone data."}, 'is_dnssec_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'This flag is set to True if DNSSEC is enabled for the zone.'}, 'is_dnssec_signed': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the zone is DNSSEC signed.'}, 'is_multimaster': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if multi-master DNS is enabled for the zone.'}, 'last_queried': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time the zone was last queried on.'}, 'locked': {'type': 'boolean', 'example': 'boolean', 'description': 'If you enable this flag, other administrators cannot make conflicting changes. This is for administration purposes only. The zone will continue to serve DNS data even when it is locked.'}, 'locked_by': {'type': 'string', 'description': 'The name of a superuser or the administrator who locked this zone.'}, 'mask_prefix': {'type': 'string', 'description': 'IPv4 Netmask or IPv6 prefix for this zone.'}, 'member_soa_mnames': {'type': 'string', 'enum': ['gridmember_soamname'], 'description': 'The list of per-member SOA MNAME information.'}, 'member_soa_serials': {'type': 'string', 'enum': ['gridmember_soaserial'], 'description': 'The list of per-member SOA serial information.'}, 'ms_ad_integrated': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that determines whether Active Directory is integrated or not. This field is valid only when ms_managed is STUB, AUTH_PRIMARY, or AUTH_BOTH.'}, 'ms_allow_transfer': {'type': 'string', 'enum': ['addressac'], 'description': 'The list of DNS clients that are allowed to perform zone transfers from a Microsoft DNS server. This setting applies only to zones with Microsoft DNS servers that are either primary or secondary servers. This setting does not inherit any value from the Grid or from any member that defines an allow_transfer value. This setting does not apply to any grid member. Use the allow_transfer field to control which DNS clients are allowed to perform zone transfers on Grid members.'}, 'ms_allow_transfer_mode': {'type': 'string', 'enum': ['ADDRESS_AC', 'ANY', 'ANY_NS', 'NONE'], 'description': 'Determines which DNS clients are allowed to perform zone transfers from a Microsoft DNS server. Valid values are: ADDRESS_AC, to use ms_allow_transfer field for specifying IP addresses, networks and Transaction Signature (TSIG) keys for clients that are allowed to do zone transfers. ANY, to allow any client. ANY_NS, to allow only the nameservers listed in this zone. NONE, to deny all zone transfer requests.'}, 'ms_dc_ns_record_creation': {'type': 'string', 'enum': ['msserver:dcnsrecordcreation'], 'description': 'The list of domain controllers that are allowed to create NS records for authoritative zones.'}, 'ms_ddns_mode': {'type': 'string', 'enum': ['ANY', 'NONE', 'SECURE'], 'description': 'Determines whether an Active Directory-integrated zone with a Microsoft DNS server as primary allows dynamic updates. Valid values are: SECURE if the zone allows secure updates only. NONE if the zone forbids dynamic updates. ANY if the zone accepts both secure and nonsecure updates. This field is valid only if ms_managed is either AUTH_PRIMARY or AUTH_BOTH. If the flag ms_ad_integrated is false, the value SECURE is not allowed.'}, 'ms_managed': {'type': 'string', 'enum': ['AUTH_BOTH', 'AUTH_PRIMARY', 'AUTH_SECONDARY', 'NONE', 'STUB'], 'description': 'The flag that indicates whether the zone is assigned to a Microsoft DNS server. This flag returns the authoritative name server type of the Microsoft DNS server. Valid values are: NONE if the zone is not assigned to any Microsoft DNS server. STUB if the zone is assigned to a Microsoft DNS server as a stub zone. AUTH_PRIMARY if only the primary server of the zone is a Microsoft DNS server. AUTH_SECONDARY if only the secondary server of the zone is a Microsoft DNS server. AUTH_BOTH if both the primary and secondary servers of the zone are Microsoft DNS servers.'}, 'ms_primaries': {'type': 'string', 'enum': ['msdnsserver'], 'description': 'The list with the Microsoft DNS servers that are primary servers for the zone. Although a zone typically has just one primary name server, you can specify up to ten independent servers for a single zone.'}, 'ms_read_only': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if a Grid member manages the zone served by a Microsoft DNS server in read-only mode. This flag is true when a Grid member manages the zone in read-only mode, false otherwise. When the zone has the ms_read_only flag set to True, no changes can be made to this zone.'}, 'ms_secondaries': {'type': 'string', 'enum': ['msdnsserver'], 'description': 'The list with the Microsoft DNS servers that are secondary servers for the zone.'}, 'ms_sync_disabled': {'type': 'boolean', 'example': 'boolean', 'description': 'This flag controls whether this zone is synchronized with Microsoft DNS servers.'}, 'ms_sync_master_name': {'type': 'string', 'description': 'The name of MS synchronization master for this zone.'}, 'network_associations': {'type': 'string', 'enum': ['network'], 'description': 'The list with the associated network/network container information.'}, 'network_view': {'type': 'string', 'description': 'The name of the network view in which this zone resides.'}, 'notify_delay': {'type': 'integer', 'example': 'integer', 'description': 'The number of seconds in delay with which notify messages are sent to secondaries.'}, 'ns_group': {'type': 'string', 'description': 'The name server group that serves DNS for this zone.'}, 'parent': {'type': 'string', 'description': 'The parent zone of this zone. Note that when searching for reverse zones, the in-addr.arpa notation should be used.'}, 'prefix': {'type': 'string', 'description': 'The RFC2317 prefix value of this DNS zone. Use this field only when the netmask is greater than 24 bits; that is, for a mask between 25 and 31 bits. Enter a prefix, such as the name of the allocated address block. The prefix can be alphanumeric characters, such as 128/26 , 128-189 , or sub-B.'}, 'primary_type': {'type': 'string', 'enum': ['External', 'Grid', 'Microsoft', 'None'], 'description': 'The type of the primary server.'}, 'record_name_policy': {'type': 'string', 'description': 'The hostname policy for records under this zone.'}, 'records_monitored': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this zone is also monitoring resource records.'}, 'restart_if_needed': {'type': 'boolean', 'example': 'boolean', 'description': 'Restarts the member service.'}, 'rr_not_queried_enabled_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time data collection for Not Queried Resource Record was enabled for this zone.'}, 'scavenging_settings': {'type': 'string', 'enum': ['setting:scavenging'], 'description': 'The scavenging settings.'}, 'set_soa_serial_number': {'type': 'boolean', 'example': 'boolean', 'description': 'The serial number in the SOA record incrementally changes every time the record is modified. The Infoblox appliance allows you to change the serial number (in the SOA record) for the primary server so it is higher than the secondary server, thereby ensuring zone transfers come from the primary server (as they should). To change the serial number you need to set a new value at soa_serial_number and pass set_soa_serial_number as True.'}, 'soa_default_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time to Live (TTL) value of the SOA record of this zone. This value is the number of seconds that data is cached.'}, 'soa_email': {'type': 'string', 'description': 'The SOA email value for this zone. This value can be in unicode format.'}, 'soa_expire': {'type': 'integer', 'example': 'integer', 'description': 'This setting defines the amount of time, in seconds, after which the secondary server stops giving out answers about the zone because the zone data is too old to be useful. The default is one week.'}, 'soa_negative_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The negative Time to Live (TTL) value of the SOA of the zone indicates how long a secondary server can cache data for Does Not Respond responses.'}, 'soa_refresh': {'type': 'integer', 'example': 'integer', 'description': 'This indicates the interval at which a secondary server sends a message to the primary server for a zone to check that its data is current, and retrieve fresh data if it is not.'}, 'soa_retry': {'type': 'integer', 'example': 'integer', 'description': 'This indicates how long a secondary server must wait before attempting to recontact the primary server after a connection failure between the two servers occurs.'}, 'soa_serial_number': {'type': 'integer', 'example': 'integer', 'description': 'The serial number in the SOA record incrementally changes every time the record is modified. The Infoblox appliance allows you to change the serial number (in the SOA record) for the primary server so it is higher than the secondary server, thereby ensuring zone transfers come from the primary server (as they should). To change the serial number you need to set a new value at soa_serial_number and pass set_soa_serial_number as True.'}, 'srgs': {'type': 'string', 'description': 'The associated shared record groups of a DNS zone. If a shared record group is associated with a zone, then all shared records in a shared record group will be shared in the zone.'}, 'update_forwarding': {'type': 'string', 'enum': ['addressac'], 'description': 'Use this field to allow or deny dynamic DNS updates that are forwarded from specific IPv4/IPv6 addresses, networks, or a named ACL. You can also provide TSIG keys for clients that are allowed or denied to perform zone updates. This setting overrides the member-level setting.'}, 'use_allow_active_dir': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_active_dir'}, 'use_allow_query': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_query'}, 'use_allow_transfer': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_transfer'}, 'use_allow_update': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_update'}, 'use_allow_update_forwarding': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: allow_update_forwarding'}, 'use_check_names_policy': {'type': 'boolean', 'example': 'boolean', 'description': 'Apply policy to dynamic updates and inbound zone transfers (This value applies only if the host name restriction policy is set to Strict Hostname Checking.)'}, 'use_copy_xfer_to_notify': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: copy_xfer_to_notify'}, 'use_ddns_force_creation_timestamp_update': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_force_creation_timestamp_update'}, 'use_ddns_patterns_restriction': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_restrict_patterns_list , ddns_restrict_patterns'}, 'use_ddns_principal_security': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_restrict_secure , ddns_principal_tracking, ddns_principal_group'}, 'use_ddns_restrict_protected': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_restrict_protected'}, 'use_ddns_restrict_static': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: ddns_restrict_static'}, 'use_dnssec_key_params': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: dnssec_key_params'}, 'use_external_primary': {'type': 'boolean', 'example': 'boolean', 'description': 'This flag controls whether the zone is using an external primary.'}, 'use_grid_zone_timer': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: soa_default_ttl , soa_expire, soa_negative_ttl, soa_refresh, soa_retry'}, 'use_import_from': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: import_from'}, 'use_notify_delay': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: notify_delay'}, 'use_record_name_policy': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: record_name_policy'}, 'use_scavenging_settings': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: scavenging_settings'}, 'use_soa_email': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: soa_email'}, 'using_srg_associations': {'type': 'boolean', 'example': 'boolean', 'description': 'This is true if the zone is associated with a shared record group.'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the zone resides. Example external.'}, 'zone_format': {'type': 'string', 'enum': ['FORWARD', 'IPV4', 'IPV6'], 'description': 'Determines the format of this zone.'}, 'zone_not_queried_enabled_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time when DNS Zones Last Queried was turned on for this zone.'}}}, 'zone_auth_discrepancy': {'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Information about the discrepancy.'}, 'severity': {'type': 'string', 'enum': ['CRITICAL', 'SEVERE', 'WARNING', 'INFORMATIONAL', 'NORMAL'], 'description': 'The severity of the discrepancy reported.'}, 'timestamp': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time when the DNS integrity check was last run for this zone.'}, 'zone': {'type': 'string', 'description': 'The reference of the zone during a search. Otherwise, this is the zone object of the zone to which the discrepancy refers.'}}}, 'zone_delegated': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The IP address of the server that is serving this zone.'}, 'comment': {'type': 'string', 'description': 'Comment for the zone; maximum 256 characters.'}, 'delegate_to': {'type': 'string', 'enum': ['extserver'], 'description': 'This provides information for the remote name server that maintains data for the delegated zone. The Infoblox appliance redirects queries for data for the delegated zone to this remote name server.'}, 'delegated_ttl': {'type': 'integer', 'example': 'integer', 'description': 'You can specify the Time to Live (TTL) values of auto-generated NS and glue records for a delegated zone. This value is the number of seconds that data is cached.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a zone is disabled or not. When this is set to False, the zone is enabled.'}, 'display_domain': {'type': 'string', 'description': 'The displayed name of the DNS zone.'}, 'dns_fqdn': {'type': 'string', 'description': 'The name of this DNS zone in punycode format. For a reverse zone, this is in address/cidr format. For other zones, this is in FQDN format in punycode format.'}, 'enable_rfc2317_exclusion': {'type': 'boolean', 'example': 'boolean', 'description': 'This flag controls whether automatic generation of RFC 2317 CNAMEs for delegated reverse zones overwrite existing PTR records. The default behavior is to overwrite all the existing records in the range; this corresponds to allow_ptr_creation_in_parent set to False. However, when this flag is set to True the existing PTR records are not overwritten.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'fqdn': {'type': 'string', 'description': 'The name of this DNS zone. For a reverse zone, this is in address/cidr format. For other zones, this is in FQDN format. This value can be in unicode format. Note that for a reverse zone, the corresponding zone_format value should be set.'}, 'locked': {'type': 'boolean', 'example': 'boolean', 'description': 'If you enable this flag, other administrators cannot make conflicting changes. This is for administration purposes only. The zone will continue to serve DNS data even when it is locked.'}, 'locked_by': {'type': 'string', 'description': 'The name of a superuser or the administrator who locked this zone.'}, 'mask_prefix': {'type': 'string', 'description': 'IPv4 Netmask or IPv6 prefix for this zone.'}, 'ms_ad_integrated': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that determines whether Active Directory is integrated or not. This field is valid only when ms_managed is STUB, AUTH_PRIMARY, or AUTH_BOTH.'}, 'ms_ddns_mode': {'type': 'string', 'enum': ['ANY', 'NONE', 'SECURE'], 'description': 'Determines whether an Active Directory-integrated zone with a Microsoft DNS server as primary allows dynamic updates. Valid values are: SECURE if the zone allows secure updates only. NONE if the zone forbids dynamic updates. ANY if the zone accepts both secure and nonsecure updates. This field is valid only if ms_managed is either AUTH_PRIMARY or AUTH_BOTH. If the flag ms_ad_integrated is false, the value SECURE is not allowed.'}, 'ms_managed': {'type': 'string', 'enum': ['AUTH_BOTH', 'AUTH_PRIMARY', 'AUTH_SECONDARY', 'NONE', 'STUB'], 'description': 'The flag that indicates whether the zone is assigned to a Microsoft DNS server. This flag returns the authoritative name server type of the Microsoft DNS server. Valid values are: NONE if the zone is not assigned to any Microsoft DNS server. STUB if the zone is assigned to a Microsoft DNS server as a stub zone. AUTH_PRIMARY if only the primary server of the zone is a Microsoft DNS server. AUTH_SECONDARY if only the secondary server of the zone is a Microsoft DNS server. AUTH_BOTH if both the primary and secondary servers of the zone are Microsoft DNS servers.'}, 'ms_read_only': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if a Grid member manages the zone served by a Microsoft DNS server in read-only mode. This flag is true when a Grid member manages the zone in read-only mode, false otherwise. When the zone has the ms_read_only flag set to True, no changes can be made to this zone.'}, 'ms_sync_master_name': {'type': 'string', 'description': 'The name of MS synchronization master for this zone.'}, 'ns_group': {'type': 'string', 'description': 'The delegation NS group bound with delegated zone.'}, 'parent': {'type': 'string', 'description': 'The parent zone of this zone. Note that when searching for reverse zones, the in-addr.arpa notation should be used.'}, 'prefix': {'type': 'string', 'description': 'The RFC2317 prefix value of this DNS zone. Use this field only when the netmask is greater than 24 bits; that is, for a mask between 25 and 31 bits. Enter a prefix, such as the name of the allocated address block. The prefix can be alphanumeric characters, such as 128/26 , 128-189 , or sub-B.'}, 'use_delegated_ttl': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: delegated_ttl'}, 'using_srg_associations': {'type': 'boolean', 'example': 'boolean', 'description': 'This is true if the zone is associated with a shared record group.'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the zone resides. Example external.'}, 'zone_format': {'type': 'string', 'enum': ['FORWARD', 'IPV4', 'IPV6'], 'description': 'Determines the format of this zone.'}}}, 'zone_forward': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The IP address of the server that is serving this zone.'}, 'comment': {'type': 'string', 'description': 'Comment for the zone; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a zone is disabled or not. When this is set to False, the zone is enabled.'}, 'display_domain': {'type': 'string', 'description': 'The displayed name of the DNS zone.'}, 'dns_fqdn': {'type': 'string', 'description': 'The name of this DNS zone in punycode format. For a reverse zone, this is in address/cidr format. For other zones, this is in FQDN format in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'external_ns_group': {'type': 'string', 'description': 'A forward stub server name server group.'}, 'forward_to': {'type': 'string', 'enum': ['extserver'], 'description': 'The information for the remote name servers to which you want the Infoblox appliance to forward queries for a specified domain name.'}, 'forwarders_only': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the appliance sends queries to forwarders only, and not to other internal or Internet root servers.'}, 'forwarding_servers': {'type': 'string', 'enum': ['forwardingmemberserver'], 'description': 'The information for the Grid members to which you want the Infoblox appliance to forward queries for a specified domain name.'}, 'fqdn': {'type': 'string', 'description': 'The name of this DNS zone. For a reverse zone, this is in address/cidr format. For other zones, this is in FQDN format. This value can be in unicode format. Note that for a reverse zone, the corresponding zone_format value should be set.'}, 'locked': {'type': 'boolean', 'example': 'boolean', 'description': 'If you enable this flag, other administrators cannot make conflicting changes. This is for administration purposes only. The zone will continue to serve DNS data even when it is locked.'}, 'locked_by': {'type': 'string', 'description': 'The name of a superuser or the administrator who locked this zone.'}, 'mask_prefix': {'type': 'string', 'description': 'IPv4 Netmask or IPv6 prefix for this zone.'}, 'ms_ad_integrated': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that determines whether Active Directory is integrated or not. This field is valid only when ms_managed is STUB, AUTH_PRIMARY, or AUTH_BOTH.'}, 'ms_ddns_mode': {'type': 'string', 'enum': ['ANY', 'NONE', 'SECURE'], 'description': 'Determines whether an Active Directory-integrated zone with a Microsoft DNS server as primary allows dynamic updates. Valid values are: SECURE if the zone allows secure updates only. NONE if the zone forbids dynamic updates. ANY if the zone accepts both secure and nonsecure updates. This field is valid only if ms_managed is either AUTH_PRIMARY or AUTH_BOTH. If the flag ms_ad_integrated is false, the value SECURE is not allowed.'}, 'ms_managed': {'type': 'string', 'enum': ['AUTH_BOTH', 'AUTH_PRIMARY', 'AUTH_SECONDARY', 'NONE', 'STUB'], 'description': 'The flag that indicates whether the zone is assigned to a Microsoft DNS server. This flag returns the authoritative name server type of the Microsoft DNS server. Valid values are: NONE if the zone is not assigned to any Microsoft DNS server. STUB if the zone is assigned to a Microsoft DNS server as a stub zone. AUTH_PRIMARY if only the primary server of the zone is a Microsoft DNS server. AUTH_SECONDARY if only the secondary server of the zone is a Microsoft DNS server. AUTH_BOTH if both the primary and secondary servers of the zone are Microsoft DNS servers.'}, 'ms_read_only': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if a Grid member manages the zone served by a Microsoft DNS server in read-only mode. This flag is true when a Grid member manages the zone in read-only mode, false otherwise. When the zone has the ms_read_only flag set to True, no changes can be made to this zone.'}, 'ms_sync_master_name': {'type': 'string', 'description': 'The name of MS synchronization master for this zone.'}, 'ns_group': {'type': 'string', 'description': 'A forwarding member name server group.'}, 'parent': {'type': 'string', 'description': 'The parent zone of this zone. Note that when searching for reverse zones, the in-addr.arpa notation should be used.'}, 'prefix': {'type': 'string', 'description': 'The RFC2317 prefix value of this DNS zone. Use this field only when the netmask is greater than 24 bits; that is, for a mask between 25 and 31 bits. Enter a prefix, such as the name of the allocated address block. The prefix can be alphanumeric characters, such as 128/26 , 128-189 , or sub-B.'}, 'using_srg_associations': {'type': 'boolean', 'example': 'boolean', 'description': 'This is true if the zone is associated with a shared record group.'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the zone resides. Example external.'}, 'zone_format': {'type': 'string', 'enum': ['FORWARD', 'IPV4', 'IPV6'], 'description': 'Determines the format of this zone.'}}}, 'zone_rp': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The IP address of the server that is serving this zone.'}, 'comment': {'type': 'string', 'description': 'Comment for the zone; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a zone is disabled or not. When this is set to False, the zone is enabled.'}, 'display_domain': {'type': 'string', 'description': 'The displayed name of the DNS zone.'}, 'dns_soa_email': {'type': 'string', 'description': 'The SOA email for the zone in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'external_primaries': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of external primary servers.'}, 'external_secondaries': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of external secondary servers.'}, 'fireeye_rule_mapping': {'type': 'string', 'enum': ['fireeye:rulemapping'], 'description': 'Rules to map fireeye alerts.'}, 'fqdn': {'type': 'string', 'description': 'The name of this DNS zone in FQDN format.'}, 'grid_primary': {'type': 'string', 'enum': ['memberserver'], 'description': 'The grid primary servers for this zone.'}, 'grid_secondaries': {'type': 'string', 'enum': ['memberserver'], 'description': 'The list with Grid members that are secondary servers for this zone.'}, 'locked': {'type': 'boolean', 'example': 'boolean', 'description': 'If you enable this flag, other administrators cannot make conflicting changes. This is for administration purposes only. The zone will continue to serve DNS data even when it is locked.'}, 'locked_by': {'type': 'string', 'description': 'The name of a superuser or the administrator who locked this zone.'}, 'mask_prefix': {'type': 'string', 'description': 'IPv4 Netmask or IPv6 prefix for this zone.'}, 'member_soa_mnames': {'type': 'string', 'enum': ['gridmember_soamname'], 'description': 'The list of per-member SOA MNAME information.'}, 'member_soa_serials': {'type': 'string', 'enum': ['gridmember_soaserial'], 'description': 'The list of per-member SOA serial information.'}, 'network_view': {'type': 'string', 'description': 'The name of the network view in which this zone resides.'}, 'ns_group': {'type': 'string', 'description': 'The name server group that serves DNS for this zone.'}, 'parent': {'type': 'string', 'description': 'The parent zone of this zone. Note that when searching for reverse zones, the in-addr.arpa notation should be used.'}, 'prefix': {'type': 'string', 'description': 'The RFC2317 prefix value of this DNS zone. Use this field only when the netmask is greater than 24 bits; that is, for a mask between 25 and 31 bits. Enter a prefix, such as the name of the allocated address block. The prefix can be alphanumeric characters, such as 128/26 , 128-189 , or sub-B.'}, 'primary_type': {'type': 'string', 'enum': ['External', 'Grid', 'None'], 'description': 'The type of the primary server.'}, 'record_name_policy': {'type': 'string', 'description': 'The hostname policy for records under this zone.'}, 'rpz_drop_ip_rule_enabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Enables the appliance to ignore RPZ-IP triggers with prefix lengths less than the specified minimum prefix length.'}, 'rpz_drop_ip_rule_min_prefix_length_ipv4': {'type': 'integer', 'example': 'integer', 'description': 'The minimum prefix length for IPv4 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv4 prefix length.'}, 'rpz_drop_ip_rule_min_prefix_length_ipv6': {'type': 'integer', 'example': 'integer', 'description': 'The minimum prefix length for IPv6 RPZ-IP triggers. The appliance ignores RPZ-IP triggers with prefix lengths less than the specified minimum IPv6 prefix length.'}, 'rpz_last_updated_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The timestamp of the last update for zone data.'}, 'rpz_policy': {'type': 'string', 'enum': ['DISABLED', 'GIVEN', 'NODATA', 'NXDOMAIN', 'PASSTHRU', 'SUBSTITUTE'], 'description': 'The response policy zone override policy.'}, 'rpz_priority': {'type': 'integer', 'example': 'integer', 'description': 'The priority of this response policy zone.'}, 'rpz_priority_end': {'type': 'integer', 'example': 'integer', 'description': 'This number is for UI to identify the end of qualified zone list.'}, 'rpz_severity': {'type': 'string', 'enum': ['CRITICAL', 'MAJOR', 'WARNING', 'INFORMATIONAL'], 'description': 'The severity of this response policy zone.'}, 'rpz_type': {'type': 'string', 'enum': ['LOCAL', 'FIREEYE', 'FEED'], 'description': 'The type of rpz zone.'}, 'set_soa_serial_number': {'type': 'boolean', 'example': 'boolean', 'description': 'The serial number in the SOA record incrementally changes every time the record is modified. The Infoblox appliance allows you to change the serial number (in the SOA record) for the primary server so it is higher than the secondary server, thereby ensuring zone transfers come from the primary server (as they should). To change the serial number you need to set a new value at soa_serial_number and pass set_soa_serial_number as True.'}, 'soa_default_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The Time to Live (TTL) value of the SOA record of this zone. This value is the number of seconds that data is cached.'}, 'soa_email': {'type': 'string', 'description': 'The SOA email value for this zone. This value can be in unicode format.'}, 'soa_expire': {'type': 'integer', 'example': 'integer', 'description': 'This setting defines the amount of time, in seconds, after which the secondary server stops giving out answers about the zone because the zone data is too old to be useful. The default is one week.'}, 'soa_negative_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The negative Time to Live (TTL) value of the SOA of the zone indicates how long a secondary server can cache data for Does Not Respond responses.'}, 'soa_refresh': {'type': 'integer', 'example': 'integer', 'description': 'This indicates the interval at which a secondary server sends a message to the primary server for a zone to check that its data is current, and retrieve fresh data if it is not.'}, 'soa_retry': {'type': 'integer', 'example': 'integer', 'description': 'This indicates how long a secondary server must wait before attempting to recontact the primary server after a connection failure between the two servers occurs.'}, 'soa_serial_number': {'type': 'integer', 'example': 'integer', 'description': 'The serial number in the SOA record incrementally changes every time the record is modified. The Infoblox appliance allows you to change the serial number (in the SOA record) for the primary server so it is higher than the secondary server, thereby ensuring zone transfers come from the primary server (as they should). To change the serial number you need to set a new value at soa_serial_number and pass set_soa_serial_number as True.'}, 'substitute_name': {'type': 'string', 'description': 'The canonical name of redirect target in substitute policy of response policy zone.'}, 'use_external_primary': {'type': 'boolean', 'example': 'boolean', 'description': 'This flag controls whether the zone is using an external primary.'}, 'use_grid_zone_timer': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: soa_default_ttl , soa_expire, soa_negative_ttl, soa_refresh, soa_retry'}, 'use_record_name_policy': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: record_name_policy'}, 'use_rpz_drop_ip_rule': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: rpz_drop_ip_rule_enabled , rpz_drop_ip_rule_min_prefix_length_ipv4, rpz_drop_ip_rule_min_prefix_length_ipv6'}, 'use_soa_email': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: soa_email'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the zone resides. Example external.'}}}, 'zone_stub': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The IP address of the server that is serving this zone.'}, 'comment': {'type': 'string', 'description': 'Comment for the zone; maximum 256 characters.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a zone is disabled or not. When this is set to False, the zone is enabled.'}, 'disable_forwarding': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the name servers that host the zone should not forward queries that end with the domain name of the zone to any configured forwarders.'}, 'display_domain': {'type': 'string', 'description': 'The displayed name of the DNS zone.'}, 'dns_fqdn': {'type': 'string', 'description': 'The name of this DNS zone in punycode format. For a reverse zone, this is in address/cidr format. For other zones, this is in FQDN format in punycode format.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'external_ns_group': {'type': 'string', 'description': 'A forward stub server name server group.'}, 'fqdn': {'type': 'string', 'description': 'The name of this DNS zone. For a reverse zone, this is in address/cidr format. For other zones, this is in FQDN format. This value can be in unicode format. Note that for a reverse zone, the corresponding zone_format value should be set.'}, 'locked': {'type': 'boolean', 'example': 'boolean', 'description': 'If you enable this flag, other administrators cannot make conflicting changes. This is for administration purposes only. The zone will continue to serve DNS data even when it is locked.'}, 'locked_by': {'type': 'string', 'description': 'The name of a superuser or the administrator who locked this zone.'}, 'mask_prefix': {'type': 'string', 'description': 'IPv4 Netmask or IPv6 prefix for this zone.'}, 'ms_ad_integrated': {'type': 'boolean', 'example': 'boolean', 'description': 'The flag that determines whether Active Directory is integrated or not. This field is valid only when ms_managed is STUB, AUTH_PRIMARY, or AUTH_BOTH.'}, 'ms_ddns_mode': {'type': 'string', 'enum': ['ANY', 'NONE', 'SECURE'], 'description': 'Determines whether an Active Directory-integrated zone with a Microsoft DNS server as primary allows dynamic updates. Valid values are: SECURE if the zone allows secure updates only. NONE if the zone forbids dynamic updates. ANY if the zone accepts both secure and nonsecure updates. This field is valid only if ms_managed is either AUTH_PRIMARY or AUTH_BOTH. If the flag ms_ad_integrated is false, the value SECURE is not allowed.'}, 'ms_managed': {'type': 'string', 'enum': ['AUTH_BOTH', 'AUTH_PRIMARY', 'AUTH_SECONDARY', 'NONE', 'STUB'], 'description': 'The flag that indicates whether the zone is assigned to a Microsoft DNS server. This flag returns the authoritative name server type of the Microsoft DNS server. Valid values are: NONE if the zone is not assigned to any Microsoft DNS server. STUB if the zone is assigned to a Microsoft DNS server as a stub zone. AUTH_PRIMARY if only the primary server of the zone is a Microsoft DNS server. AUTH_SECONDARY if only the secondary server of the zone is a Microsoft DNS server. AUTH_BOTH if both the primary and secondary servers of the zone are Microsoft DNS servers.'}, 'ms_read_only': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if a Grid member manages the zone served by a Microsoft DNS server in read-only mode. This flag is true when a Grid member manages the zone in read-only mode, false otherwise. When the zone has the ms_read_only flag set to True, no changes can be made to this zone.'}, 'ms_sync_master_name': {'type': 'string', 'description': 'The name of MS synchronization master for this zone.'}, 'ns_group': {'type': 'string', 'description': 'A stub member name server group.'}, 'parent': {'type': 'string', 'description': 'The parent zone of this zone. Note that when searching for reverse zones, the in-addr.arpa notation should be used.'}, 'prefix': {'type': 'string', 'description': 'The RFC2317 prefix value of this DNS zone. Use this field only when the netmask is greater than 24 bits; that is, for a mask between 25 and 31 bits. Enter a prefix, such as the name of the allocated address block. The prefix can be alphanumeric characters, such as 128/26 , 128-189 , or sub-B.'}, 'soa_email': {'type': 'string', 'description': 'The SOA email for the zone. This value can be in unicode format.'}, 'soa_expire': {'type': 'integer', 'example': 'integer', 'description': 'This setting defines the amount of time, in seconds, after which the secondary server stops giving out answers about the zone because the zone data is too old to be useful.'}, 'soa_mname': {'type': 'string', 'description': 'The SOA mname value for this zone. The Infoblox appliance allows you to change the name of the primary server on the SOA record that is automatically created when you initially configure a zone. Use this method to change the name of the primary server on the SOA record. For example, you may want to hide the primary server for a zone. If your device is named dns1.zone.tld, and for security reasons, you want to show a secondary server called dns2.zone.tld as the primary server. To do so, you would go to dns1.zone.tld zone (being the true primary) and change the primary server on the SOA to dns2.zone.tld to hide the true identity of the real primary server. This value can be in unicode format.'}, 'soa_negative_ttl': {'type': 'integer', 'example': 'integer', 'description': 'The negative Time to Live (TTL) value of the SOA of the zone indicates how long a secondary server can cache data for Does Not Respond responses.'}, 'soa_refresh': {'type': 'integer', 'example': 'integer', 'description': 'This indicates the interval at which a secondary server sends a message to the primary server for a zone to check that its data is current, and retrieve fresh data if it is not.'}, 'soa_retry': {'type': 'integer', 'example': 'integer', 'description': 'This indicates how long a secondary server must wait before attempting to recontact the primary server after a connection failure between the two servers occurs.'}, 'soa_serial_number': {'type': 'integer', 'example': 'integer', 'description': 'The serial number in the SOA record incrementally changes every time the record is modified. The Infoblox appliance allows you to change the serial number (in the SOA record) for the primary server so it is higher than the secondary server, thereby ensuring zone transfers come from the primary server.'}, 'stub_from': {'type': 'string', 'enum': ['extserver'], 'description': 'The primary servers (masters) of this stub zone.'}, 'stub_members': {'type': 'string', 'enum': ['memberserver'], 'description': 'The Grid member servers of this stub zone. Note that the lead/stealth/grid_replicate/ preferred_primaries/override_preferred_primaries fields of the struct will be ignored when set in this field.'}, 'stub_msservers': {'type': 'string', 'enum': ['msdnsserver'], 'description': 'The Microsoft DNS servers of this stub zone. Note that the stealth field of the struct will be ignored when set in this field.'}, 'using_srg_associations': {'type': 'boolean', 'example': 'boolean', 'description': 'This is true if the zone is associated with a shared record group.'}, 'view': {'type': 'string', 'description': 'The name of the DNS view in which the zone resides. Example external.'}, 'zone_format': {'type': 'string', 'enum': ['FORWARD', 'IPV4', 'IPV6'], 'description': 'Determines the format of this zone.'}}}, 'nsgroup': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for the name server group; maximum 256 characters.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'external_primaries': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of external primary servers.'}, 'external_secondaries': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of external secondary servers.'}, 'grid_primary': {'type': 'string', 'enum': ['memberserver'], 'description': 'The grid primary servers for this group.'}, 'grid_secondaries': {'type': 'string', 'enum': ['memberserver'], 'description': 'The list with Grid members that are secondary servers for this group.'}, 'is_grid_default': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if this name server group is the Grid default.'}, 'is_multimaster': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the multiple DNS primaries feature is enabled for the group.'}, 'name': {'type': 'string', 'description': 'The name of this name server group.'}, 'use_external_primary': {'type': 'boolean', 'example': 'boolean', 'description': 'This flag controls whether the group is using an external primary. Note that modification of this field requires passing values for grid_secondaries and external_primaries.'}}}, 'nsgroup_delegation': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'The comment for the delegated NS group.'}, 'delegate_to': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of delegated servers for the delegated NS group.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'name': {'type': 'string', 'description': 'The name of the delegated NS group.'}}}, 'nsgroup_forwardingmember': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for the Forwarding Member Name Server Group; maximum 256 characters.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'forwarding_servers': {'type': 'string', 'enum': ['forwardingmemberserver'], 'description': 'The list of forwarding member servers.'}, 'name': {'type': 'string', 'description': 'The name of the Forwarding Member Name Server Group.'}}}, 'nsgroup_stubmember': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for the Stub Member Name Server Group; maximum 256 characters.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'name': {'type': 'string', 'description': 'The name of the Stub Member Name Server Group.'}, 'stub_members': {'type': 'string', 'enum': ['memberserver'], 'description': 'The Grid member servers of this stub zone. Note that the lead/stealth/grid_replicate/ preferred_primaries/override_preferred_primaries fields of the struct will be ignored when set in this field.'}}}, 'nsgroup_forwardstubserver': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for the Forward Stub Server Name Server Group; maximum 256 characters.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'external_servers': {'type': 'string', 'enum': ['extserver'], 'description': 'The list of external servers.'}, 'name': {'type': 'string', 'description': 'The name of this Forward Stub Server Name Server Group.'}}}, 'ddns_principalcluster': {'type': 'object', 'properties': {'comment': {'type': 'string', 'description': 'Comment for the DDNS Principal Cluster.'}, 'group': {'type': 'string', 'description': 'The DDNS Principal cluster group name.'}, 'name': {'type': 'string', 'description': 'The name of this DDNS Principal Cluster.'}, 'principals': {'type': 'string', 'description': 'The list of equivalent principals.'}}}, 'ddns_principalcluster_group': {'type': 'object', 'properties': {'clusters': {'type': 'string', 'enum': ['ddns:principalcluster'], 'description': 'The list of equivalent DDNS principal clusters.'}, 'comment': {'type': 'string', 'description': 'Comment for the DDNS Principal Cluster Group.'}, 'name': {'type': 'string', 'description': 'The name of this DDNS Principal Cluster Group.'}}}, 'dns64group': {'type': 'object', 'properties': {'clients': {'type': 'string', 'enum': ['addressac'], 'description': 'Access Control settings that contain IPv4 and IPv6 DNS clients and networks to which the DNS server is allowed to send synthesized AAAA records with the specified IPv6 prefix.'}, 'comment': {'type': 'string', 'description': 'The descriptive comment for the DNS64 synthesis group object.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the DNS64 synthesis group is disabled.'}, 'enable_dnssec_dns64': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the DNS64 synthesis of AAAA records is enabled for DNS64 synthesis groups that request DNSSEC data.'}, 'exclude': {'type': 'string', 'enum': ['addressac'], 'description': 'Access Control settings that contain IPv6 addresses or prefix ranges that cannot be used by IPv6-only hosts, such as IP addresses in the ::ffff:0:0/96 network. When DNS server retrieves an AAAA record that contains an IPv6 address that matches an excluded address, it does not return the AAAA record. Instead it synthesizes an AAAA record from the A record.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'mapped': {'type': 'string', 'enum': ['addressac'], 'description': 'Access Control settings that contain IPv4 addresses and networks for which the DNS server can synthesize AAAA records with the specified prefix.'}, 'name': {'type': 'string', 'description': 'The name of the DNS64 synthesis group object.'}, 'prefix': {'type': 'string', 'description': 'The IPv6 prefix used for the synthesized AAAA records. The prefix length must be /32, /40, /48, /56, /64 or /96, and all bits beyond the specified length must be zero.'}}}, 'hostnamerewritepolicy': {'type': 'object', 'properties': {'is_default': {'type': 'boolean', 'example': 'boolean', 'description': 'True if the policy is the Grid default.'}, 'name': {'type': 'string', 'description': 'The name of a hostname rewrite policy object.'}, 'pre_defined': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the policy is a predefined one.'}, 'replacement_character': {'type': 'string', 'description': 'The replacement character for symbols in hostnames that do not conform to the hostname policy.'}, 'valid_characters': {'type': 'string', 'description': 'The set of valid characters represented in string format.'}}}, 'bulkhostnametemplate': {'type': 'object', 'properties': {'is_grid_default': {'type': 'boolean', 'example': 'boolean', 'description': 'True if this template is Grid default.'}, 'pre_defined': {'type': 'boolean', 'example': 'boolean', 'description': 'True if this is a pre-defined template, False otherwise.'}, 'template_format': {'type': 'string', 'description': 'The format of bulk host name template. It should follow certain rules (please use Administration Guide as reference).'}, 'template_name': {'type': 'string', 'description': 'The name of bulk host name template.'}}}, 'scavengingtask': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['ANALYZE', 'RECLAIM', 'ANALYZE_RECLAIM', 'RESET'], 'description': 'The scavenging action.'}, 'associated_object': {'type': 'string', 'description': 'The reference to the object associated with the scavenging task.'}, 'end_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The scavenging process end time.'}, 'processed_records': {'type': 'integer', 'example': 'integer', 'description': 'The number of processed during scavenging resource records.'}, 'reclaimable_records': {'type': 'integer', 'example': 'integer', 'description': 'The number of resource records that are allowed to be reclaimed during the scavenging process.'}, 'reclaimed_records': {'type': 'integer', 'example': 'integer', 'description': 'The number of reclaimed during the scavenging process resource records.'}, 'start_time': {'type': 'string', 'enum': ['timestamp'], 'description': 'The scavenging process start time.'}, 'status': {'type': 'string', 'enum': ['CREATED', 'RUNNING', 'COMPLETED', 'ERROR'], 'description': 'The scavenging process status. This is a read-only attribute.'}}}}}}