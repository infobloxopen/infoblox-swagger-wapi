{
  "openapi": "3.0.0",
  "info": {
    "description": "Sample WAPI Documentation",
    "version": "v2.7",
    "title": "Infoblox WAPI",
    "license": {
      "name": "Infoblox License",
      "url": "https://www.infoblox.com/"
    },
    "contact": {
      "name": "Krishna",
      "email": "kvasudevan@infoblox.com"
    }
  },
  "paths": {
    "/wapi/v2.7/awsrte53taskgroup": {
      "get": {
        "tags": [
          "awsrte53taskgroup"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consolidate_zones",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consolidated_view",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "grid_member",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_view",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_view_mapping_policy",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sync_status",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsrte53taskgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "awsrte53taskgroup"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "consolidate_zones": {
                    "type": "string",
                    "example": "bool"
                  },
                  "consolidated_view": {
                    "type": "string",
                    "example": "string"
                  },
                  "disabled": {
                    "type": "string",
                    "example": "bool"
                  },
                  "grid_member": {
                    "type": "string",
                    "example": "string"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "network_view": {
                    "type": "string",
                    "example": "string"
                  },
                  "network_view_mapping_policy": {
                    "type": "string",
                    "example": "['AUTO_CREATE', 'DIRECT']"
                  },
                  "task_list": {
                    "type": "string",
                    "example": "[{'name': 'string', 'disabled': 'bool', 'state': 'enum', 'state_msg': 'string', 'filter': 'string', 'schedule_interval': 'uint', 'schedule_units': 'enum', 'aws_user': 'string', 'status_timestamp': 'timestamp', 'last_run': 'timestamp', 'sync_public_zones': 'bool', 'sync_private_zones': 'bool', 'zone_count': 'uint', 'credentials_type': 'enum'}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsrte53taskgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/awsrte53taskgroup/{awsrte53taskgroup_reference}": {
      "get": {
        "tags": [
          "awsrte53taskgroup"
        ],
        "parameters": [
          {
            "name": "awsrte53taskgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for awsrte53taskgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsrte53taskgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "description": "Function calls",
        "tags": [
          "awsrte53taskgroup"
        ],
        "parameters": [
          {
            "name": "awsrte53taskgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for awsrte53taskgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_function",
            "in": "query",
            "required": true,
            "description": "Select the function",
            "schema": {
              "type": "string",
              "enum": [
                "task_control"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_control": {
                      "type": "string",
                      "example": {
                        "action": [
                          "RUN"
                        ],
                        "task_name": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the awsrte53taskgroup resource",
        "tags": [
          "awsrte53taskgroup"
        ],
        "parameters": [
          {
            "name": "awsrte53taskgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for awsrte53taskgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "disabled": {
                    "type": "string",
                    "example": "bool"
                  },
                  "grid_member": {
                    "type": "string",
                    "example": "string"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "task_list": {
                    "type": "string",
                    "example": "[{'name': 'string', 'disabled': 'bool', 'state': 'enum', 'state_msg': 'string', 'filter': 'string', 'schedule_interval': 'uint', 'schedule_units': 'enum', 'aws_user': 'string', 'status_timestamp': 'timestamp', 'last_run': 'timestamp', 'sync_public_zones': 'bool', 'sync_private_zones': 'bool', 'zone_count': 'uint', 'credentials_type': 'enum'}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsrte53taskgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the awsrte53taskgroup resource",
        "tags": [
          "awsrte53taskgroup"
        ],
        "parameters": [
          {
            "name": "awsrte53taskgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for awsrte53taskgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/awsuser": {
      "get": {
        "tags": [
          "awsuser"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "access_key_id",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nios_user_name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsuser"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "awsuser"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_key_id": {
                    "type": "string",
                    "example": "string"
                  },
                  "account_id": {
                    "type": "string",
                    "example": "string"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "nios_user_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "secret_access_key": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsuser"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/awsuser/{awsuser_reference}": {
      "get": {
        "tags": [
          "awsuser"
        ],
        "parameters": [
          {
            "name": "awsuser_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for awsuser",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsuser"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the awsuser resource",
        "tags": [
          "awsuser"
        ],
        "parameters": [
          {
            "name": "awsuser_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for awsuser",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_key_id": {
                    "type": "string",
                    "example": "string"
                  },
                  "account_id": {
                    "type": "string",
                    "example": "string"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "nios_user_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "secret_access_key": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsuser"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the awsuser resource",
        "tags": [
          "awsuser"
        ],
        "parameters": [
          {
            "name": "awsuser_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for awsuser",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/captiveportal": {
      "get": {
        "tags": [
          "captiveportal"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/captiveportal"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/captiveportal/{captiveportal_reference}": {
      "get": {
        "tags": [
          "captiveportal"
        ],
        "parameters": [
          {
            "name": "captiveportal_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for captiveportal",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/captiveportal"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the captiveportal resource",
        "tags": [
          "captiveportal"
        ],
        "parameters": [
          {
            "name": "captiveportal_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for captiveportal",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authn_server_group": {
                    "type": "string",
                    "example": "string"
                  },
                  "company_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "enable_syslog_auth_failure": {
                    "type": "string",
                    "example": "bool"
                  },
                  "enable_syslog_auth_success": {
                    "type": "string",
                    "example": "bool"
                  },
                  "enable_user_type": {
                    "type": "string",
                    "example": "['AUTHENTICATED', 'BOTH', 'GUEST']"
                  },
                  "encryption": {
                    "type": "string",
                    "example": "['NONE', 'SSL']"
                  },
                  "files": {
                    "type": "string",
                    "example": "[{'name': 'string', 'type': 'enum'}]"
                  },
                  "guest_custom_field1_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "guest_custom_field1_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "guest_custom_field2_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "guest_custom_field2_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "guest_custom_field3_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "guest_custom_field3_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "guest_custom_field4_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "guest_custom_field4_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "guest_email_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "guest_first_name_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "guest_last_name_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "guest_middle_name_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "guest_phone_required": {
                    "type": "string",
                    "example": "bool"
                  },
                  "helpdesk_message": {
                    "type": "string",
                    "example": "string"
                  },
                  "listen_address_ip": {
                    "type": "string",
                    "example": "string"
                  },
                  "listen_address_type": {
                    "type": "string",
                    "example": "['VIP', 'LAN2', 'IP']"
                  },
                  "network_view": {
                    "type": "string",
                    "example": "string"
                  },
                  "port": {
                    "type": "string",
                    "example": "uint"
                  },
                  "service_enabled": {
                    "type": "string",
                    "example": "bool"
                  },
                  "syslog_auth_failure_level": {
                    "type": "string",
                    "example": "['EMERG', 'INFO', 'DEBUG', 'WARNING', 'NOTICE', 'ALERT', 'CRIT', 'ERR']"
                  },
                  "syslog_auth_success_level": {
                    "type": "string",
                    "example": "['EMERG', 'INFO', 'DEBUG', 'WARNING', 'NOTICE', 'ALERT', 'CRIT', 'ERR']"
                  },
                  "welcome_message": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/captiveportal"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/extensibleattributedef": {
      "get": {
        "tags": [
          "extensibleattributedef"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extensibleattributedef"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "extensibleattributedef"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowed_object_types": {
                    "type": "string",
                    "example": "string"
                  },
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "default_value": {
                    "type": "string",
                    "example": "string"
                  },
                  "descendants_action": {
                    "type": "string",
                    "example": "extensibleattributedef:descendants"
                  },
                  "flags": {
                    "type": "string",
                    "example": "string"
                  },
                  "list_values": {
                    "type": "string",
                    "example": "[{'value': 'string'}]"
                  },
                  "max": {
                    "type": "string",
                    "example": "uint"
                  },
                  "min": {
                    "type": "string",
                    "example": "uint"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "type": {
                    "type": "string",
                    "example": "['STRING', 'INTEGER', 'EMAIL', 'DATE', 'ENUM', 'URL']"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extensibleattributedef"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/extensibleattributedef/{extensibleattributedef_reference}": {
      "get": {
        "tags": [
          "extensibleattributedef"
        ],
        "parameters": [
          {
            "name": "extensibleattributedef_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for extensibleattributedef",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extensibleattributedef"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the extensibleattributedef resource",
        "tags": [
          "extensibleattributedef"
        ],
        "parameters": [
          {
            "name": "extensibleattributedef_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for extensibleattributedef",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowed_object_types": {
                    "type": "string",
                    "example": "string"
                  },
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "default_value": {
                    "type": "string",
                    "example": "string"
                  },
                  "descendants_action": {
                    "type": "string",
                    "example": "extensibleattributedef:descendants"
                  },
                  "flags": {
                    "type": "string",
                    "example": "string"
                  },
                  "list_values": {
                    "type": "string",
                    "example": "[{'value': 'string'}]"
                  },
                  "max": {
                    "type": "string",
                    "example": "uint"
                  },
                  "min": {
                    "type": "string",
                    "example": "uint"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "type": {
                    "type": "string",
                    "example": "['STRING', 'INTEGER', 'EMAIL', 'DATE', 'ENUM', 'URL']"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extensibleattributedef"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the extensibleattributedef resource",
        "tags": [
          "extensibleattributedef"
        ],
        "parameters": [
          {
            "name": "extensibleattributedef_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for extensibleattributedef",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/fileop": {},
    "/wapi/v2.7/fileop/{fileop_reference}": {
      "post": {
        "description": "Function calls",
        "tags": [
          "fileop"
        ],
        "parameters": [
          {
            "name": "fileop_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for fileop",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_function",
            "in": "query",
            "required": true,
            "description": "Select the function",
            "schema": {
              "type": "string",
              "enum": [
                "csv_error_log",
                "csv_export",
                "csv_import",
                "csv_snapshot_file",
                "csv_uploaded_file",
                "download_atp_rule_update",
                "download_pool_status",
                "downloadcertificate",
                "downloadcomplete",
                "generatecsr",
                "generatedxlendpointcerts",
                "generatesafenetclientcert",
                "generateselfsignedcert",
                "get_file_url",
                "get_last_uploaded_atp_ruleset",
                "get_log_files",
                "get_support_bundle",
                "getgriddata",
                "getleasehistoryfiles",
                "getmemberdata",
                "getsafenetclientcert",
                "read",
                "restapi_template_export",
                "restapi_template_export_schema",
                "restapi_template_import",
                "restoredatabase",
                "set_captive_portal_file",
                "set_dhcp_leases",
                "set_downgrade_file",
                "set_last_uploaded_atp_ruleset",
                "set_upgrade_file",
                "setdiscoverycsv",
                "setfiledest",
                "setleasehistoryfiles",
                "setmemberdata",
                "update_atp_ruleset",
                "update_licenses",
                "uploadcertificate",
                "uploadinit"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "csv_error_log": {
                      "type": "string",
                      "example": {
                        "import_id": "uint"
                      }
                    },
                    "csv_export": {
                      "type": "string",
                      "example": {
                        "_object": "string",
                        "_separator": [
                          "COMMA",
                          "SEMICOLON",
                          "SPACE",
                          "TAB"
                        ],
                        "_filename": "string",
                        "_gzipfile": "bool",
                        "_fileprefix": "string"
                      }
                    },
                    "csv_import": {
                      "type": "string",
                      "example": {
                        "token": "string",
                        "doimport": "bool",
                        "separator": [
                          "COMMA",
                          "SEMICOLON",
                          "SPACE",
                          "TAB"
                        ],
                        "update_method": [
                          "MERGE",
                          "OVERRIDE"
                        ],
                        "operation": [
                          "INSERT",
                          "UPDATE",
                          "REPLACE",
                          "DELETE",
                          "CUSTOM"
                        ],
                        "action": [
                          "START",
                          "TEST"
                        ],
                        "on_error": [
                          "CONTINUE",
                          "STOP"
                        ]
                      }
                    },
                    "csv_snapshot_file": {
                      "type": "string",
                      "example": {
                        "import_id": "uint"
                      }
                    },
                    "csv_uploaded_file": {
                      "type": "string",
                      "example": {
                        "import_id": "uint"
                      }
                    },
                    "downloadcertificate": {
                      "type": "string",
                      "example": {
                        "certificate_usage": [
                          "ADMIN",
                          "CAPTIVE_PORTAL",
                          "SFNT_CLIENT_CERT",
                          "IFMAP_DHCP",
                          "EAP_CA",
                          "TAE_CA"
                        ],
                        "member": "string"
                      }
                    },
                    "downloadcomplete": {
                      "type": "string",
                      "example": {
                        "token": "string"
                      }
                    },
                    "generatecsr": {
                      "type": "string",
                      "example": {
                        "certificate_usage": [
                          "ADMIN",
                          "CAPTIVE_PORTAL",
                          "SFNT_CLIENT_CERT",
                          "IFMAP_DHCP"
                        ],
                        "member": "string",
                        "key_size": "uint",
                        "cn": "string",
                        "algorithm": [
                          "SHA-1",
                          "SHA-256"
                        ],
                        "org": "string",
                        "org_unit": "string",
                        "locality": "string",
                        "state": "string",
                        "country": "string",
                        "email": "string",
                        "comment": "string"
                      }
                    },
                    "generatesafenetclientcert": {
                      "type": "string",
                      "example": {
                        "member": "string",
                        "algorithm": [
                          "RSASHA1",
                          "RSASHA256"
                        ]
                      }
                    },
                    "generateselfsignedcert": {
                      "type": "string",
                      "example": {
                        "days_valid": "uint",
                        "certificate_usage": [
                          "ADMIN",
                          "CAPTIVE_PORTAL",
                          "SFNT_CLIENT_CERT",
                          "IFMAP_DHCP"
                        ],
                        "member": "string",
                        "key_size": "uint",
                        "cn": "string",
                        "algorithm": [
                          "SHA-1",
                          "SHA-256"
                        ],
                        "org": "string",
                        "org_unit": "string",
                        "locality": "string",
                        "state": "string",
                        "country": "string",
                        "email": "string",
                        "comment": "string"
                      }
                    },
                    "get_file_url": {
                      "type": "string",
                      "example": {
                        "task_id": "uint"
                      }
                    },
                    "get_log_files": {
                      "type": "string",
                      "example": {
                        "member": "string",
                        "msserver": "string",
                        "node_type": [
                          "ACTIVE",
                          "BACKUP"
                        ],
                        "log_type": [
                          "SYSLOG",
                          "AUDITLOG",
                          "MSMGMTLOG",
                          "DELTALOG",
                          "OUTBOUND"
                        ],
                        "include_rotated": "bool",
                        "endpoint": "string"
                      }
                    },
                    "get_support_bundle": {
                      "type": "string",
                      "example": {
                        "member": "string",
                        "log_files": "bool",
                        "core_files": "bool",
                        "rotate_log_files": "bool",
                        "cached_zone_data": "bool",
                        "recursive_cache_file": "bool",
                        "nm_snmp_logs": "bool",
                        "remote_url": "string"
                      }
                    },
                    "getgriddata": {
                      "type": "string",
                      "example": {
                        "type": [
                          "NTP_KEY_FILE",
                          "SNMP_MIBS_FILE",
                          "BACKUP"
                        ],
                        "remote_url": "string",
                        "nios_data": "bool",
                        "discovery_data": "bool"
                      }
                    },
                    "getleasehistoryfiles": {
                      "type": "string",
                      "example": {
                        "member": "string",
                        "start_time": "timestamp",
                        "end_time": "timestamp",
                        "remote_url": "string"
                      }
                    },
                    "getmemberdata": {
                      "type": "string",
                      "example": {
                        "member": "string",
                        "type": [
                          "NTP_KEY_FILE",
                          "DNS_CFG",
                          "DHCP_CFG",
                          "DHCPV6_CFG",
                          "RADIUS_CFG",
                          "DNS_CACHE",
                          "DNS_ACCEL_CACHE",
                          "DHCP_EXPERT_MODE_CFG",
                          "TRAFFIC_CAPTURE_FILE",
                          "DNS_STATS"
                        ],
                        "remote_url": "string"
                      }
                    },
                    "getsafenetclientcert": {
                      "type": "string",
                      "example": {
                        "member": "string",
                        "algorithm": [
                          "RSASHA1",
                          "RSASHA256"
                        ]
                      }
                    },
                    "read": {
                      "type": "string",
                      "example": {
                        "_object": "string",
                        "_filename": "string",
                        "_return_fields": "string",
                        "_encoding": [
                          "JSON",
                          "XML",
                          "ROWJSON",
                          "ROWXML"
                        ],
                        "_max_results": "int",
                        "_gzipfile": "bool",
                        "_fileprefix": "string",
                        "_output_location": [
                          "FILE_DISTRIBUTION",
                          "LOCAL"
                        ]
                      }
                    },
                    "restapi_template_export": {
                      "type": "string",
                      "example": {
                        "restapi_template": "string"
                      }
                    },
                    "restapi_template_export_schema": {
                      "type": "string",
                      "example": {
                        "schema_type": [
                          "REST_ENDPOINT",
                          "REST_EVENT"
                        ],
                        "version": "string"
                      }
                    },
                    "restapi_template_import": {
                      "type": "string",
                      "example": {
                        "token": "string",
                        "overwrite": "bool"
                      }
                    },
                    "restoredatabase": {
                      "type": "string",
                      "example": {
                        "token": "string",
                        "mode": [
                          "NORMAL",
                          "FORCED",
                          "CLONE"
                        ],
                        "keep_grid_ip": "bool",
                        "nios_data": "bool",
                        "discovery_data": "bool",
                        "splunk_app_data": "bool"
                      }
                    },
                    "set_captive_portal_file": {
                      "type": "string",
                      "example": {
                        "token": "string",
                        "filename": "string",
                        "type": [
                          "IMG_LOGO",
                          "IMG_FOOTER",
                          "IMG_HEADER",
                          "AUP"
                        ],
                        "member": "string",
                        "override": "bool"
                      }
                    },
                    "set_dhcp_leases": {
                      "type": "string",
                      "example": {
                        "token": "string",
                        "lease_precedence": [
                          "KEEP_NEWEST",
                          "KEEP_PREVIOUS",
                          "REPLACE_PREVIOUS"
                        ],
                        "lease_format": [
                          "ISC_LEASE"
                        ],
                        "network_view": "string",
                        "protocol": [
                          "IPv4",
                          "IPv6"
                        ]
                      }
                    },
                    "set_downgrade_file": {
                      "type": "string",
                      "example": {
                        "token": "string"
                      }
                    },
                    "set_last_uploaded_atp_ruleset": {
                      "type": "string",
                      "example": {
                        "token": "string"
                      }
                    },
                    "set_upgrade_file": {
                      "type": "string",
                      "example": {
                        "token": "string"
                      }
                    },
                    "setdiscoverycsv": {
                      "type": "string",
                      "example": {
                        "token": "string",
                        "network_view": "string",
                        "merge_data": "bool"
                      }
                    },
                    "setfiledest": {
                      "type": "string",
                      "example": {
                        "type": [
                          "TFTP_FILE"
                        ],
                        "token": "string",
                        "dest_path": "string",
                        "extract": "bool"
                      }
                    },
                    "setleasehistoryfiles": {
                      "type": "string",
                      "example": {
                        "token": "string"
                      }
                    },
                    "setmemberdata": {
                      "type": "string",
                      "example": {
                        "token": "string",
                        "type": [
                          "DHCP_EXPERT_MODE_CFG"
                        ],
                        "member": "string"
                      }
                    },
                    "update_atp_ruleset": {
                      "type": "string",
                      "example": {
                        "token": "string"
                      }
                    },
                    "update_licenses": {
                      "type": "string",
                      "example": {
                        "token": "string"
                      }
                    },
                    "uploadcertificate": {
                      "type": "string",
                      "example": {
                        "token": "string",
                        "certificate_usage": [
                          "ADMIN",
                          "CAPTIVE_PORTAL",
                          "SFNT_CLIENT_CERT",
                          "IFMAP_DHCP",
                          "EAP_CA",
                          "TAE_CA"
                        ],
                        "member": "string"
                      }
                    },
                    "uploadinit": {
                      "type": "string",
                      "example": {
                        "filename": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/hsm:allgroups": {
      "get": {
        "tags": [
          "hsm:allgroups"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_allgroups"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/hsm:allgroups/{hsm:allgroups_reference}": {
      "get": {
        "tags": [
          "hsm:allgroups"
        ],
        "parameters": [
          {
            "name": "hsm:allgroups_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:allgroups",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_allgroups"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/hsm:safenetgroup": {
      "get": {
        "tags": [
          "hsm:safenetgroup"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_safenetgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "hsm:safenetgroup"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "hsm_safenet": {
                    "type": "string",
                    "example": "[{'name': 'string', 'partition_serial_number': 'string', 'disable': 'bool', 'partition_id': 'string', 'is_fips_compliant': 'bool', 'server_cert': 'string', 'partition_capacity': 'uint', 'status': 'enum'}]"
                  },
                  "hsm_version": {
                    "type": "string",
                    "example": "['LunaSA_4', 'LunaSA_5', 'LunaSA_6']"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "pass_phrase": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_safenetgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/hsm:safenetgroup/{hsm:safenetgroup_reference}": {
      "get": {
        "tags": [
          "hsm:safenetgroup"
        ],
        "parameters": [
          {
            "name": "hsm:safenetgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:safenetgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_safenetgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "description": "Function calls",
        "tags": [
          "hsm:safenetgroup"
        ],
        "parameters": [
          {
            "name": "hsm:safenetgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:safenetgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_function",
            "in": "query",
            "required": true,
            "description": "Select the function",
            "schema": {
              "type": "string",
              "enum": [
                "refresh_hsm",
                "test_hsm_status"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the hsm:safenetgroup resource",
        "tags": [
          "hsm:safenetgroup"
        ],
        "parameters": [
          {
            "name": "hsm:safenetgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:safenetgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "hsm_safenet": {
                    "type": "string",
                    "example": "[{'name': 'string', 'partition_serial_number': 'string', 'disable': 'bool', 'partition_id': 'string', 'is_fips_compliant': 'bool', 'server_cert': 'string', 'partition_capacity': 'uint', 'status': 'enum'}]"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "pass_phrase": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_safenetgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the hsm:safenetgroup resource",
        "tags": [
          "hsm:safenetgroup"
        ],
        "parameters": [
          {
            "name": "hsm:safenetgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:safenetgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/hsm:thalesgroup": {
      "get": {
        "tags": [
          "hsm:thalesgroup"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_thalesgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "hsm:thalesgroup"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "card_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "key_server_ip": {
                    "type": "string",
                    "example": "string"
                  },
                  "key_server_port": {
                    "type": "string",
                    "example": "uint"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "pass_phrase": {
                    "type": "string",
                    "example": "string"
                  },
                  "protection": {
                    "type": "string",
                    "example": "['MODULE', 'SOFTCARD']"
                  },
                  "thales_hsm": {
                    "type": "string",
                    "example": "[{'remote_ip': 'string', 'remote_port': 'uint', 'status': 'enum', 'remote_esn': 'string', 'keyhash': 'string', 'disable': 'bool'}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_thalesgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/hsm:thalesgroup/{hsm:thalesgroup_reference}": {
      "get": {
        "tags": [
          "hsm:thalesgroup"
        ],
        "parameters": [
          {
            "name": "hsm:thalesgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:thalesgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_thalesgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "description": "Function calls",
        "tags": [
          "hsm:thalesgroup"
        ],
        "parameters": [
          {
            "name": "hsm:thalesgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:thalesgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_function",
            "in": "query",
            "required": true,
            "description": "Select the function",
            "schema": {
              "type": "string",
              "enum": [
                "refresh_hsm",
                "test_hsm_status"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the hsm:thalesgroup resource",
        "tags": [
          "hsm:thalesgroup"
        ],
        "parameters": [
          {
            "name": "hsm:thalesgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:thalesgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "card_name": {
                    "type": "string",
                    "example": "string"
                  },
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "key_server_ip": {
                    "type": "string",
                    "example": "string"
                  },
                  "key_server_port": {
                    "type": "string",
                    "example": "uint"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "pass_phrase": {
                    "type": "string",
                    "example": "string"
                  },
                  "protection": {
                    "type": "string",
                    "example": "['MODULE', 'SOFTCARD']"
                  },
                  "thales_hsm": {
                    "type": "string",
                    "example": "[{'remote_ip': 'string', 'remote_port': 'uint', 'status': 'enum', 'remote_esn': 'string', 'keyhash': 'string', 'disable': 'bool'}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/hsm_thalesgroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the hsm:thalesgroup resource",
        "tags": [
          "hsm:thalesgroup"
        ],
        "parameters": [
          {
            "name": "hsm:thalesgroup_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for hsm:thalesgroup",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/kerberoskey": {
      "get": {
        "tags": [
          "kerberoskey"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enctype",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "in_use",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kerberoskey"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/kerberoskey/{kerberoskey_reference}": {
      "get": {
        "tags": [
          "kerberoskey"
        ],
        "parameters": [
          {
            "name": "kerberoskey_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for kerberoskey",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/kerberoskey"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the kerberoskey resource",
        "tags": [
          "kerberoskey"
        ],
        "parameters": [
          {
            "name": "kerberoskey_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for kerberoskey",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/scheduledtask": {
      "get": {
        "tags": [
          "scheduledtask"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approval_status",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "approver",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "execution_status",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "execution_time",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduled_time",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "submit_time",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "submitter",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "task_id",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/scheduledtask"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/scheduledtask/{scheduledtask_reference}": {
      "get": {
        "tags": [
          "scheduledtask"
        ],
        "parameters": [
          {
            "name": "scheduledtask_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for scheduledtask",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/scheduledtask"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the scheduledtask resource",
        "tags": [
          "scheduledtask"
        ],
        "parameters": [
          {
            "name": "scheduledtask_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for scheduledtask",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "approval_status": {
                    "type": "string",
                    "example": "['APPROVED', 'NONE', 'PENDING', 'REJECTED']"
                  },
                  "approver_comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "automatic_restart": {
                    "type": "string",
                    "example": "bool"
                  },
                  "execute_now": {
                    "type": "string",
                    "example": "bool"
                  },
                  "re_execute_task": {
                    "type": "string",
                    "example": "bool"
                  },
                  "scheduled_time": {
                    "type": "string",
                    "example": "timestamp"
                  },
                  "submitter_comment": {
                    "type": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/scheduledtask"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the scheduledtask resource",
        "tags": [
          "scheduledtask"
        ],
        "parameters": [
          {
            "name": "scheduledtask_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for scheduledtask",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/search": {
      "get": {
        "tags": [
          "search"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/search"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/search/{search_reference}": {
      "get": {
        "tags": [
          "search"
        ],
        "parameters": [
          {
            "name": "search_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for search",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/search"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/smartfolder:children": {
      "get": {
        "tags": [
          "smartfolder:children"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_children"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/smartfolder:children/{smartfolder:children_reference}": {
      "get": {
        "tags": [
          "smartfolder:children"
        ],
        "parameters": [
          {
            "name": "smartfolder:children_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:children",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_children"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/smartfolder:global": {
      "get": {
        "tags": [
          "smartfolder:global"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_global"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "smartfolder:global"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "group_bys": {
                    "type": "string",
                    "example": "[{'value': 'string', 'value_type': 'enum', 'enable_grouping': 'bool'}]"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "query_items": {
                    "type": "string",
                    "example": "[{'name': 'string', 'field_type': 'enum', 'operator': 'enum', 'op_match': 'bool', 'value_type': 'enum', 'value': 'smartfolder:queryitemvalue'}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_global"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/smartfolder:global/{smartfolder:global_reference}": {
      "get": {
        "tags": [
          "smartfolder:global"
        ],
        "parameters": [
          {
            "name": "smartfolder:global_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:global",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_global"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "description": "Function calls",
        "tags": [
          "smartfolder:global"
        ],
        "parameters": [
          {
            "name": "smartfolder:global_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:global",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_function",
            "in": "query",
            "required": true,
            "description": "Select the function",
            "schema": {
              "type": "string",
              "enum": [
                "save_as"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "save_as": {
                      "type": "string",
                      "example": {
                        "is_shortcut": "bool",
                        "name": "string",
                        "global_flag": "bool"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the smartfolder:global resource",
        "tags": [
          "smartfolder:global"
        ],
        "parameters": [
          {
            "name": "smartfolder:global_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:global",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "group_bys": {
                    "type": "string",
                    "example": "[{'value': 'string', 'value_type': 'enum', 'enable_grouping': 'bool'}]"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "query_items": {
                    "type": "string",
                    "example": "[{'name': 'string', 'field_type': 'enum', 'operator': 'enum', 'op_match': 'bool', 'value_type': 'enum', 'value': 'smartfolder:queryitemvalue'}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_global"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the smartfolder:global resource",
        "tags": [
          "smartfolder:global"
        ],
        "parameters": [
          {
            "name": "smartfolder:global_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:global",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/smartfolder:personal": {
      "get": {
        "tags": [
          "smartfolder:personal"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_max_results",
            "in": "query",
            "required": false,
            "description": "Enter the number of results to be fetched",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": "_paging",
            "in": "query",
            "required": false,
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          },
          {
            "name": " _page_id",
            "in": "query",
            "required": false,
            "description": "Enter the page ID for fetching next page",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_shortcut",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Enter the value of the field",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_personal"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "smartfolder:personal"
        ],
        "parameters": [
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "group_bys": {
                    "type": "string",
                    "example": "[{'value': 'string', 'value_type': 'enum', 'enable_grouping': 'bool'}]"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "query_items": {
                    "type": "string",
                    "example": "[{'name': 'string', 'field_type': 'enum', 'operator': 'enum', 'op_match': 'bool', 'value_type': 'enum', 'value': 'smartfolder:queryitemvalue'}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_personal"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/wapi/v2.7/smartfolder:personal/{smartfolder:personal_reference}": {
      "get": {
        "tags": [
          "smartfolder:personal"
        ],
        "parameters": [
          {
            "name": "smartfolder:personal_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:personal",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_fields+",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_return_as_object",
            "in": "query",
            "required": false,
            "description": "Select 1 if result is required as a object",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1
              ],
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_personal"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "description": "Function calls",
        "tags": [
          "smartfolder:personal"
        ],
        "parameters": [
          {
            "name": "smartfolder:personal_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:personal",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_function",
            "in": "query",
            "required": true,
            "description": "Select the function",
            "schema": {
              "type": "string",
              "enum": [
                "save_as"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "save_as": {
                      "type": "string",
                      "example": {
                        "is_shortcut": "bool",
                        "name": "string",
                        "global_flag": "bool"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "put": {
        "description": "Update the smartfolder:personal resource",
        "tags": [
          "smartfolder:personal"
        ],
        "parameters": [
          {
            "name": "smartfolder:personal_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:personal",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          },
          {
            "name": "_return_fields",
            "in": "query",
            "required": false,
            "description": "Enter the field names followed by comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Enter the request body here",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "string"
                  },
                  "group_bys": {
                    "type": "string",
                    "example": "[{'value': 'string', 'value_type': 'enum', 'enable_grouping': 'bool'}]"
                  },
                  "name": {
                    "type": "string",
                    "example": "string"
                  },
                  "query_items": {
                    "type": "string",
                    "example": "[{'name': 'string', 'field_type': 'enum', 'operator': 'enum', 'op_match': 'bool', 'value_type': 'enum', 'value': 'smartfolder:queryitemvalue'}]"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartfolder_personal"
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "description": "Delete the smartfolder:personal resource",
        "tags": [
          "smartfolder:personal"
        ],
        "parameters": [
          {
            "name": "smartfolder:personal_reference",
            "in": "path",
            "required": true,
            "description": "Enter the reference for smartfolder:personal",
            "schema": {
              "type": "string",
              "example": "resourceID:resourceName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "$ref": {
                      "type": "string",
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "awsrte53taskgroup": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The AWS Account ID associated with this task group."
          },
          "comment": {
            "type": "string",
            "description": "Comment for the task group; maximum 256 characters."
          },
          "consolidate_zones": {
            "type": "boolean",
            "example": "boolean",
            "description": "Indicates if all zones need to be saved into a single view."
          },
          "consolidated_view": {
            "type": "string",
            "description": "The name of the DNS view for consolidating zones."
          },
          "disabled": {
            "type": "boolean",
            "example": "boolean",
            "description": "Indicates if the task group is enabled or disabled."
          },
          "grid_member": {
            "type": "string",
            "description": "Member on which the tasks in this task group will be run."
          },
          "name": {
            "type": "string",
            "description": "The name of this AWS Route53 sync task group."
          },
          "network_view": {
            "type": "string",
            "description": "The name of the tenant's network view."
          },
          "network_view_mapping_policy": {
            "type": "string",
            "enum": [
              "AUTO_CREATE",
              "DIRECT"
            ],
            "description": "The network view mapping policy."
          },
          "sync_status": {
            "type": "string",
            "enum": [
              "NEW",
              "OK",
              "WARNING",
              "ERROR"
            ],
            "description": "Indicate the overall sync status of this task group."
          },
          "task_list": {
            "type": "string",
            "enum": [
              "awsrte53task"
            ],
            "description": "List of AWS Route53 tasks in this group."
          }
        }
      },
      "awsuser": {
        "type": "object",
        "properties": {
          "access_key_id": {
            "type": "string",
            "description": "The unique Access Key ID of this AWS user. Maximum 255 characters."
          },
          "account_id": {
            "type": "string",
            "description": "The AWS Account ID of this AWS user. Maximum 64 characters."
          },
          "last_used": {
            "type": "string",
            "enum": [
              "timestamp"
            ],
            "description": "The timestamp when this AWS user credentials was last used."
          },
          "name": {
            "type": "string",
            "description": "The AWS user name. Maximum 64 characters."
          },
          "nios_user_name": {
            "type": "string",
            "description": "The NIOS user name mapped to this AWS user. Maximum 64 characters."
          },
          "secret_access_key": {
            "type": "string",
            "description": "The Secret Access Key for the Access Key ID of this user. Maximum 255 characters."
          },
          "status": {
            "type": "string",
            "enum": [
              "UNUSED",
              "SUCCESSFUL",
              "UNSUCCESSFUL"
            ],
            "description": "Indicate the validity status of this AWS user."
          }
        }
      },
      "captiveportal": {
        "type": "object",
        "properties": {
          "authn_server_group": {
            "type": "string",
            "description": "The authentication server group assigned to this captive portal."
          },
          "company_name": {
            "type": "string",
            "description": "The company name that appears in the guest registration page."
          },
          "enable_syslog_auth_failure": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if authentication failures are logged to syslog or not."
          },
          "enable_syslog_auth_success": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if successful authentications are logged to syslog or not."
          },
          "enable_user_type": {
            "type": "string",
            "enum": [
              "AUTHENTICATED",
              "BOTH",
              "GUEST"
            ],
            "description": "The type of user to be enabled for the captive portal."
          },
          "encryption": {
            "type": "string",
            "enum": [
              "NONE",
              "SSL"
            ],
            "description": "The encryption the captive portal uses."
          },
          "files": {
            "type": "string",
            "enum": [
              "captiveportal:file"
            ],
            "description": "The list of files associated with the captive portal."
          },
          "guest_custom_field1_name": {
            "type": "string",
            "description": "The name of the custom field that you are adding to the guest registration page."
          },
          "guest_custom_field1_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the custom field is required or not."
          },
          "guest_custom_field2_name": {
            "type": "string",
            "description": "The name of the custom field that you are adding to the guest registration page."
          },
          "guest_custom_field2_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the custom field is required or not."
          },
          "guest_custom_field3_name": {
            "type": "string",
            "description": "The name of the custom field that you are adding to the guest registration page."
          },
          "guest_custom_field3_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the custom field is required or not."
          },
          "guest_custom_field4_name": {
            "type": "string",
            "description": "The name of the custom field that you are adding to the guest registration page."
          },
          "guest_custom_field4_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the custom field is required or not."
          },
          "guest_email_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the email address of the guest is required or not."
          },
          "guest_first_name_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the first name of the guest is required or not."
          },
          "guest_last_name_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the last name of the guest is required or not."
          },
          "guest_middle_name_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the middle name of the guest is required or not."
          },
          "guest_phone_required": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the phone number of the guest is required or not."
          },
          "helpdesk_message": {
            "type": "string",
            "description": "The helpdesk message that appears in the guest registration page."
          },
          "listen_address_ip": {
            "type": "string",
            "description": "Determines the IP address on which the captive portal listens. Valid if listen address type is 'IP'."
          },
          "listen_address_type": {
            "type": "string",
            "enum": [
              "VIP",
              "LAN2",
              "IP"
            ],
            "description": "Determines the type of the IP address on which the captive portal listens."
          },
          "name": {
            "type": "string",
            "description": "The hostname of the Grid member that hosts the captive portal."
          },
          "network_view": {
            "type": "string",
            "description": "The network view of the captive portal."
          },
          "port": {
            "type": "integer",
            "example": "integer",
            "description": "The TCP port used by the Captive Portal service. The port is required when the Captive Portal service is enabled. Valid values are between 1 and 63999. Please note that setting the port number to 80 or 443 might impact performance."
          },
          "service_enabled": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines if the captive portal service is enabled or not."
          },
          "syslog_auth_failure_level": {
            "type": "string",
            "enum": [
              "EMERG",
              "INFO",
              "DEBUG",
              "WARNING",
              "NOTICE",
              "ALERT",
              "CRIT",
              "ERR"
            ],
            "description": "The syslog level at which authentication failures are logged."
          },
          "syslog_auth_success_level": {
            "type": "string",
            "enum": [
              "EMERG",
              "INFO",
              "DEBUG",
              "WARNING",
              "NOTICE",
              "ALERT",
              "CRIT",
              "ERR"
            ],
            "description": "The syslog level at which successful authentications are logged."
          },
          "welcome_message": {
            "type": "string",
            "description": "The welcome message that appears in the guest registration page."
          }
        }
      },
      "extensibleattributedef": {
        "type": "object",
        "properties": {
          "allowed_object_types": {
            "type": "string",
            "description": "The object types this extensible attribute is allowed to associate with."
          },
          "comment": {
            "type": "string",
            "description": "Comment for the Extensible Attribute Definition; maximum 256 characters."
          },
          "default_value": {
            "type": "string",
            "description": "Default value used to pre-populate the attribute value in the GUI. For email, URL, and string types, the value is a string with a maximum of 256 characters. For an integer, the value is an integer from -2147483648 through 2147483647. For a date, the value is the number of seconds that have elapsed since January 1st, 1970 UTC."
          },
          "descendants_action": {
            "type": "string",
            "enum": [
              "extensibleattributedef:descendants"
            ],
            "description": "This option describes the action that must be taken on the extensible attribute by its descendant in case the 'Inheritable' flag is set."
          },
          "flags": {
            "type": "string",
            "description": "This field contains extensible attribute flags. Possible values: (A)udited, (C)loud API, Cloud (G)master, (I)nheritable, (L)isted, (M)andatory value, MGM (P)rivate, (R)ead Only, (S)ort enum values, Multiple (V)alues If there are two or more flags in the field, you must list them according to the order they are listed above. For example, 'CR' is a valid value for the 'flags' field because C = Cloud API is listed before R = Read only. However, the value 'RC' is invalid because the order for the 'flags' field is broken."
          },
          "list_values": {
            "type": "string",
            "enum": [
              "extensibleattributedef:listvalues"
            ],
            "description": "List of Values. Applicable if the extensible attribute type is ENUM."
          },
          "max": {
            "type": "integer",
            "example": "integer",
            "description": "Maximum allowed value of extensible attribute. Applicable if the extensible attribute type is INTEGER."
          },
          "min": {
            "type": "integer",
            "example": "integer",
            "description": "Minimum allowed value of extensible attribute. Applicable if the extensible attribute type is INTEGER."
          },
          "name": {
            "type": "string",
            "description": "The name of the Extensible Attribute Definition."
          },
          "namespace": {
            "type": "string",
            "enum": [
              "CLOUD",
              "CLOUD_GM",
              "MSADSITES",
              "RIPE",
              "default"
            ],
            "description": "Namespace for the Extensible Attribute Definition."
          },
          "type": {
            "type": "string",
            "enum": [
              "STRING",
              "INTEGER",
              "EMAIL",
              "DATE",
              "ENUM",
              "URL"
            ],
            "description": "Type for the Extensible Attribute Definition."
          }
        }
      },
      "fileop": {
        "type": "object",
        "properties": {}
      },
      "hsm_allgroups": {
        "type": "object",
        "properties": {
          "groups": {
            "type": "string",
            "enum": [
              "hsm:safenetgroup"
            ],
            "description": "The list of HSM groups configured on the appliance."
          }
        }
      },
      "hsm_safenetgroup": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "The HSM SafeNet group comment."
          },
          "group_sn": {
            "type": "string",
            "description": "The HSM SafeNet group serial number."
          },
          "hsm_safenet": {
            "type": "string",
            "enum": [
              "hsm:safenet"
            ],
            "description": "The list of HSM SafeNet devices."
          },
          "hsm_version": {
            "type": "string",
            "enum": [
              "LunaSA_4",
              "LunaSA_5",
              "LunaSA_6"
            ],
            "description": "The HSM SafeNet version."
          },
          "name": {
            "type": "string",
            "description": "The HSM SafeNet group name."
          },
          "pass_phrase": {
            "type": "string",
            "description": "The pass phrase used to unlock the HSM SafeNet keystore."
          },
          "status": {
            "type": "string",
            "enum": [
              "UP",
              "DOWN"
            ],
            "description": "The status of all HSM SafeNet devices in the group."
          }
        }
      },
      "hsm_thalesgroup": {
        "type": "object",
        "properties": {
          "card_name": {
            "type": "string",
            "description": "The Thales HSM softcard name."
          },
          "comment": {
            "type": "string",
            "description": "The Thales HSM group comment."
          },
          "key_server_ip": {
            "type": "string",
            "description": "The remote file server (RFS) IPv4 Address."
          },
          "key_server_port": {
            "type": "integer",
            "example": "integer",
            "description": "The remote file server (RFS) port."
          },
          "name": {
            "type": "string",
            "description": "The Thales HSM group name."
          },
          "pass_phrase": {
            "type": "string",
            "description": "The password phrase used to unlock the Thales HSM keystore."
          },
          "protection": {
            "type": "string",
            "enum": [
              "MODULE",
              "SOFTCARD"
            ],
            "description": "The level of protection that the HSM group uses for the DNSSEC key data."
          },
          "status": {
            "type": "string",
            "enum": [
              "UP",
              "DOWN"
            ],
            "description": "The status of all Thales HSM devices in the group."
          },
          "thales_hsm": {
            "type": "string",
            "enum": [
              "hsm:thales"
            ],
            "description": "The list of Thales HSM devices."
          }
        }
      },
      "kerberoskey": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "The Kerberos domain name."
          },
          "enctype": {
            "type": "string",
            "enum": [
              "AES128-CTS-HMAC-SHA1-96",
              "AES256-CTS-HMAC-SHA1-96",
              "ARCFOUR-HMAC-MD5",
              "DES-CBC-CRC",
              "DES-CBC-MD5"
            ],
            "description": "The Kerberos key encryption type."
          },
          "in_use": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines whether the Kerberos key is assigned to the Grid or Grid member."
          },
          "members": {
            "type": "string",
            "description": "The list of hostnames and services of Grid members where the key is assigned or Grid/DHCP4 or Grid/DHCP6 or Grid/DNS."
          },
          "principal": {
            "type": "string",
            "description": "The principal of the Kerberos key object."
          },
          "upload_timestamp": {
            "type": "string",
            "enum": [
              "timestamp"
            ],
            "description": "The timestamp of the Kerberos key upload operation."
          },
          "version": {
            "type": "integer",
            "example": "integer",
            "description": "The Kerberos key version number (KVNO)."
          }
        }
      },
      "scheduledtask": {
        "type": "object",
        "properties": {
          "approval_status": {
            "type": "string",
            "enum": [
              "APPROVED",
              "NONE",
              "PENDING",
              "REJECTED"
            ],
            "description": "The approval status of the task."
          },
          "approver": {
            "type": "string",
            "description": "The approver of the task."
          },
          "approver_comment": {
            "type": "string",
            "description": "The comment specified by the approver of the task."
          },
          "automatic_restart": {
            "type": "boolean",
            "example": "boolean",
            "description": "Indicates whether there will be an automatic restart when the appliance executes the task."
          },
          "changed_objects": {
            "type": "string",
            "enum": [
              "changedobject"
            ],
            "description": "A list of objects that are affected by the task."
          },
          "dependent_tasks": {
            "type": "string",
            "enum": [
              "scheduledtask"
            ],
            "description": "If this scheduled task has dependent tasks, their references will be returned in this field."
          },
          "execute_now": {
            "type": "boolean",
            "example": "boolean",
            "description": "If this field is set to True the specified task will be executed immediately."
          },
          "execution_details": {
            "type": "string",
            "description": "Messages generated by the execution of the scheduled task after its completion."
          },
          "execution_details_type": {
            "type": "string",
            "enum": [
              "NONE",
              "WARNING"
            ],
            "description": "The type of details generated by the execution of the scheduled task after its completion."
          },
          "execution_status": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "FAILED",
              "PENDING",
              "WAITING_EXECUTION"
            ],
            "description": "The execution status of the task."
          },
          "execution_time": {
            "type": "string",
            "enum": [
              "timestamp"
            ],
            "description": "The time when the appliance executed the task."
          },
          "is_network_insight_task": {
            "type": "boolean",
            "example": "boolean",
            "description": "Indicates whether this is a Network Insight scheduled task."
          },
          "member": {
            "type": "string",
            "description": "The member where this task was created."
          },
          "predecessor_task": {
            "type": "string",
            "description": "If this scheduled task has a predecessor task set, its reference will be returned in this field."
          },
          "re_execute_task": {
            "type": "boolean",
            "example": "boolean",
            "description": "If set to True, if the scheduled task is a Network Insight task and it failed, a new task will be cloned from this task and re-executed."
          },
          "scheduled_time": {
            "type": "string",
            "enum": [
              "timestamp"
            ],
            "description": "The time when the task is scheduled to occur."
          },
          "submit_time": {
            "type": "string",
            "enum": [
              "timestamp"
            ],
            "description": "The time when the task was submitted."
          },
          "submitter": {
            "type": "string",
            "description": "The submitter of the task."
          },
          "submitter_comment": {
            "type": "string",
            "description": "The comment specified by the submitter of the task."
          },
          "task_id": {
            "type": "integer",
            "example": "integer",
            "description": "The task ID."
          },
          "task_type": {
            "type": "string",
            "enum": [
              "OBJECT_CHANGE",
              "PORT_CONTROL"
            ],
            "description": "The task type."
          },
          "ticket_number": {
            "type": "string",
            "description": "The task ticket number."
          }
        }
      },
      "search": {
        "type": "object",
        "properties": {}
      },
      "smartfolder_children": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "description": "The object retuned by the Smart Folder query."
          },
          "value": {
            "type": "string",
            "enum": [
              "smartfolder:queryitemvalue"
            ],
            "description": "The value returned by the Smart Folder query."
          },
          "value_type": {
            "type": "string",
            "enum": [
              "STRING",
              "INTEGER",
              "BOOLEAN",
              "DATE",
              "ENUM",
              "EMAIL",
              "URL",
              "OBJTYPE"
            ],
            "description": "The type of the returned value."
          }
        }
      },
      "smartfolder_global": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "The global Smart Folder descriptive comment."
          },
          "group_bys": {
            "type": "string",
            "enum": [
              "smartfolder:groupby"
            ],
            "description": "Global Smart Folder grouping rules."
          },
          "name": {
            "type": "string",
            "description": "The global Smart Folder name."
          },
          "query_items": {
            "type": "string",
            "enum": [
              "smartfolder:queryitem"
            ],
            "description": "The global Smart Folder filter queries."
          }
        }
      },
      "smartfolder_personal": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "The personal Smart Folder descriptive comment."
          },
          "group_bys": {
            "type": "string",
            "enum": [
              "smartfolder:groupby"
            ],
            "description": "The personal Smart Folder groupping rules."
          },
          "is_shortcut": {
            "type": "boolean",
            "example": "boolean",
            "description": "Determines whether the personal Smart Folder is a shortcut."
          },
          "name": {
            "type": "string",
            "description": "The personal Smart Folder name."
          },
          "query_items": {
            "type": "string",
            "enum": [
              "smartfolder:queryitem"
            ],
            "description": "The personal Smart Folder filter queries."
          }
        }
      }
    }
  }
}