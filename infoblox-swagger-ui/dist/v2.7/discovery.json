{
  "info": {
    "version": "v2.7", 
    "contact": {
      "name": "Krishna", 
      "email": "kvasudevan@infoblox.com"
    }, 
    "description": "Sample WAPI Documentation", 
    "license": {
      "url": "https://www.infoblox.com/", 
      "name": "Infoblox License"
    }, 
    "title": "Infoblox WAPI"
  }, 
  "paths": {
    "/wapi/v2.7/discovery:device": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_device"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "chassis_serial_number", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "location", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "model", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "network_view", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "os_version", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vendor", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:device"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:gridproperties/{discovery:gridproperties_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_gridproperties"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:gridproperties", 
            "required": true, 
            "name": "discovery:gridproperties_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:gridproperties"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "vrf_mapping_policy": {
                    "type": "string", 
                    "example": "[u'NONE', u'RULE_BASED', u'RULE_AND_INTERNAL_BASED']"
                  }, 
                  "snmpv3_credentials": {
                    "type": "string", 
                    "example": "[{u'privacy_password': u'string', u'comment': u'string', u'authentication_protocol': u'enum', u'privacy_protocol': u'enum', u'authentication_password': u'string', u'user': u'string'}]"
                  }, 
                  "cli_credentials": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'credential_type': u'enum', u'password': u'string', u'user': u'string', u'id': u'uint'}]"
                  }, 
                  "basic_polling_settings": {
                    "type": "string", 
                    "example": "discovery:basicpollsettings"
                  }, 
                  "unmanaged_ips_timeout": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "advanced_polling_settings": {
                    "type": "string", 
                    "example": "discovery:advancedpollsetting"
                  }, 
                  "auto_conversion_settings": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'type': u'enum', u'condition': u'string', u'network_view': u'string', u'format': u'string'}]"
                  }, 
                  "port_control_blackout_setting": {
                    "type": "string", 
                    "example": "properties:blackoutsetting"
                  }, 
                  "snmpv1v2_credentials": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'community_string': u'string'}]"
                  }, 
                  "ignore_conflict_duration": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "unmanaged_ips_limit": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "dns_lookup_throttle": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "dns_lookup_option": {
                    "type": "string", 
                    "example": "[u'ALL', u'INFRAONLY', u'OFF']"
                  }, 
                  "discovery_blackout_setting": {
                    "type": "string", 
                    "example": "properties:blackoutsetting"
                  }, 
                  "enable_auto_conversion": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_auto_updates": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "vrf_mapping_rules": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'network_view': u'string', u'criteria': u'string'}]"
                  }, 
                  "same_port_control_discovery_blackout": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "ports": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'type': u'enum', u'port': u'uint'}]"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the discovery:gridproperties resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "diagnostic_status": {
                      "type": "string", 
                      "example": {
                        "start": "int", 
                        "session_id": "string"
                      }
                    }, 
                    "diagnostic": {
                      "type": "string", 
                      "example": {
                        "network_view": "string", 
                        "discovery_member": "string", 
                        "force_test": "bool", 
                        "community_string": "string", 
                        "address": "string", 
                        "enable_snmp_debug": "bool"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:gridproperties", 
            "required": true, 
            "name": "discovery:gridproperties_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "diagnostic", 
                "diagnostic_status"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:gridproperties"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_gridproperties"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:gridproperties", 
            "required": true, 
            "name": "discovery:gridproperties_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:gridproperties"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:status/{discovery:status_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_status"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:status", 
            "required": true, 
            "name": "discovery:status_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:status"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:deviceneighbor": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_deviceneighbor"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "device", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:deviceneighbor"
        ]
      }
    }, 
    "/wapi/v2.7/discoverytask/{discoverytask_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discoverytask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discoverytask", 
            "required": true, 
            "name": "discoverytask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "discoverytask"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "tcp_ports": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'number': u'uint'}]"
                  }, 
                  "network_view": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "ping_retries": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "scheduled_run": {
                    "type": "string", 
                    "example": "setting:schedule"
                  }, 
                  "tcp_scan_technique": {
                    "type": "string", 
                    "example": "[u'SYN', u'CONNECT']"
                  }, 
                  "disable_ip_scanning": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "ping_timeout": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "mode": {
                    "type": "string", 
                    "example": "[u'FULL', u'ICMP', u'NETBIOS', u'TCP', u'CSV']"
                  }, 
                  "member_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "merge_data": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "disable_vmware_scanning": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "networks": {
                    "type": "string", 
                    "example": "network"
                  }, 
                  "vservers": {
                    "type": "string", 
                    "example": "[{u'username': u'string', u'connection_protocol': u'enum', u'disable': u'bool', u'fqdn_or_ip': u'string', u'password': u'string', u'port': u'uint'}]"
                  }, 
                  "v_network_view": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the discoverytask resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "network_discovery_control": {
                      "type": "string", 
                      "example": {
                        "action": [
                          "START", 
                          "PAUSE", 
                          "RESUME", 
                          "END"
                        ]
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discoverytask", 
            "required": true, 
            "name": "discoverytask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "network_discovery_control"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "discoverytask"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discoverytask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discoverytask", 
            "required": true, 
            "name": "discoverytask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discoverytask"
        ]
      }
    }, 
    "/wapi/v2.7/network_discovery": {}, 
    "/wapi/v2.7/discovery:deviceinterface": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_deviceinterface"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "description", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "mac", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "network_view", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "oper_status", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "speed", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vrf_description", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vrf_name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vrf_rd", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:deviceinterface"
        ]
      }
    }, 
    "/wapi/v2.7/discovery": {}, 
    "/wapi/v2.7/discovery:status": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_status"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "network_view", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:status"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:vrf": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_vrf"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "network_view", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:vrf"
        ]
      }
    }, 
    "/wapi/v2.7/discovery/{discovery_reference}": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "get_job_process_details": {
                      "type": "string", 
                      "example": {
                        "device": "string", 
                        "task": "string", 
                        "start_line": "uint"
                      }
                    }, 
                    "get_device_support_info": {
                      "type": "string", 
                      "example": {
                        "device": "string"
                      }
                    }, 
                    "clear_network_port_assignment": {
                      "type": "string", 
                      "example": {
                        "network_deprovision_info": "discovery:networkdeprovisioninfo"
                      }
                    }, 
                    "control_switch_port": {
                      "type": "string", 
                      "example": {
                        "port_configs": "discovery:port:control:info"
                      }
                    }, 
                    "discovery_data_conversion": {
                      "type": "string", 
                      "example": {
                        "attributes": "discovery:conversion_attributes", 
                        "extensible_attributes": "string", 
                        "type": [
                          "HOST_RECORD", 
                          "FIXED_ADDRESS", 
                          "IPV6_FIXED_ADDRESS", 
                          "A_AND_PTR_RECORD", 
                          "AAAA_AND_PTR_RECORD"
                        ], 
                        "addresses": "ipv4address"
                      }
                    }, 
                    "provision_network_dhcp_relay": {
                      "type": "string", 
                      "example": {
                        "enable_dhcp_relay": "bool", 
                        "interfaces": "discovery:deviceinterface", 
                        "parent": "string"
                      }
                    }, 
                    "get_job_devices": {
                      "type": "string", 
                      "example": {
                        "task": "string"
                      }
                    }, 
                    "modify_vrf_assignment": {
                      "type": "string", 
                      "example": {
                        "mode": [
                          "ASSIGN", 
                          "UNASSIGN"
                        ], 
                        "network_view": "string", 
                        "vrfs": "discovery:vrf"
                      }
                    }, 
                    "import_device_support_bundle": {
                      "type": "string", 
                      "example": {
                        "token": "string", 
                        "filename": "string"
                      }
                    }, 
                    "provision_network_port": {
                      "type": "string", 
                      "example": {
                        "network": "string", 
                        "network_view": "string", 
                        "interface": "string", 
                        "router_ip": "string", 
                        "device": "string", 
                        "enable_dhcp_relay": "bool", 
                        "vlan_info": "discovery:vlaninfo"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery", 
            "required": true, 
            "name": "discovery_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "clear_network_port_assignment", 
                "control_switch_port", 
                "discovery_data_conversion", 
                "get_device_support_info", 
                "get_job_devices", 
                "get_job_process_details", 
                "import_device_support_bundle", 
                "modify_vrf_assignment", 
                "provision_network_dhcp_relay", 
                "provision_network_port"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }
    }, 
    "/wapi/v2.7/discovery:diagnostictask/{discovery:diagnostictask_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_diagnostictask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:diagnostictask", 
            "required": true, 
            "name": "discovery:diagnostictask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:diagnostictask"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:devicecomponent": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_devicecomponent"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "device", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:devicecomponent"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:vrf/{discovery:vrf_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_vrf"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:vrf", 
            "required": true, 
            "name": "discovery:vrf_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:vrf"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:gridproperties": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_gridproperties"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:gridproperties"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:device/{discovery:device_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_device"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:device", 
            "required": true, 
            "name": "discovery:device_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:device"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the discovery:device resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_device"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:device", 
            "required": true, 
            "name": "discovery:device_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:device"
        ]
      }
    }, 
    "/wapi/v2.7/network_discovery/{network_discovery_reference}": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "clear_discovery_data": {
                      "type": "string", 
                      "example": {
                        "network": "string", 
                        "network_view": "string", 
                        "vdiscovery_task": "string", 
                        "usage": [
                          "UNMANAGED", 
                          "MANAGED", 
                          "ALL"
                        ], 
                        "scope": [
                          "GLOBAL", 
                          "TENANT", 
                          "NETWORK", 
                          "IP_ADDRESS", 
                          "VDISCOVERY_TASK"
                        ], 
                        "ip_address": "string", 
                        "tenant": "string"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for network_discovery", 
            "required": true, 
            "name": "network_discovery_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "clear_discovery_data"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "network_discovery"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }
    }, 
    "/wapi/v2.7/discovery:devicecomponent/{discovery:devicecomponent_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_devicecomponent"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:devicecomponent", 
            "required": true, 
            "name": "discovery:devicecomponent_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:devicecomponent"
        ]
      }
    }, 
    "/wapi/v2.7/discoverytask": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discoverytask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "discovery_task_oid", 
            "in": "query"
          }
        ], 
        "tags": [
          "discoverytask"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:memberproperties/{discovery:memberproperties_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_memberproperties"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:memberproperties", 
            "required": true, 
            "name": "discovery:memberproperties_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:memberproperties"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "seed_routers": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'network_view': u'string', u'address': u'string'}]"
                  }, 
                  "cli_credentials": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'credential_type': u'enum', u'password': u'string', u'user': u'string', u'id': u'uint'}]"
                  }, 
                  "cisco_apic_configurations": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'username': u'string', u'protocol': u'enum', u'network_view': u'string', u'ca_certificate': u'string', u'address': u'string', u'password': u'string'}]"
                  }, 
                  "snmpv3_credentials": {
                    "type": "string", 
                    "example": "[{u'privacy_password': u'string', u'comment': u'string', u'authentication_protocol': u'enum', u'privacy_protocol': u'enum', u'authentication_password': u'string', u'user': u'string'}]"
                  }, 
                  "snmpv1v2_credentials": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'community_string': u'string'}]"
                  }, 
                  "use_cli_credentials": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "role": {
                    "type": "string", 
                    "example": "[u'NONE', u'DNM', u'DNP']"
                  }, 
                  "scan_interfaces": {
                    "type": "string", 
                    "example": "[{u'type': u'enum', u'scan_virtual_ip': u'string', u'network_view': u'string'}]"
                  }, 
                  "is_sa": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_snmpv1v2_credentials": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_snmpv3_credentials": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_service": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the discovery:memberproperties resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_memberproperties"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:memberproperties", 
            "required": true, 
            "name": "discovery:memberproperties_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:memberproperties"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:devicesupportbundle/{discovery:devicesupportbundle_reference}": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the discovery:devicesupportbundle resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:devicesupportbundle", 
            "required": true, 
            "name": "discovery:devicesupportbundle_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "discovery:devicesupportbundle"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_devicesupportbundle"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:devicesupportbundle", 
            "required": true, 
            "name": "discovery:devicesupportbundle_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:devicesupportbundle"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:memberproperties": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_memberproperties"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "discovery_member", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "enable_service", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "is_sa", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "role", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:memberproperties"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:deviceneighbor/{discovery:deviceneighbor_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_deviceneighbor"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:deviceneighbor", 
            "required": true, 
            "name": "discovery:deviceneighbor_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:deviceneighbor"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:diagnostictask": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_diagnostictask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "ip_address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "network_view", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "task_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:diagnostictask"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:deviceinterface/{discovery:deviceinterface_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_deviceinterface"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:deviceinterface", 
            "required": true, 
            "name": "discovery:deviceinterface_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:deviceinterface"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the discovery:deviceinterface resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_deviceinterface"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for discovery:deviceinterface", 
            "required": true, 
            "name": "discovery:deviceinterface_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:deviceinterface"
        ]
      }
    }, 
    "/wapi/v2.7/discovery:devicesupportbundle": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/discovery_devicesupportbundle"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "discovery:devicesupportbundle"
        ]
      }
    }
  }, 
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic", 
        "type": "http"
      }
    }, 
    "schemas": {
      "discovery_deviceinterface": {
        "type": "object", 
        "properties": {
          "ifaddr_infos": {
            "enum": [
              "discovery:ifaddrinfo"
            ], 
            "type": "string", 
            "description": "List of IFaddr information associated with the interface."
          }, 
          "ms_ad_user_data": {
            "enum": [
              "msserver:aduser:data"
            ], 
            "type": "string", 
            "description": "The Microsoft Active Directory user related information."
          }, 
          "speed": {
            "type": "integer", 
            "example": "integer", 
            "description": "The interface speed in bps."
          }, 
          "link_aggregation": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "This field indicates if this is a link aggregation interface."
          }, 
          "oper_status": {
            "enum": [
              "UP", 
              "DOWN"
            ], 
            "type": "string", 
            "description": "Operating state of the interface."
          }, 
          "index": {
            "enum": [
              "int"
            ], 
            "type": "string", 
            "description": "The interface index number, as reported by SNMP."
          }, 
          "cap_if_net_deprovisioning_ipv4_na_reason": {
            "type": "string", 
            "description": "The reason that the deprovision a IPv4 network from the interface."
          }, 
          "cap_if_net_deprovisioning_ipv6_na_reason": {
            "type": "string", 
            "description": "The reason that the deprovision a IPv6 network from the interface."
          }, 
          "duplex": {
            "enum": [
              "FULL", 
              "HALF", 
              "UNSUPPORTED", 
              "UNKNOWN"
            ], 
            "type": "string", 
            "description": "The duplex state of the interface."
          }, 
          "vlan_infos": {
            "enum": [
              "discovery:vlaninfo"
            ], 
            "type": "string", 
            "description": "The list of VLAN information associated with the interface."
          }, 
          "description_task_info": {
            "enum": [
              "discovery:port:config:description"
            ], 
            "type": "string", 
            "description": "The configured description task info of the interface."
          }, 
          "cap_if_net_deprovisioning_ipv6_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to deprovision a IPv6 network from the interfaces."
          }, 
          "cap_if_description_na_reason": {
            "type": "string", 
            "description": "The reason that the edit description action is not available."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "cap_if_vlan_assignment_na_reason": {
            "type": "string", 
            "description": "The reason that VLAN assignment action is not available."
          }, 
          "cap_if_voice_vlan_na_reason": {
            "type": "string", 
            "description": "The reason that voice VLAN assignment action is not available."
          }, 
          "type": {
            "type": "string", 
            "description": "The type of interface."
          }, 
          "cap_if_description_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the description of the interface."
          }, 
          "description": {
            "type": "string", 
            "description": "The description of the interface."
          }, 
          "cap_if_vlan_assignment_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the VLAN assignement of the interface."
          }, 
          "port_fast": {
            "enum": [
              "ENABLED", 
              "DISABLED"
            ], 
            "type": "string", 
            "description": "The Port Fast status of the interface."
          }, 
          "cap_if_net_provisioning_ipv4_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the IPv4 network associated to the interface."
          }, 
          "vrf_rd": {
            "type": "string", 
            "description": "The route distinguisher of the Virtual Routing and Forwarding (VRF) associated with the interface."
          }, 
          "admin_status": {
            "enum": [
              "UP", 
              "DOWN"
            ], 
            "type": "string", 
            "description": "Administrative state of the interface."
          }, 
          "trunk_status": {
            "enum": [
              "ON", 
              "OFF"
            ], 
            "type": "string", 
            "description": "Indicates if the interface is tagged as a VLAN trunk or not."
          }, 
          "cap_if_net_provisioning_ipv6_na_reason": {
            "type": "string", 
            "description": "The reason that IPv6 network provisioning is not available."
          }, 
          "device": {
            "type": "string", 
            "description": "The ref to the device to which the interface belongs."
          }, 
          "cap_if_admin_status_na_reason": {
            "type": "string", 
            "description": "The reason that the edit admin status action is not available."
          }, 
          "reserved_object": {
            "type": "string", 
            "description": "The reference to object(Host/FixedAddress/GridMember) to which this port is reserved."
          }, 
          "admin_status_task_info": {
            "enum": [
              "discovery:port:config:adminstatus"
            ], 
            "type": "string", 
            "description": "The configured admin status task info of the interface."
          }, 
          "name": {
            "type": "string", 
            "description": "The interface system name."
          }, 
          "network_view": {
            "type": "string", 
            "description": "Th name of the network view."
          }, 
          "cap_if_voice_vlan_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the voice VLAN assignement of the interface."
          }, 
          "cap_if_net_provisioning_ipv4_na_reason": {
            "type": "string", 
            "description": "The reason that IPv4 network provisioning is not available."
          }, 
          "mac": {
            "type": "string", 
            "description": "The MAC address of the interface."
          }, 
          "vrf_name": {
            "type": "string", 
            "description": "The name of the Virtual Routing and Forwarding (VRF) associated with the interface."
          }, 
          "cap_if_net_deprovisioning_ipv4_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to deprovision a IPv4 network from the interfaces."
          }, 
          "cap_if_net_provisioning_ipv6_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the IPv6 network associated to the interface."
          }, 
          "vrf_description": {
            "type": "string", 
            "description": "The description of the Virtual Routing and Forwarding (VRF) associated with the interface."
          }, 
          "vlan_info_task_info": {
            "enum": [
              "discovery:port:config:vlaninfo"
            ], 
            "type": "string", 
            "description": "The configured VLAN status task info of the interface."
          }, 
          "last_change": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Timestamp of the last interface property change detected."
          }, 
          "cap_if_admin_status_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the admin status of the interface."
          }
        }
      }, 
      "discoverytask": {
        "type": "object", 
        "properties": {
          "status": {
            "type": "string", 
            "description": "The network discovery process descriptive status."
          }, 
          "state_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Time when the network discovery process state was last updated."
          }, 
          "network_view": {
            "type": "string", 
            "description": "Name of the network view in which target networks for network discovery reside."
          }, 
          "discovery_task_oid": {
            "type": "string", 
            "description": "The discovery task identifier."
          }, 
          "csv_file_name": {
            "type": "string", 
            "description": "The network discovery CSV file name."
          }, 
          "ping_retries": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of times to perfrom ping for ICMP and FULL modes."
          }, 
          "scheduled_run": {
            "enum": [
              "setting:schedule"
            ], 
            "type": "string", 
            "description": "The schedule setting for network discovery task."
          }, 
          "tcp_scan_technique": {
            "enum": [
              "SYN", 
              "CONNECT"
            ], 
            "type": "string", 
            "description": "The TCP scan techinque for FULL and TCP modes."
          }, 
          "status_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time when the network discovery process status was last updated."
          }, 
          "disable_ip_scanning": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether IP scanning is disabled."
          }, 
          "state": {
            "enum": [
              "RUNNING", 
              "PAUSED", 
              "COMPLETE", 
              "ERROR", 
              "PAUSE_PENDING", 
              "END_PENDING"
            ], 
            "type": "string", 
            "description": "The network discovery process state."
          }, 
          "warning": {
            "type": "string", 
            "description": "The network discovery process warning."
          }, 
          "ping_timeout": {
            "type": "integer", 
            "example": "integer", 
            "description": "The ping timeout for ICMP and FULL modes."
          }, 
          "mode": {
            "enum": [
              "FULL", 
              "ICMP", 
              "NETBIOS", 
              "TCP", 
              "CSV"
            ], 
            "type": "string", 
            "description": "Network discovery scanning mode."
          }, 
          "member_name": {
            "type": "string", 
            "description": "The Grid member that runs the discovery."
          }, 
          "v_network_view": {
            "type": "string", 
            "description": "Name of the network view in which target networks for VMWare scanning reside."
          }, 
          "merge_data": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to replace or merge new data with existing data."
          }, 
          "disable_vmware_scanning": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether VMWare scanning is disabled."
          }, 
          "networks": {
            "enum": [
              "network"
            ], 
            "type": "string", 
            "description": "The list of the networks on which the network discovery will be invoked."
          }, 
          "vservers": {
            "enum": [
              "discoverytaskvserver"
            ], 
            "type": "string", 
            "description": "The list of VMware vSphere servers for VM discovery."
          }, 
          "tcp_ports": {
            "enum": [
              "discoverytaskport"
            ], 
            "type": "string", 
            "description": "The ports to scan for FULL and TCP modes."
          }
        }
      }, 
      "discovery_deviceneighbor": {
        "type": "object", 
        "properties": {
          "address_ref": {
            "type": "string", 
            "description": "The ref to the management IP address of the device neighbor."
          }, 
          "vlan_infos": {
            "enum": [
              "discovery:vlaninfo"
            ], 
            "type": "string", 
            "description": "The list of VLAN information associated with the device neighbor."
          }, 
          "interface": {
            "type": "string", 
            "description": "The ref to the interface to which the device neighbor belongs."
          }, 
          "mac": {
            "type": "string", 
            "description": "The MAC address of the device neighbor."
          }, 
          "address": {
            "type": "string", 
            "description": "The IPv4 Address or IPv6 Address of the device neighbor."
          }, 
          "device": {
            "type": "string", 
            "description": "The ref to the device to which the device neighbor belongs."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of the device neighbor."
          }
        }
      }, 
      "discovery_status": {
        "type": "object", 
        "properties": {
          "status": {
            "enum": [
              "OK", 
              "ERROR", 
              "NOT_REACHABLE"
            ], 
            "type": "string", 
            "description": "The overall status of the device."
          }, 
          "existence_info": {
            "enum": [
              "discovery:statusinfo"
            ], 
            "type": "string", 
            "description": "The existence status information of the device."
          }, 
          "snmp_collection_info": {
            "enum": [
              "discovery:statusinfo"
            ], 
            "type": "string", 
            "description": "The SNMP collection status information of the device."
          }, 
          "snmp_credential_info": {
            "enum": [
              "discovery:statusinfo"
            ], 
            "type": "string", 
            "description": "The SNMP credential status information of the device."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of the device."
          }, 
          "last_action": {
            "type": "string", 
            "description": "The timestamp of the last detected interface property change."
          }, 
          "last_timestamp": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp of the last executed action for the device."
          }, 
          "fingerprint_enabled": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Indicates if DHCP finterprinting is enabled."
          }, 
          "network_view": {
            "type": "string", 
            "description": "The name of the network view in which this device resides."
          }, 
          "reachable_info": {
            "enum": [
              "discovery:statusinfo"
            ], 
            "type": "string", 
            "description": "The reachable status information of the device."
          }, 
          "fingerprint_info": {
            "enum": [
              "discovery:statusinfo"
            ], 
            "type": "string", 
            "description": "This DHCP finterprinting status information of the device."
          }, 
          "cli_collection_enabled": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Indicates if CLI collection is enabled."
          }, 
          "address": {
            "type": "string", 
            "description": "The IPv4 Address or IPv6 Address of the device."
          }, 
          "first_seen": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the device was first discovered."
          }, 
          "type": {
            "type": "string", 
            "description": "The type of device."
          }, 
          "snmp_collection_enabled": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Indicates if SNMP collection is enabled."
          }, 
          "last_seen": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the device was last discovered."
          }
        }
      }, 
      "discovery": {
        "type": "object", 
        "properties": {}
      }, 
      "discovery_memberproperties": {
        "type": "object", 
        "properties": {
          "seed_routers": {
            "enum": [
              "discovery:seedrouter"
            ], 
            "type": "string", 
            "description": "Seed routers."
          }, 
          "gateway_seed_routers": {
            "enum": [
              "discovery:seedrouter"
            ], 
            "type": "string", 
            "description": "Gateway seed routers."
          }, 
          "cli_credentials": {
            "enum": [
              "discovery:clicredential"
            ], 
            "type": "string", 
            "description": "Discovery CLI credentials."
          }, 
          "cisco_apic_configurations": {
            "enum": [
              "discovery:ciscoapicconfiguration"
            ], 
            "type": "string", 
            "description": "Cisco APIC configurations."
          }, 
          "discovery_member": {
            "type": "string", 
            "description": "The name of the network discovery Grid member."
          }, 
          "snmpv3_credentials": {
            "enum": [
              "discovery:snmp3credential"
            ], 
            "type": "string", 
            "description": "Discovery SNMP v3 credentials."
          }, 
          "snmpv1v2_credentials": {
            "enum": [
              "discovery:snmpcredential"
            ], 
            "type": "string", 
            "description": "Discovery SNMP v1 and v2 credentials."
          }, 
          "use_snmpv3_credentials": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: snmpv3_credentials"
          }, 
          "use_cli_credentials": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: cli_credentials"
          }, 
          "role": {
            "enum": [
              "NONE", 
              "DNM", 
              "DNP"
            ], 
            "type": "string", 
            "description": "Discovery member role."
          }, 
          "scan_interfaces": {
            "enum": [
              "discovery:scaninterface"
            ], 
            "type": "string", 
            "description": "Discovery networks to which the member is assigned."
          }, 
          "is_sa": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the standalone mode for discovery network monitor is enabled or not."
          }, 
          "address": {
            "type": "string", 
            "description": "The Grid member address IP address."
          }, 
          "use_snmpv1v2_credentials": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: snmpv1v2_credentials"
          }, 
          "default_seed_routers": {
            "enum": [
              "discovery:seedrouter"
            ], 
            "type": "string", 
            "description": "Default seed routers."
          }, 
          "enable_service": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the discovery service is enabled."
          }
        }
      }, 
      "network_discovery": {
        "type": "object", 
        "properties": {}
      }, 
      "discovery_devicecomponent": {
        "type": "object", 
        "properties": {
          "description": {
            "type": "string", 
            "description": "The description of the device component."
          }, 
          "device": {
            "type": "string", 
            "description": "A reference to a device, to which this component belongs to."
          }, 
          "model": {
            "type": "string", 
            "description": "The model of the device component."
          }, 
          "type": {
            "type": "string", 
            "description": "The type of device component."
          }, 
          "serial": {
            "type": "string", 
            "description": "The serial number of the device component."
          }, 
          "component_name": {
            "type": "string", 
            "description": "The component name."
          }
        }
      }, 
      "discovery_devicesupportbundle": {
        "type": "object", 
        "properties": {
          "integrated_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the device support bundle is integrated or imported. Note that integrated support bundles cannot be removed."
          }, 
          "name": {
            "type": "string", 
            "description": "The descriptive device name for the device support bundle."
          }, 
          "version": {
            "type": "string", 
            "description": "The version of the currently active device support bundle."
          }, 
          "author": {
            "type": "string", 
            "description": "The developer of the device support bundle."
          }
        }
      }, 
      "discovery_vrf": {
        "type": "object", 
        "properties": {
          "device": {
            "type": "string", 
            "description": "The device to which the VRF belongs."
          }, 
          "route_distinguisher": {
            "type": "string", 
            "description": "The route distinguisher associated with the VRF."
          }, 
          "description": {
            "type": "string", 
            "description": "Additional information about the VRF."
          }, 
          "network_view": {
            "type": "string", 
            "description": "The name of the network view in which this VRF resides."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of the VRF."
          }
        }
      }, 
      "discovery_diagnostictask": {
        "type": "object", 
        "properties": {
          "task_id": {
            "type": "string", 
            "description": "The ID of the discovery diagnostic task."
          }, 
          "network_view": {
            "type": "string", 
            "description": "The network view name of the discovery diagnostic task."
          }, 
          "start_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time when the discovery diagnostic task was started."
          }, 
          "community_string": {
            "type": "string", 
            "description": "The SNMP community string of the discovery diagnostic task."
          }, 
          "debug_snmp": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "The SNMP debug flag of the discovery diagnostic task."
          }, 
          "ip_address": {
            "type": "string", 
            "description": "The IP address of the discovery diagnostic task."
          }, 
          "force_test": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "The force test flag of the discovery diagnostic task."
          }
        }
      }, 
      "discovery_gridproperties": {
        "type": "object", 
        "properties": {
          "grid_name": {
            "type": "string", 
            "description": "The Grid name."
          }, 
          "snmpv3_credentials": {
            "enum": [
              "discovery:snmp3credential"
            ], 
            "type": "string", 
            "description": "Discovery SNMP v3 credentials."
          }, 
          "cli_credentials": {
            "enum": [
              "discovery:clicredential"
            ], 
            "type": "string", 
            "description": "Discovery CLI credentials."
          }, 
          "vrf_mapping_policy": {
            "enum": [
              "NONE", 
              "RULE_BASED", 
              "RULE_AND_INTERNAL_BASED"
            ], 
            "type": "string", 
            "description": "The policy type used to define the behavior of the VRF mapping."
          }, 
          "basic_polling_settings": {
            "enum": [
              "discovery:basicpollsettings"
            ], 
            "type": "string", 
            "description": "Discovery basic polling settings."
          }, 
          "unmanaged_ips_timeout": {
            "type": "integer", 
            "example": "integer", 
            "description": "Determines the timeout between two notifications (in seconds) about the new unmanaged IP address in a particular network. The value must be between 60 seconds and the number of seconds remaining to Jan 2038."
          }, 
          "advanced_polling_settings": {
            "enum": [
              "discovery:advancedpollsetting"
            ], 
            "type": "string", 
            "description": "Discovery advanced polling settings."
          }, 
          "auto_conversion_settings": {
            "enum": [
              "discovery:autoconversionsetting"
            ], 
            "type": "string", 
            "description": "Automatic conversion settings."
          }, 
          "port_control_blackout_setting": {
            "enum": [
              "properties:blackoutsetting"
            ], 
            "type": "string", 
            "description": "Port control blackout setting."
          }, 
          "snmpv1v2_credentials": {
            "enum": [
              "discovery:snmpcredential"
            ], 
            "type": "string", 
            "description": "Discovery SNMP v1 and v2 credentials."
          }, 
          "ignore_conflict_duration": {
            "type": "integer", 
            "example": "integer", 
            "description": "Determines the timeout to ignore the discovery conflict duration (in seconds)."
          }, 
          "unmanaged_ips_limit": {
            "type": "integer", 
            "example": "integer", 
            "description": "Limit of discovered unmanaged IP address which determines how frequently the user is notified about the new unmanaged IP address in a particular network."
          }, 
          "dns_lookup_throttle": {
            "type": "integer", 
            "example": "integer", 
            "description": "The percentage of available capacity the DNS processor operates at. Valid values are unsigned integer between 1 and 100, inclusive."
          }, 
          "dns_lookup_option": {
            "enum": [
              "ALL", 
              "INFRAONLY", 
              "OFF"
            ], 
            "type": "string", 
            "description": "The type of the devices the DNS processor operates on."
          }, 
          "discovery_blackout_setting": {
            "enum": [
              "properties:blackoutsetting"
            ], 
            "type": "string", 
            "description": "Discovery blackout setting."
          }, 
          "enable_auto_conversion": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "The flag that enables automatic conversion of discovered data."
          }, 
          "enable_auto_updates": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "The flag that enables updating discovered data for managed objects."
          }, 
          "vrf_mapping_rules": {
            "enum": [
              "discovery:vrfmappingrule"
            ], 
            "type": "string", 
            "description": "VRF mapping rules."
          }, 
          "same_port_control_discovery_blackout": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the same port control is used for discovery blackout."
          }, 
          "ports": {
            "enum": [
              "discovery:port"
            ], 
            "type": "string", 
            "description": "Ports to scan."
          }
        }
      }, 
      "discovery_device": {
        "type": "object", 
        "properties": {
          "neighbors": {
            "enum": [
              "discovery:deviceneighbor"
            ], 
            "type": "string", 
            "description": "List of the device neighbors."
          }, 
          "cap_vlan_assignment_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the VLAN assignement of an interface of the device."
          }, 
          "ms_ad_user_data": {
            "enum": [
              "msserver:aduser:data"
            ], 
            "type": "string", 
            "description": "The Microsoft Active Directory user related information."
          }, 
          "cap_description_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the description of an interface on the device."
          }, 
          "vlan_infos": {
            "enum": [
              "discovery:vlaninfo"
            ], 
            "type": "string", 
            "description": "The list of VLAN information associated with the device."
          }, 
          "cap_net_deprovisioning_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to deprovision a network from interfaces of the device."
          }, 
          "address_ref": {
            "type": "string", 
            "description": "The ref to management IP address of the device."
          }, 
          "os_version": {
            "type": "string", 
            "description": "The Operating System version running on the device."
          }, 
          "networks": {
            "enum": [
              "network"
            ], 
            "type": "string", 
            "description": "The list of networks to which the device interfaces belong."
          }, 
          "cap_voice_vlan_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the voice VLAN assignment of an interface of the device."
          }, 
          "cap_net_vlan_provisioning_na_reason": {
            "type": "string", 
            "description": "The reason that network provisioning on VLAN is not available."
          }, 
          "location": {
            "type": "string", 
            "description": "The location of the device."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "cap_voice_vlan_na_reason": {
            "type": "string", 
            "description": "The reason that voice VLAN assignment action is not available."
          }, 
          "type": {
            "type": "string", 
            "description": "The type of the device."
          }, 
          "cap_description_na_reason": {
            "type": "string", 
            "description": "The reason that the edit description action is not available."
          }, 
          "cap_vlan_assignment_na_reason": {
            "type": "string", 
            "description": "The reason that VLAN assignment action is not available."
          }, 
          "vendor": {
            "type": "string", 
            "description": "The vendor name of the device."
          }, 
          "description": {
            "type": "string", 
            "description": "The description of the device."
          }, 
          "port_stats": {
            "enum": [
              "discovery:device:portstatistics"
            ], 
            "type": "string", 
            "description": "The port statistics of the device."
          }, 
          "interfaces": {
            "enum": [
              "discovery:deviceinterface"
            ], 
            "type": "string", 
            "description": "List of the device interfaces."
          }, 
          "cap_net_provisioning_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the network associated to an interface of the device."
          }, 
          "address": {
            "type": "string", 
            "description": "The IPv4 Address or IPv6 Address of the device."
          }, 
          "network": {
            "type": "string", 
            "description": "The ref to the network to which belongs the management IP address belongs."
          }, 
          "network_infos": {
            "enum": [
              "discovery:networkinfo"
            ], 
            "type": "string", 
            "description": "The list of networks to which the device interfaces belong."
          }, 
          "cap_net_vlan_provisioning_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to create a VLAN and then provision a network to the interface of the device."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of the device."
          }, 
          "network_view": {
            "type": "string", 
            "description": "The name of the network view in which this device resides."
          }, 
          "cap_admin_status_ind": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to modify the admin status of an interface of the device."
          }, 
          "cap_admin_status_na_reason": {
            "type": "string", 
            "description": "The reason that the edit admin status action is not available."
          }, 
          "chassis_serial_number": {
            "type": "string", 
            "description": "The device chassis serial number."
          }, 
          "cap_net_provisioning_na_reason": {
            "type": "string", 
            "description": "The reason that network provisioning is not available."
          }, 
          "model": {
            "type": "string", 
            "description": "The model name of the device."
          }, 
          "cap_net_deprovisioning_na_reason": {
            "type": "string", 
            "description": "The reason that the deprovision a network from interfaces of this device is not available."
          }
        }
      }
    }
  }, 
  "openapi": "3.0.0"
}