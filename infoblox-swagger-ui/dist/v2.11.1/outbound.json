{'openapi': '3.0.0', 'info': {'description': 'WAPI Documentation', 'version': 'v2.11.1', 'title': 'Infoblox WAPI', 'license': {'name': 'Infoblox License', 'url': 'https://www.infoblox.com/'}, 'contact': {'name': 'Support', 'email': 'vsethia@infoblox.com'}}, 'paths': {'/wapi/v2.11.1/allendpoints': {'get': {'tags': ['allendpoints'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'address', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'subscribing_member', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'version', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/allendpoints'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/allendpoints/{allendpoints_reference}': {'get': {'tags': ['allendpoints'], 'parameters': [{'name': 'allendpoints_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for allendpoints', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/allendpoints'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/ciscoise:endpoint': {'get': {'tags': ['ciscoise:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'address', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'network_view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'resolved_address', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'resolved_secondary_address', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'secondary_address', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'subscribing_member', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'version', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ciscoise_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['ciscoise:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'address': {'type': 'string', 'example': 'string'}, 'bulk_download_certificate_token': {'type': 'string', 'example': 'string'}, 'client_certificate_token': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'connection_timeout': {'type': 'string', 'example': 'uint'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'network_view': {'type': 'string', 'example': 'string'}, 'publish_settings': {'type': 'string', 'example': 'ciscoise:publishsetting'}, 'secondary_address': {'type': 'string', 'example': 'string'}, 'subscribe_settings': {'type': 'string', 'example': 'ciscoise:subscribesetting'}, 'subscribing_member': {'type': 'string', 'example': 'string'}, 'type': {'type': 'string', 'example': "['TYPE_CISCO']"}, 'version': {'type': 'string', 'example': "['VERSION_1_3', 'VERSION_1_4', 'VERSION_2_0']"}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ciscoise_endpoint'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/ciscoise:endpoint/{ciscoise:endpoint_reference}': {'get': {'tags': ['ciscoise:endpoint'], 'parameters': [{'name': 'ciscoise:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ciscoise:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ciscoise_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['ciscoise:endpoint'], 'parameters': [{'name': 'ciscoise:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ciscoise:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['test_connection']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the ciscoise:endpoint resource', 'tags': ['ciscoise:endpoint'], 'parameters': [{'name': 'ciscoise:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ciscoise:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'address': {'type': 'string', 'example': 'string'}, 'bulk_download_certificate_token': {'type': 'string', 'example': 'string'}, 'client_certificate_token': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'connection_timeout': {'type': 'string', 'example': 'uint'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'network_view': {'type': 'string', 'example': 'string'}, 'publish_settings': {'type': 'string', 'example': 'ciscoise:publishsetting'}, 'secondary_address': {'type': 'string', 'example': 'string'}, 'subscribe_settings': {'type': 'string', 'example': 'ciscoise:subscribesetting'}, 'subscribing_member': {'type': 'string', 'example': 'string'}, 'type': {'type': 'string', 'example': "['TYPE_CISCO']"}, 'version': {'type': 'string', 'example': "['VERSION_1_3', 'VERSION_1_4', 'VERSION_2_0']"}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ciscoise_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the ciscoise:endpoint resource', 'tags': ['ciscoise:endpoint'], 'parameters': [{'name': 'ciscoise:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for ciscoise:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/dxl:endpoint': {'get': {'tags': ['dxl:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'log_level', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'outbound_member_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'vendor_identifier', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/dxl_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['dxl:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'brokers': {'type': 'string', 'example': "[{'host_name': 'string', 'address': 'string', 'port': 'uint', 'unique_id': 'string'}]"}, 'brokers_import_token': {'type': 'string', 'example': 'string'}, 'client_certificate_token': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'log_level': {'type': 'string', 'example': "['ERROR', 'WARNING', 'INFO', 'DEBUG']"}, 'name': {'type': 'string', 'example': 'string'}, 'outbound_member_type': {'type': 'string', 'example': "['MEMBER', 'GM']"}, 'outbound_members': {'type': 'string', 'example': 'string'}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'timeout': {'type': 'string', 'example': 'uint'}, 'topics': {'type': 'string', 'example': 'string'}, 'vendor_identifier': {'type': 'string', 'example': 'string'}, 'wapi_user_name': {'type': 'string', 'example': 'string'}, 'wapi_user_password': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/dxl_endpoint'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/dxl:endpoint/{dxl:endpoint_reference}': {'get': {'tags': ['dxl:endpoint'], 'parameters': [{'name': 'dxl:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for dxl:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/dxl_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['dxl:endpoint'], 'parameters': [{'name': 'dxl:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for dxl:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['clear_outbound_worker_log', 'test_broker_connectivity']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'test_broker_connectivity': {'type': 'string', 'example': {'broker': 'dxl:endpoint:broker', 'client_certificate_token': 'string', 'endpoint': 'string'}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the dxl:endpoint resource', 'tags': ['dxl:endpoint'], 'parameters': [{'name': 'dxl:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for dxl:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'brokers': {'type': 'string', 'example': "[{'host_name': 'string', 'address': 'string', 'port': 'uint', 'unique_id': 'string'}]"}, 'brokers_import_token': {'type': 'string', 'example': 'string'}, 'client_certificate_token': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'log_level': {'type': 'string', 'example': "['ERROR', 'WARNING', 'INFO', 'DEBUG']"}, 'name': {'type': 'string', 'example': 'string'}, 'outbound_member_type': {'type': 'string', 'example': "['MEMBER', 'GM']"}, 'outbound_members': {'type': 'string', 'example': 'string'}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'timeout': {'type': 'string', 'example': 'uint'}, 'topics': {'type': 'string', 'example': 'string'}, 'vendor_identifier': {'type': 'string', 'example': 'string'}, 'wapi_user_name': {'type': 'string', 'example': 'string'}, 'wapi_user_password': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/dxl_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the dxl:endpoint resource', 'tags': ['dxl:endpoint'], 'parameters': [{'name': 'dxl:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for dxl:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/notification:rest:endpoint': {'get': {'tags': ['notification:rest:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'log_level', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'outbound_member_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'uri', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'vendor_identifier', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rest_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['notification:rest:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'client_certificate_token': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'log_level': {'type': 'string', 'example': "['ERROR', 'WARNING', 'INFO', 'DEBUG']"}, 'name': {'type': 'string', 'example': 'string'}, 'outbound_member_type': {'type': 'string', 'example': "['MEMBER', 'GM']"}, 'outbound_members': {'type': 'string', 'example': 'string'}, 'password': {'type': 'string', 'example': 'string'}, 'server_cert_validation': {'type': 'string', 'example': "['NO_VALIDATION', 'CA_CERT', 'CA_CERT_NO_HOSTNAME']"}, 'sync_disabled': {'type': 'string', 'example': 'bool'}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'timeout': {'type': 'string', 'example': 'uint'}, 'uri': {'type': 'string', 'example': 'string'}, 'username': {'type': 'string', 'example': 'string'}, 'vendor_identifier': {'type': 'string', 'example': 'string'}, 'wapi_user_name': {'type': 'string', 'example': 'string'}, 'wapi_user_password': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rest_endpoint'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/notification:rest:endpoint/{notification:rest:endpoint_reference}': {'get': {'tags': ['notification:rest:endpoint'], 'parameters': [{'name': 'notification:rest:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rest:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rest_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['notification:rest:endpoint'], 'parameters': [{'name': 'notification:rest:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rest:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['clear_outbound_worker_log', 'test_connection']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the notification:rest:endpoint resource', 'tags': ['notification:rest:endpoint'], 'parameters': [{'name': 'notification:rest:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rest:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'client_certificate_token': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'log_level': {'type': 'string', 'example': "['ERROR', 'WARNING', 'INFO', 'DEBUG']"}, 'name': {'type': 'string', 'example': 'string'}, 'outbound_member_type': {'type': 'string', 'example': "['MEMBER', 'GM']"}, 'outbound_members': {'type': 'string', 'example': 'string'}, 'password': {'type': 'string', 'example': 'string'}, 'server_cert_validation': {'type': 'string', 'example': "['NO_VALIDATION', 'CA_CERT', 'CA_CERT_NO_HOSTNAME']"}, 'sync_disabled': {'type': 'string', 'example': 'bool'}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'timeout': {'type': 'string', 'example': 'uint'}, 'uri': {'type': 'string', 'example': 'string'}, 'username': {'type': 'string', 'example': 'string'}, 'vendor_identifier': {'type': 'string', 'example': 'string'}, 'wapi_user_name': {'type': 'string', 'example': 'string'}, 'wapi_user_password': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rest_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the notification:rest:endpoint resource', 'tags': ['notification:rest:endpoint'], 'parameters': [{'name': 'notification:rest:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rest:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/notification:rest:template': {'get': {'tags': ['notification:rest:template'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'outbound_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rest_template'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/notification:rest:template/{notification:rest:template_reference}': {'get': {'tags': ['notification:rest:template'], 'parameters': [{'name': 'notification:rest:template_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rest:template', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rest_template'}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the notification:rest:template resource', 'tags': ['notification:rest:template'], 'parameters': [{'name': 'notification:rest:template_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rest:template', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'comment': {'type': 'string', 'example': 'string'}, 'content': {'type': 'string', 'example': 'string'}, 'name': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rest_template'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the notification:rest:template resource', 'tags': ['notification:rest:template'], 'parameters': [{'name': 'notification:rest:template_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rest:template', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/notification:rule': {'get': {'tags': ['notification:rule'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'event_priority', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'event_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'notification_action', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'notification_target', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rule'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['notification:rule'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'all_members': {'type': 'string', 'example': 'bool'}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'enable_event_deduplication': {'type': 'string', 'example': 'bool'}, 'enable_event_deduplication_log': {'type': 'string', 'example': 'bool'}, 'event_deduplication_fields': {'type': 'string', 'example': "['DXL_TOPIC', 'DISCOVERER', 'DUID', 'IP_ADDRESS', 'MAC_ADDRESS', 'NETWORK', 'NETWORK_VIEW', 'QUERY_FQDN', 'QUERY_NAME', 'QUERY_TYPE', 'RPZ_POLICY', 'RPZ_TYPE', 'RULE_ACTION', 'RULE_CATEGORY', 'RULE_SEVERITY', 'RULE_SID', 'SOURCE_IP', 'SOURCE_PORT', 'OPERATION_TYPE']"}, 'event_deduplication_lookback_period': {'type': 'string', 'example': 'uint'}, 'event_priority': {'type': 'string', 'example': 'string'}, 'event_type': {'type': 'string', 'example': "['DXL_EVENT_SUBSCRIBER', 'DB_CHANGE_DNS_RECORD', 'DB_CHANGE_DNS_ZONE', 'DNS_RPZ', 'DHCP_LEASES', 'SECURITY_ADP', 'IPAM', 'ANALYTICS_DNS_TUNNEL', 'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV4', 'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV6', 'DB_CHANGE_DHCP_NETWORK_IPV4', 'DB_CHANGE_DHCP_NETWORK_IPV6', 'DB_CHANGE_DHCP_RANGE_IPV4', 'DB_CHANGE_DHCP_RANGE_IPV6', 'DB_CHANGE_DNS_HOST_ADDRESS_IPV4', 'DB_CHANGE_DNS_HOST_ADDRESS_IPV6', 'DB_CHANGE_DNS_DISCOVERY_DATA', 'SCHEDULE']"}, 'expression_list': {'type': 'string', 'example': "[{'op': 'enum', 'op1': 'enum', 'op1_type': 'enum', 'op2': 'string', 'op2_type': 'enum'}]"}, 'name': {'type': 'string', 'example': 'string'}, 'notification_action': {'type': 'string', 'example': "['CISCOISE_QUARANTINE', 'CISCOISE_PUBLISH', 'RESTAPI_TEMPLATE_INSTANCE']"}, 'notification_target': {'type': 'string', 'example': 'string'}, 'publish_settings': {'type': 'string', 'example': 'ciscoise:publishsetting'}, 'scheduled_event': {'type': 'string', 'example': 'setting:schedule'}, 'selected_members': {'type': 'string', 'example': 'string'}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'use_publish_settings': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rule'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/notification:rule/{notification:rule_reference}': {'get': {'tags': ['notification:rule'], 'parameters': [{'name': 'notification:rule_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rule', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rule'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['notification:rule'], 'parameters': [{'name': 'notification:rule_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rule', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['trigger_outbound']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'trigger_outbound': {'type': 'string', 'example': {'event_text': 'string'}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the notification:rule resource', 'tags': ['notification:rule'], 'parameters': [{'name': 'notification:rule_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rule', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'all_members': {'type': 'string', 'example': 'bool'}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'enable_event_deduplication': {'type': 'string', 'example': 'bool'}, 'enable_event_deduplication_log': {'type': 'string', 'example': 'bool'}, 'event_deduplication_fields': {'type': 'string', 'example': "['DXL_TOPIC', 'DISCOVERER', 'DUID', 'IP_ADDRESS', 'MAC_ADDRESS', 'NETWORK', 'NETWORK_VIEW', 'QUERY_FQDN', 'QUERY_NAME', 'QUERY_TYPE', 'RPZ_POLICY', 'RPZ_TYPE', 'RULE_ACTION', 'RULE_CATEGORY', 'RULE_SEVERITY', 'RULE_SID', 'SOURCE_IP', 'SOURCE_PORT', 'OPERATION_TYPE']"}, 'event_deduplication_lookback_period': {'type': 'string', 'example': 'uint'}, 'event_priority': {'type': 'string', 'example': 'string'}, 'event_type': {'type': 'string', 'example': "['DXL_EVENT_SUBSCRIBER', 'DB_CHANGE_DNS_RECORD', 'DB_CHANGE_DNS_ZONE', 'DNS_RPZ', 'DHCP_LEASES', 'SECURITY_ADP', 'IPAM', 'ANALYTICS_DNS_TUNNEL', 'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV4', 'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV6', 'DB_CHANGE_DHCP_NETWORK_IPV4', 'DB_CHANGE_DHCP_NETWORK_IPV6', 'DB_CHANGE_DHCP_RANGE_IPV4', 'DB_CHANGE_DHCP_RANGE_IPV6', 'DB_CHANGE_DNS_HOST_ADDRESS_IPV4', 'DB_CHANGE_DNS_HOST_ADDRESS_IPV6', 'DB_CHANGE_DNS_DISCOVERY_DATA', 'SCHEDULE']"}, 'expression_list': {'type': 'string', 'example': "[{'op': 'enum', 'op1': 'enum', 'op1_type': 'enum', 'op2': 'string', 'op2_type': 'enum'}]"}, 'notification_action': {'type': 'string', 'example': "['CISCOISE_QUARANTINE', 'CISCOISE_PUBLISH', 'RESTAPI_TEMPLATE_INSTANCE']"}, 'notification_target': {'type': 'string', 'example': 'string'}, 'publish_settings': {'type': 'string', 'example': 'ciscoise:publishsetting'}, 'scheduled_event': {'type': 'string', 'example': 'setting:schedule'}, 'selected_members': {'type': 'string', 'example': 'string'}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'use_publish_settings': {'type': 'string', 'example': 'bool'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/notification_rule'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the notification:rule resource', 'tags': ['notification:rule'], 'parameters': [{'name': 'notification:rule_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for notification:rule', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/pxgrid:endpoint': {'get': {'tags': ['pxgrid:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'address', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'comment', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'log_level', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'network_view', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'outbound_member_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'vendor_identifier', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/pxgrid_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['pxgrid:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'address': {'type': 'string', 'example': 'string'}, 'client_certificate_token': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'log_level': {'type': 'string', 'example': "['ERROR', 'WARNING', 'INFO', 'DEBUG']"}, 'name': {'type': 'string', 'example': 'string'}, 'network_view': {'type': 'string', 'example': 'string'}, 'outbound_member_type': {'type': 'string', 'example': "['MEMBER', 'GM']"}, 'outbound_members': {'type': 'string', 'example': 'string'}, 'publish_settings': {'type': 'string', 'example': 'ciscoise:publishsetting'}, 'subscribe_settings': {'type': 'string', 'example': 'ciscoise:subscribesetting'}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'timeout': {'type': 'string', 'example': 'uint'}, 'vendor_identifier': {'type': 'string', 'example': 'string'}, 'wapi_user_name': {'type': 'string', 'example': 'string'}, 'wapi_user_password': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/pxgrid_endpoint'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/pxgrid:endpoint/{pxgrid:endpoint_reference}': {'get': {'tags': ['pxgrid:endpoint'], 'parameters': [{'name': 'pxgrid:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for pxgrid:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/pxgrid_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['pxgrid:endpoint'], 'parameters': [{'name': 'pxgrid:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for pxgrid:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['test_connection']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the pxgrid:endpoint resource', 'tags': ['pxgrid:endpoint'], 'parameters': [{'name': 'pxgrid:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for pxgrid:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'address': {'type': 'string', 'example': 'string'}, 'client_certificate_token': {'type': 'string', 'example': 'string'}, 'comment': {'type': 'string', 'example': 'string'}, 'disable': {'type': 'string', 'example': 'bool'}, 'extattrs': {'type': 'string', 'example': 'extattr'}, 'log_level': {'type': 'string', 'example': "['ERROR', 'WARNING', 'INFO', 'DEBUG']"}, 'name': {'type': 'string', 'example': 'string'}, 'network_view': {'type': 'string', 'example': 'string'}, 'outbound_member_type': {'type': 'string', 'example': "['MEMBER', 'GM']"}, 'outbound_members': {'type': 'string', 'example': 'string'}, 'publish_settings': {'type': 'string', 'example': 'ciscoise:publishsetting'}, 'subscribe_settings': {'type': 'string', 'example': 'ciscoise:subscribesetting'}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'timeout': {'type': 'string', 'example': 'uint'}, 'vendor_identifier': {'type': 'string', 'example': 'string'}, 'wapi_user_name': {'type': 'string', 'example': 'string'}, 'wapi_user_password': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/pxgrid_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the pxgrid:endpoint resource', 'tags': ['pxgrid:endpoint'], 'parameters': [{'name': 'pxgrid:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for pxgrid:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/syslog:endpoint': {'get': {'tags': ['syslog:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_max_results', 'in': 'query', 'required': False, 'description': 'Enter the number of results to be fetched', 'schema': {'type': 'integer', 'minimum': 1}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': '_paging', 'in': 'query', 'required': False, 'description': 'Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}, {'name': ' _page_id', 'in': 'query', 'required': False, 'description': 'Enter the page ID for fetching next page', 'schema': {'type': 'string'}}, {'name': 'log_level', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'name', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'outbound_member_type', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}, {'name': 'vendor_identifier', 'in': 'query', 'required': False, 'description': 'Enter the value of the field', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/syslog_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'tags': ['syslog:endpoint'], 'parameters': [{'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'extattrs': {'type': 'string', 'example': 'extattr'}, 'log_level': {'type': 'string', 'example': "['ERROR', 'WARNING', 'INFO', 'DEBUG']"}, 'name': {'type': 'string', 'example': 'string'}, 'outbound_member_type': {'type': 'string', 'example': "['MEMBER', 'GM']"}, 'outbound_members': {'type': 'string', 'example': 'string'}, 'syslog_servers': {'type': 'string', 'example': "[{'address': 'string', 'connection_type': 'enum', 'port': 'uint', 'hostname': 'enum', 'format': 'enum', 'facility': 'enum', 'severity': 'enum', 'certificate': 'string', 'certificate_token': 'string'}]"}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'timeout': {'type': 'string', 'example': 'uint'}, 'vendor_identifier': {'type': 'string', 'example': 'string'}, 'wapi_user_name': {'type': 'string', 'example': 'string'}, 'wapi_user_password': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'201': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/syslog_endpoint'}}}}}, 'security': [{'basicAuth': []}]}}, '/wapi/v2.11.1/syslog:endpoint/{syslog:endpoint_reference}': {'get': {'tags': ['syslog:endpoint'], 'parameters': [{'name': 'syslog:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for syslog:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}, {'name': '_return_fields+', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma, this returns the required fields along with the default fields', 'schema': {'type': 'string'}}, {'name': '_return_as_object', 'in': 'query', 'required': False, 'description': 'Select 1 if result is required as a object', 'schema': {'type': 'integer', 'enum': [0, 1], 'default': 0}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/syslog_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'post': {'description': 'Function calls', 'tags': ['syslog:endpoint'], 'parameters': [{'name': 'syslog:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for syslog:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_function', 'in': 'query', 'required': True, 'description': 'Select the function', 'schema': {'type': 'string', 'enum': ['test_syslog_connection']}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'test_syslog_connection': {'type': 'string', 'example': {'syslog_server': 'syslog:endpoint:servers'}}}}}}}}, 'security': [{'basicAuth': []}]}, 'put': {'description': 'Update the syslog:endpoint resource', 'tags': ['syslog:endpoint'], 'parameters': [{'name': 'syslog:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for syslog:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}, {'name': '_return_fields', 'in': 'query', 'required': False, 'description': 'Enter the field names followed by comma', 'schema': {'type': 'string'}}], 'requestBody': {'description': 'Enter the request body here', 'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'extattrs': {'type': 'string', 'example': 'extattr'}, 'log_level': {'type': 'string', 'example': "['ERROR', 'WARNING', 'INFO', 'DEBUG']"}, 'name': {'type': 'string', 'example': 'string'}, 'outbound_member_type': {'type': 'string', 'example': "['MEMBER', 'GM']"}, 'outbound_members': {'type': 'string', 'example': 'string'}, 'syslog_servers': {'type': 'string', 'example': "[{'address': 'string', 'connection_type': 'enum', 'port': 'uint', 'hostname': 'enum', 'format': 'enum', 'facility': 'enum', 'severity': 'enum', 'certificate': 'string', 'certificate_token': 'string'}]"}, 'template_instance': {'type': 'string', 'example': 'notification:rest:templateinstance'}, 'timeout': {'type': 'string', 'example': 'uint'}, 'vendor_identifier': {'type': 'string', 'example': 'string'}, 'wapi_user_name': {'type': 'string', 'example': 'string'}, 'wapi_user_password': {'type': 'string', 'example': 'string'}}}}}}, 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/syslog_endpoint'}}}}}, 'security': [{'basicAuth': []}]}, 'delete': {'description': 'Delete the syslog:endpoint resource', 'tags': ['syslog:endpoint'], 'parameters': [{'name': 'syslog:endpoint_reference', 'in': 'path', 'required': True, 'description': 'Enter the reference for syslog:endpoint', 'schema': {'type': 'string', 'example': 'resourceID:resourceName'}}], 'responses': {'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'$ref': {'type': 'string', 'description': 'Reference of the deleted string'}}}}}}}, 'security': [{'basicAuth': []}]}}}, 'components': {'securitySchemes': {'basicAuth': {'type': 'http', 'scheme': 'basic'}}, 'schemas': {'allendpoints': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The Grid endpoint IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN).'}, 'comment': {'type': 'string', 'description': 'The Grid endpoint descriptive comment.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a Grid endpoint is disabled or not. When this is set to False, the Grid endpoint is enabled.'}, 'subscribing_member': {'type': 'string', 'description': 'The name of the Grid Member object that is serving Grid endpoint.'}, 'type': {'type': 'string', 'enum': ['TYPE_CISCO', 'TYPE_RESTAPI', 'TYPE_DXL'], 'description': 'The Grid endpoint type.'}, 'version': {'type': 'string', 'description': 'The Grid endpoint version.'}}}, 'ciscoise_endpoint': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The Cisco ISE endpoint IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN)'}, 'bulk_download_certificate_subject': {'type': 'string', 'description': 'The Cisco ISE bulk download certificate subject.'}, 'bulk_download_certificate_token': {'type': 'string', 'description': 'The token returned by the uploadinit function call in object fileop for Cisco ISE bulk download certificate.'}, 'bulk_download_certificate_valid_from': {'type': 'string', 'enum': ['timestamp'], 'description': 'The Cisco ISE bulk download certificate valid from.'}, 'bulk_download_certificate_valid_to': {'type': 'string', 'enum': ['timestamp'], 'description': 'The Cisco ISE bulk download certificate valid to.'}, 'client_certificate_subject': {'type': 'string', 'description': 'The Cisco ISE client certificate subject.'}, 'client_certificate_token': {'type': 'string', 'description': 'The token returned by the uploadinit function call in object fileop for Cisco ISE client certificate.'}, 'client_certificate_valid_from': {'type': 'string', 'enum': ['timestamp'], 'description': 'The Cisco ISE client certificate valid from.'}, 'client_certificate_valid_to': {'type': 'string', 'enum': ['timestamp'], 'description': 'The Cisco ISE client certificate valid to.'}, 'comment': {'type': 'string', 'description': 'The Cisco ISE endpoint descriptive comment.'}, 'connection_status': {'type': 'string', 'description': 'The Cisco ISE connection status.'}, 'connection_timeout': {'type': 'integer', 'example': 'integer', 'description': 'The Cisco ISE connection timeout.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a Cisco ISE endpoint is disabled or not. When this is set to False, the Cisco ISE endpoint is enabled.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'network_view': {'type': 'string', 'description': 'The Cisco ISE network view name.'}, 'publish_settings': {'type': 'string', 'enum': ['ciscoise:publishsetting'], 'description': 'The Cisco ISE publish settings.'}, 'resolved_address': {'type': 'string', 'description': 'The resolved IPv4 Address or IPv6 Address of the Cisco ISE endpoint.'}, 'resolved_secondary_address': {'type': 'string', 'description': 'The resolved IPv4 Address or IPv6 Address of the Cisco ISE endpoint.'}, 'secondary_address': {'type': 'string', 'description': 'The Cisco ISE endpoint secondary IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN)'}, 'subscribe_settings': {'type': 'string', 'enum': ['ciscoise:subscribesetting'], 'description': 'The Cisco ISE subscribe settings.'}, 'subscribing_member': {'type': 'string', 'description': 'The name of the Grid Member object that is serving Cisco ISE endpoint.'}, 'type': {'type': 'string', 'enum': ['TYPE_CISCO'], 'description': 'The Cisco ISE endpoint type.'}, 'version': {'type': 'string', 'enum': ['VERSION_1_3', 'VERSION_1_4', 'VERSION_2_0'], 'description': 'The Cisco ISE endpoint version.'}}}, 'dxl_endpoint': {'type': 'object', 'properties': {'brokers': {'type': 'string', 'enum': ['dxl:endpoint:broker'], 'description': 'The list of DXL endpoint brokers. Note that you cannot specify brokers and brokers_import_token at the same time.'}, 'brokers_import_token': {'type': 'string', 'description': 'The token returned by the uploadinit function call in object fileop for a DXL broker configuration file. Note that you cannot specify brokers and brokers_import_token at the same time.'}, 'client_certificate_subject': {'type': 'string', 'description': 'The client certificate subject of a DXL endpoint.'}, 'client_certificate_token': {'type': 'string', 'description': 'The token returned by the uploadinit function call in object fileop for a DXL endpoint client certificate.'}, 'client_certificate_valid_from': {'type': 'string', 'enum': ['timestamp'], 'description': 'The timestamp when client certificate for a DXL endpoint was created.'}, 'client_certificate_valid_to': {'type': 'string', 'enum': ['timestamp'], 'description': 'The timestamp when the client certificate for a DXL endpoint expires.'}, 'comment': {'type': 'string', 'description': 'The comment of a DXL endpoint.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a DXL endpoint is disabled.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'log_level': {'type': 'string', 'enum': ['ERROR', 'WARNING', 'INFO', 'DEBUG'], 'description': 'The log level for a DXL endpoint.'}, 'name': {'type': 'string', 'description': 'The name of a DXL endpoint.'}, 'outbound_member_type': {'type': 'string', 'enum': ['MEMBER', 'GM'], 'description': 'The outbound member that will generate events.'}, 'outbound_members': {'type': 'string', 'description': 'The list of members for outbound events.'}, 'template_instance': {'type': 'string', 'enum': ['notification:rest:templateinstance'], 'description': 'The DXL template instance. You cannot change the parameters of the DXL endpoint template instance.'}, 'timeout': {'type': 'integer', 'example': 'integer', 'description': 'The timeout of session management (in seconds).'}, 'topics': {'type': 'string', 'description': 'DXL topics'}, 'vendor_identifier': {'type': 'string', 'description': 'The vendor identifier.'}, 'wapi_user_name': {'type': 'string', 'description': 'The user name for WAPI integration.'}, 'wapi_user_password': {'type': 'string', 'description': 'The user password for WAPI integration.'}}}, 'notification_rest_endpoint': {'type': 'object', 'properties': {'client_certificate_subject': {'type': 'string', 'description': 'The client certificate subject of a notification REST endpoint.'}, 'client_certificate_token': {'type': 'string', 'description': 'The token returned by the uploadinit function call in object fileop for a notification REST endpoit client certificate.'}, 'client_certificate_valid_from': {'type': 'string', 'enum': ['timestamp'], 'description': 'The timestamp when client certificate for a notification REST endpoint was created.'}, 'client_certificate_valid_to': {'type': 'string', 'enum': ['timestamp'], 'description': 'The timestamp when client certificate for a notification REST endpoint expires.'}, 'comment': {'type': 'string', 'description': 'The comment of a notification REST endpoint.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'log_level': {'type': 'string', 'enum': ['ERROR', 'WARNING', 'INFO', 'DEBUG'], 'description': 'The log level for a notification REST endpoint.'}, 'name': {'type': 'string', 'description': 'The name of a notification REST endpoint.'}, 'outbound_member_type': {'type': 'string', 'enum': ['MEMBER', 'GM'], 'description': 'The outbound member which will generate an event.'}, 'outbound_members': {'type': 'string', 'description': 'The list of members for outbound events.'}, 'password': {'type': 'string', 'description': 'The password of the user that can log into a notification REST endpoint.'}, 'server_cert_validation': {'type': 'string', 'enum': ['NO_VALIDATION', 'CA_CERT', 'CA_CERT_NO_HOSTNAME'], 'description': 'The server certificate validation type.'}, 'sync_disabled': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines if the sync process is disabled for a notification REST endpoint.'}, 'template_instance': {'type': 'string', 'enum': ['notification:rest:templateinstance'], 'description': 'The notification REST template instance. The parameters of REST API endpoint template instance are prohibited to change.'}, 'timeout': {'type': 'integer', 'example': 'integer', 'description': 'The timeout of session management (in seconds).'}, 'uri': {'type': 'string', 'description': 'The URI of a notification REST endpoint.'}, 'username': {'type': 'string', 'description': 'The username of the user that can log into a notification REST endpoint.'}, 'vendor_identifier': {'type': 'string', 'description': 'The vendor identifier.'}, 'wapi_user_name': {'type': 'string', 'description': 'The user name for WAPI integration.'}, 'wapi_user_password': {'type': 'string', 'description': 'The user password for WAPI integration.'}}}, 'notification_rest_template': {'type': 'object', 'properties': {'action_name': {'type': 'string', 'description': 'The action name.'}, 'added_on': {'type': 'string', 'enum': ['timestamp'], 'description': 'The time stamp when a template was added.'}, 'comment': {'type': 'string', 'description': 'The comment for this REST API template.'}, 'content': {'type': 'string', 'description': 'The JSON formatted content of a template. The data passed by content creates parameters for a template.'}, 'event_type': {'type': 'string', 'enum': ['DNS_RPZ', 'DHCP_LEASE', 'ANALYTICS_DNS_TUNNEL', 'SECURITY_ADP', 'SCHEDULE', 'SESSION', 'DXL_EVENT_SUBSCRIBER', 'DB_CHANGE_DHCP_NETWORK_IPV4', 'DB_CHANGE_DHCP_NETWORK_IPV6', 'DB_CHANGE_DHCP_RANGE_IPV4', 'DB_CHANGE_DHCP_RANGE_IPV6', 'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV4', 'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV6', 'DB_CHANGE_DNS_HOST_ADDRESS_IPV4', 'DB_CHANGE_DNS_HOST_ADDRESS_IPV6', 'DB_CHANGE_DNS_DISCOVERY_DATA', 'DB_CHANGE_DNS_RECORD', 'DB_CHANGE_DNS_ZONE'], 'description': 'The event type.'}, 'name': {'type': 'string', 'description': 'The name of a notification REST template.'}, 'outbound_type': {'type': 'string', 'enum': ['DXL', 'REST', 'SYSLOG'], 'description': 'The outbound type for the template.'}, 'parameters': {'type': 'string', 'enum': ['notification:rest:templateparameter'], 'description': 'The notification REST template parameters.'}, 'template_type': {'type': 'string', 'enum': ['REST_ENDPOINT', 'REST_EVENT'], 'description': 'The template type.'}, 'vendor_identifier': {'type': 'string', 'description': 'The vendor identifier.'}}}, 'notification_rule': {'type': 'object', 'properties': {'all_members': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the notification rule is applied on all members or not. When this is set to False, the notification rule is applied only on selected_members.'}, 'comment': {'type': 'string', 'description': 'The notification rule descriptive comment.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a notification rule is disabled or not. When this is set to False, the notification rule is enabled.'}, 'enable_event_deduplication': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the notification rule for event deduplication is enabled. Note that to enable event deduplication, you must set at least one deduplication field.'}, 'enable_event_deduplication_log': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether the notification rule for the event deduplication syslog is enabled.'}, 'event_deduplication_fields': {'type': 'string', 'enum': ['DXL_TOPIC', 'DISCOVERER', 'DUID', 'IP_ADDRESS', 'MAC_ADDRESS', 'NETWORK', 'NETWORK_VIEW', 'QUERY_FQDN', 'QUERY_NAME', 'QUERY_TYPE', 'RPZ_POLICY', 'RPZ_TYPE', 'RULE_ACTION', 'RULE_CATEGORY', 'RULE_SEVERITY', 'RULE_SID', 'SOURCE_IP', 'SOURCE_PORT', 'OPERATION_TYPE'], 'description': 'The list of fields that must be used in the notification rule for event deduplication.'}, 'event_deduplication_lookback_period': {'type': 'integer', 'example': 'integer', 'description': 'The lookback period for the notification rule for event deduplication.'}, 'event_priority': {'type': 'string', 'description': 'Event priority.'}, 'event_type': {'type': 'string', 'enum': ['DXL_EVENT_SUBSCRIBER', 'DB_CHANGE_DNS_RECORD', 'DB_CHANGE_DNS_ZONE', 'DNS_RPZ', 'DHCP_LEASES', 'SECURITY_ADP', 'IPAM', 'ANALYTICS_DNS_TUNNEL', 'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV4', 'DB_CHANGE_DHCP_FIXED_ADDRESS_IPV6', 'DB_CHANGE_DHCP_NETWORK_IPV4', 'DB_CHANGE_DHCP_NETWORK_IPV6', 'DB_CHANGE_DHCP_RANGE_IPV4', 'DB_CHANGE_DHCP_RANGE_IPV6', 'DB_CHANGE_DNS_HOST_ADDRESS_IPV4', 'DB_CHANGE_DNS_HOST_ADDRESS_IPV6', 'DB_CHANGE_DNS_DISCOVERY_DATA', 'SCHEDULE'], 'description': 'The notification rule event type.'}, 'expression_list': {'type': 'string', 'enum': ['notification:ruleexpressionop'], 'description': 'The notification rule expression list.'}, 'name': {'type': 'string', 'description': 'The notification rule name.'}, 'notification_action': {'type': 'string', 'enum': ['CISCOISE_QUARANTINE', 'CISCOISE_PUBLISH', 'RESTAPI_TEMPLATE_INSTANCE'], 'description': 'The notification rule action is applied if expression list evaluates to True.'}, 'notification_target': {'type': 'string', 'description': 'The notification target.'}, 'publish_settings': {'type': 'string', 'enum': ['ciscoise:publishsetting'], 'description': 'The publish settings.'}, 'scheduled_event': {'type': 'string', 'enum': ['setting:schedule'], 'description': 'Schedule setting that must be specified if event_type is SCHEDULE.'}, 'selected_members': {'type': 'string', 'description': 'The list of the members on which the notification rule is applied.'}, 'template_instance': {'type': 'string', 'enum': ['notification:rest:templateinstance'], 'description': 'The notification REST template instance.'}, 'use_publish_settings': {'type': 'boolean', 'example': 'boolean', 'description': 'Use flag for: publish_settings'}}}, 'pxgrid_endpoint': {'type': 'object', 'properties': {'address': {'type': 'string', 'description': 'The pxgrid endpoint IPv4 Address or IPv6 Address or Fully-Qualified Domain Name (FQDN)'}, 'client_certificate_subject': {'type': 'string', 'description': 'The Cisco ISE client certificate subject.'}, 'client_certificate_token': {'type': 'string', 'description': 'The token returned by the uploadinit function call in object fileop for Cisco ISE client certificate.'}, 'client_certificate_valid_from': {'type': 'string', 'enum': ['timestamp'], 'description': 'The pxgrid endpoint client certificate valid from.'}, 'client_certificate_valid_to': {'type': 'string', 'enum': ['timestamp'], 'description': 'The pxgrid endpoint client certificate valid to.'}, 'comment': {'type': 'string', 'description': 'The Cisco ISE endpoint descriptive comment.'}, 'disable': {'type': 'boolean', 'example': 'boolean', 'description': 'Determines whether a Cisco ISE endpoint is disabled or not. When this is set to False, the Cisco ISE endpoint is enabled.'}, 'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'log_level': {'type': 'string', 'enum': ['ERROR', 'WARNING', 'INFO', 'DEBUG'], 'description': 'The log level for a notification pxgrid endpoint.'}, 'name': {'type': 'string', 'description': 'The name of the pxgrid endpoint.'}, 'network_view': {'type': 'string', 'description': 'The pxgrid network view name.'}, 'outbound_member_type': {'type': 'string', 'enum': ['MEMBER', 'GM'], 'description': 'The outbound member that will generate events.'}, 'outbound_members': {'type': 'string', 'description': 'The list of members for outbound events.'}, 'publish_settings': {'type': 'string', 'enum': ['ciscoise:publishsetting'], 'description': 'The Cisco ISE publish settings.'}, 'subscribe_settings': {'type': 'string', 'enum': ['ciscoise:subscribesetting'], 'description': 'The Cisco ISE subscribe settings.'}, 'template_instance': {'type': 'string', 'enum': ['notification:rest:templateinstance'], 'description': 'The Pxgrid template instance. You cannot change the parameters of the pxgrid endpoint template instance.'}, 'timeout': {'type': 'integer', 'example': 'integer', 'description': 'The timeout of session management (in seconds).'}, 'vendor_identifier': {'type': 'string', 'description': 'The vendor identifier.'}, 'wapi_user_name': {'type': 'string', 'description': 'The user name for WAPI integration.'}, 'wapi_user_password': {'type': 'string', 'description': 'The user password for WAPI integration.'}}}, 'syslog_endpoint': {'type': 'object', 'properties': {'extattrs': {'type': 'string', 'enum': ['extattr'], 'description': 'Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}.'}, 'log_level': {'type': 'string', 'enum': ['ERROR', 'WARNING', 'INFO', 'DEBUG'], 'description': 'The log level for a notification REST endpoint.'}, 'name': {'type': 'string', 'description': 'The name of a Syslog endpoint.'}, 'outbound_member_type': {'type': 'string', 'enum': ['MEMBER', 'GM'], 'description': 'The outbound member that will generate events.'}, 'outbound_members': {'type': 'string', 'description': 'The list of members for outbound events.'}, 'syslog_servers': {'type': 'string', 'enum': ['syslog:endpoint:servers'], 'description': 'List of syslog servers'}, 'template_instance': {'type': 'string', 'enum': ['notification:rest:templateinstance'], 'description': 'The Syslog template instance. You cannot change the parameters of the Syslog endpoint template instance.'}, 'timeout': {'type': 'integer', 'example': 'integer', 'description': 'The timeout of session management (in seconds).'}, 'vendor_identifier': {'type': 'string', 'description': 'The vendor identifier.'}, 'wapi_user_name': {'type': 'string', 'description': 'The user name for WAPI integration.'}, 'wapi_user_password': {'type': 'string', 'description': 'The user password for WAPI integration.'}}}}}}