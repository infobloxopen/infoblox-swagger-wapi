{
  "info": {
    "version": "v2.9", 
    "contact": {
      "name": "Krishna", 
      "email": "kvasudevan@infoblox.com"
    }, 
    "description": "Sample WAPI Documentation", 
    "license": {
      "url": "https://www.infoblox.com/", 
      "name": "Infoblox License"
    }, 
    "title": "Infoblox WAPI"
  }, 
  "paths": {
    "/wapi/v2.9/upgradestatus": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradestatus"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "member", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "subelement_type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "upgrade_group", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradestatus"
        ]
      }
    }, 
    "/wapi/v2.9/grid:threatanalytics/{grid:threatanalytics_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_threatanalytics"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:threatanalytics", 
            "required": true, 
            "name": "grid:threatanalytics_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:threatanalytics"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "module_update_policy": {
                    "type": "string", 
                    "example": "[u'AUTOMATIC', u'MANUAL']"
                  }, 
                  "enable_auto_download": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_scheduled_download": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "scheduled_download": {
                    "type": "string", 
                    "example": "setting:schedule"
                  }, 
                  "dns_tunnel_black_list_rpz_zones": {
                    "type": "string", 
                    "example": "zone_rp"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:threatanalytics resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "set_last_uploaded_threat_analytics_moduleset": {
                      "type": "string", 
                      "example": {
                        "moduleset_token": "string"
                      }
                    }, 
                    "move_blacklist_rpz_to_white_list": {
                      "type": "string", 
                      "example": {
                        "rpz_cnames": "record:rpz:cname"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:threatanalytics", 
            "required": true, 
            "name": "grid:threatanalytics_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "download_threat_analytics_moduleset_update", 
                "move_blacklist_rpz_to_white_list", 
                "set_last_uploaded_threat_analytics_moduleset", 
                "test_threat_analytics_server_connectivity", 
                "update_threat_analytics_moduleset"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:threatanalytics"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_threatanalytics"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:threatanalytics", 
            "required": true, 
            "name": "grid:threatanalytics_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:threatanalytics"
        ]
      }
    }, 
    "/wapi/v2.9/grid:license_pool/{grid:license_pool_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_license_pool"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:license_pool", 
            "required": true, 
            "name": "grid:license_pool_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:license_pool"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:group:order/{grid:servicerestart:group:order_reference}": {}, 
    "/wapi/v2.9/db_objects": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/db_objects"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "db_objects"
        ]
      }
    }, 
    "/wapi/v2.9/member:threatanalytics": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_threatanalytics"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "host_name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "ipv4_address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "ipv6_address", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:threatanalytics"
        ]
      }
    }, 
    "/wapi/v2.9/mastergrid": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mastergrid"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "port", 
            "in": "query"
          }
        ], 
        "tags": [
          "mastergrid"
        ]
      }
    }, 
    "/wapi/v2.9/grid": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:request:changedobject/{grid:servicerestart:request:changedobject_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_request_changedobject"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:servicerestart:request:changedobject", 
            "required": true, 
            "name": "grid:servicerestart:request:changedobject_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:request:changedobject"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi:tenant": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_tenant"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:tenant"
        ]
      }
    }, 
    "/wapi/v2.9/grid:threatprotection/{grid:threatprotection_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_threatprotection"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:threatprotection", 
            "required": true, 
            "name": "grid:threatprotection_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:threatprotection"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "rule_update_policy": {
                    "type": "string", 
                    "example": "[u'AUTOMATIC', u'MANUAL']"
                  }, 
                  "nat_rules": {
                    "type": "string", 
                    "example": "[{u'rule_type': u'enum', u'network': u'string', u'end_address': u'string', u'start_address': u'string', u'nat_ports': u'threatprotection:natport', u'address': u'string', u'cidr': u'uint'}]"
                  }, 
                  "outbound_settings": {
                    "type": "string", 
                    "example": "setting:atpoutbound"
                  }, 
                  "events_per_second_per_rule": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "enable_auto_download": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_nat_rules": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "scheduled_download": {
                    "type": "string", 
                    "example": "setting:schedule"
                  }, 
                  "disable_multiple_dns_tcp_request": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "current_ruleset": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enable_scheduled_download": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:threatprotection resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "atp_object_reset": {
                      "type": "string", 
                      "example": {
                        "delete_custom_rules": "bool", 
                        "atp_object": "string"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:threatprotection", 
            "required": true, 
            "name": "grid:threatprotection_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "atp_object_reset", 
                "test_atp_server_connectivity"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:threatprotection"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_threatprotection"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:threatprotection", 
            "required": true, 
            "name": "grid:threatprotection_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:threatprotection"
        ]
      }
    }, 
    "/wapi/v2.9/member:threatanalytics/{member:threatanalytics_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_threatanalytics"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:threatanalytics", 
            "required": true, 
            "name": "member:threatanalytics_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:threatanalytics"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "enable_service": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the member:threatanalytics resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_threatanalytics"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:threatanalytics", 
            "required": true, 
            "name": "member:threatanalytics_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:threatanalytics"
        ]
      }
    }, 
    "/wapi/v2.9/grid:member:cloudapi": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_member_cloudapi"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:member:cloudapi"
        ]
      }
    }, 
    "/wapi/v2.9/member:parentalcontrol": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_parentalcontrol"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:parentalcontrol"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:group:order": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "groups": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_group_order"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:group:order"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:status": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_status"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "parent", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:status"
        ]
      }
    }, 
    "/wapi/v2.9/grid:license_pool": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_license_pool"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "key", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "limit", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "model", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:license_pool"
        ]
      }
    }, 
    "/wapi/v2.9/grid:dashboard": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_dashboard"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:dashboard"
        ]
      }
    }, 
    "/wapi/v2.9/tftpfiledir/{tftpfiledir_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tftpfiledir"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for tftpfiledir", 
            "required": true, 
            "name": "tftpfiledir_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "tftpfiledir"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vtftp_dir_members": {
                    "type": "string", 
                    "example": "[{u'start_address': u'string', u'network': u'string', u'end_address': u'string', u'member': u'string', u'address': u'string', u'ip_type': u'enum', u'cidr': u'uint'}]"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the tftpfiledir resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the tftpfiledir resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for tftpfiledir", 
            "required": true, 
            "name": "tftpfiledir_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "tftpfiledir"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tftpfiledir"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for tftpfiledir", 
            "required": true, 
            "name": "tftpfiledir_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "tftpfiledir"
        ]
      }
    }, 
    "/wapi/v2.9/csvimporttask/{csvimporttask_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/csvimporttask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for csvimporttask", 
            "required": true, 
            "name": "csvimporttask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "csvimporttask"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "action": {
                    "type": "string", 
                    "example": "[u'START', u'SAVE']"
                  }, 
                  "update_method": {
                    "type": "string", 
                    "example": "[u'MERGE', u'OVERRIDE']"
                  }, 
                  "operation": {
                    "type": "string", 
                    "example": "[u'INSERT', u'UPDATE', u'REPLACE', u'DELETE', u'CUSTOM']"
                  }, 
                  "on_error": {
                    "type": "string", 
                    "example": "[u'CONTINUE', u'STOP']"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the csvimporttask resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {}
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for csvimporttask", 
            "required": true, 
            "name": "csvimporttask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "stop"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "csvimporttask"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/csvimporttask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for csvimporttask", 
            "required": true, 
            "name": "csvimporttask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "csvimporttask"
        ]
      }
    }, 
    "/wapi/v2.9/mastergrid/{mastergrid_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mastergrid"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for mastergrid", 
            "required": true, 
            "name": "mastergrid_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "mastergrid"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "port": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "address": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the mastergrid resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mastergrid"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for mastergrid", 
            "required": true, 
            "name": "mastergrid_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "mastergrid"
        ]
      }
    }, 
    "/wapi/v2.9/restartservicestatus/{restartservicestatus_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restartservicestatus"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for restartservicestatus", 
            "required": true, 
            "name": "restartservicestatus_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "restartservicestatus"
        ]
      }
    }, 
    "/wapi/v2.9/grid:member:cloudapi/{grid:member:cloudapi_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_member_cloudapi"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:member:cloudapi", 
            "required": true, 
            "name": "grid:member:cloudapi_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:member:cloudapi"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "allow_api_admins": {
                    "type": "string", 
                    "example": "[u'NONE', u'LIST', u'ALL']"
                  }, 
                  "gateway_config": {
                    "type": "string", 
                    "example": "grid:cloudapi:gateway:config"
                  }, 
                  "allowed_api_admins": {
                    "type": "string", 
                    "example": "[{u'is_remote': u'bool', u'remote_admin': u'string', u'local_admin': u'string'}]"
                  }, 
                  "enable_service": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:member:cloudapi resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_member_cloudapi"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:member:cloudapi", 
            "required": true, 
            "name": "grid:member:cloudapi_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:member:cloudapi"
        ]
      }
    }, 
    "/wapi/v2.9/grid:x509certificate": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_x509certificate"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "issuer", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "serial", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "subject", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "valid_not_after", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "valid_not_before", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:x509certificate"
        ]
      }
    }, 
    "/wapi/v2.9/grid:x509certificate/{grid:x509certificate_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_x509certificate"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:x509certificate", 
            "required": true, 
            "name": "grid:x509certificate_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:x509certificate"
        ]
      }
    }, 
    "/wapi/v2.9/upgradegroup/{upgradegroup_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradegroup"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for upgradegroup", 
            "required": true, 
            "name": "upgradegroup_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradegroup"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "distribution_policy": {
                    "type": "string", 
                    "example": "[u'SIMULTANEOUSLY', u'SEQUENTIALLY']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "upgrade_policy": {
                    "type": "string", 
                    "example": "[u'SIMULTANEOUSLY', u'SEQUENTIALLY']"
                  }, 
                  "distribution_time": {
                    "type": "string", 
                    "example": "timestamp"
                  }, 
                  "members": {
                    "type": "string", 
                    "example": "[{u'member': u'string', u'time_zone': u'enum'}]"
                  }, 
                  "upgrade_dependent_group": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "distribution_dependent_group": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "upgrade_time": {
                    "type": "string", 
                    "example": "timestamp"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the upgradegroup resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the upgradegroup resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for upgradegroup", 
            "required": true, 
            "name": "upgradegroup_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "upgradegroup"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradegroup"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for upgradegroup", 
            "required": true, 
            "name": "upgradegroup_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradegroup"
        ]
      }
    }, 
    "/wapi/v2.9/grid:threatanalytics": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_threatanalytics"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:threatanalytics"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi:vm/{grid:cloudapi:vm_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_vm"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:cloudapi:vm", 
            "required": true, 
            "name": "grid:cloudapi:vm_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:vm"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "operating_system": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vm_type": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "kernel_id": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:cloudapi:vm resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_vm"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:cloudapi:vm", 
            "required": true, 
            "name": "grid:cloudapi:vm_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:vm"
        ]
      }
    }, 
    "/wapi/v2.9/member:license": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_license"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "hwid", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "key", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "kind", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "limit", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:license"
        ]
      }
    }, 
    "/wapi/v2.9/grid:filedistribution": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_filedistribution"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:filedistribution"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi:vmaddress": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_vmaddress"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "mac_address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vm_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vm_name", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:vmaddress"
        ]
      }
    }, 
    "/wapi/v2.9/grid:license_pool_container": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_license_pool_container"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:license_pool_container"
        ]
      }
    }, 
    "/wapi/v2.9/rir:organization/{rir:organization_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rir_organization"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for rir:organization", 
            "required": true, 
            "name": "rir:organization_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "rir:organization"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "maintainer": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "rir": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "sender_email": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "id": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the rir:organization resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the rir:organization resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for rir:organization", 
            "required": true, 
            "name": "rir:organization_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "rir:organization"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rir_organization"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for rir:organization", 
            "required": true, 
            "name": "rir:organization_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "rir:organization"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:status/{grid:servicerestart:status_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_status"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:servicerestart:status", 
            "required": true, 
            "name": "grid:servicerestart:status_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:status"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:request": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_request"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "group", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "member", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:request"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi"
        ]
      }
    }, 
    "/wapi/v2.9/member:threatprotection/{member:threatprotection_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_threatprotection"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:threatprotection", 
            "required": true, 
            "name": "member:threatprotection_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:threatprotection"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "profile": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "use_events_per_second_per_rule": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "nat_rules": {
                    "type": "string", 
                    "example": "[{u'rule_type': u'enum', u'network': u'string', u'end_address': u'string', u'start_address': u'string', u'nat_ports': u'threatprotection:natport', u'address': u'string', u'cidr': u'uint'}]"
                  }, 
                  "outbound_settings": {
                    "type": "string", 
                    "example": "setting:atpoutbound"
                  }, 
                  "use_enable_nat_rules": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "events_per_second_per_rule": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "enable_nat_rules": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_outbound_settings": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "disable_multiple_dns_tcp_request": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "current_ruleset": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "use_disable_multiple_dns_tcp_request": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_current_ruleset": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_service": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the member:threatprotection resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_threatprotection"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:threatprotection", 
            "required": true, 
            "name": "member:threatprotection_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:threatprotection"
        ]
      }
    }, 
    "/wapi/v2.9/deleted_objects": {}, 
    "/wapi/v2.9/upgradeschedule/{upgradeschedule_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradeschedule"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for upgradeschedule", 
            "required": true, 
            "name": "upgradeschedule_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradeschedule"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "active": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "start_time": {
                    "type": "string", 
                    "example": "timestamp"
                  }, 
                  "upgrade_groups": {
                    "type": "string", 
                    "example": "[{u'name': u'string', u'time_zone': u'enum', u'distribution_time': u'timestamp', u'upgrade_dependent_group': u'string', u'distribution_dependent_group': u'string', u'upgrade_time': u'timestamp'}]"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the upgradeschedule resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradeschedule"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for upgradeschedule", 
            "required": true, 
            "name": "upgradeschedule_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradeschedule"
        ]
      }
    }, 
    "/wapi/v2.9/member": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "lcd_input": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "syslog_servers": {
                    "type": "string", 
                    "example": "[{u'connection_type': u'enum', u'message_source': u'enum', u'message_node_id': u'enum', u'severity': u'enum', u'certificate': u'string', u'local_interface': u'enum', u'only_category_list': u'bool', u'category_list': u'enum', u'address': u'string', u'port': u'uint', u'certificate_token': u'string'}]"
                  }, 
                  "vpn_mtu": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "trap_notifications": {
                    "type": "string", 
                    "example": "[{u'enable_trap': u'bool', u'enable_email': u'bool', u'trap_type': u'enum'}]"
                  }, 
                  "use_dns_resolver_setting": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_remote_console_access_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "time_zone": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enable_ro_api_access": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "node_info": {
                    "type": "string", 
                    "example": "[{u'mgmt_physical_setting': u'physicalportsetting', u'lan_ha_port_setting': u'lanhaportsetting', u'hwplatform': u'enum', u'hwtype': u'string', u'v6_mgmt_network_setting': u'ipv6setting', u'nat_external_ip': u'string', u'lan2_physical_setting': u'physicalportsetting', u'hwid': u'string', u'hwmodel': u'string', u'service_status': u'servicestatus', u'paid_nios': u'bool', u'physical_oid': u'string', u'ha_status': u'enum', u'mgmt_network_setting': u'setting:network'}]"
                  }, 
                  "syslog_proxy_setting": {
                    "type": "string", 
                    "example": "setting:syslogproxy"
                  }, 
                  "enable_lom": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_threshold_traps": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "support_access_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_ha": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_support_access_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "config_addr_type": {
                    "type": "string", 
                    "example": "[u'IPV4', u'IPV6', u'BOTH']"
                  }, 
                  "bgp_as": {
                    "type": "string", 
                    "example": "[{u'neighbors': u'bgpneighbor', u'as': u'uint', u'holddown': u'uint', u'link_detect': u'bool', u'keepalive': u'uint'}]"
                  }, 
                  "use_lcd_input": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "platform": {
                    "type": "string", 
                    "example": "[u'INFOBLOX', u'RIVERBED', u'CISCO', u'IBVM', u'VNIOS']"
                  }, 
                  "lom_users": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'password': u'string', u'role': u'enum', u'name': u'string', u'disable': u'bool'}]"
                  }, 
                  "vip_setting": {
                    "type": "string", 
                    "example": "setting:network"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "email_setting": {
                    "type": "string", 
                    "example": "setting:email"
                  }, 
                  "lan2_enabled": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "remote_console_access_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "nat_setting": {
                    "type": "string", 
                    "example": "natsetting"
                  }, 
                  "router_id": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "use_enable_member_redirect": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "lan2_port_setting": {
                    "type": "string", 
                    "example": "lan2portsetting"
                  }, 
                  "use_dscp": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "member_service_communication": {
                    "type": "string", 
                    "example": "[{u'type': u'enum', u'option': u'enum', u'service': u'enum'}]"
                  }, 
                  "ntp_setting": {
                    "type": "string", 
                    "example": "member:ntp"
                  }, 
                  "mgmt_port_setting": {
                    "type": "string", 
                    "example": "mgmtportsetting"
                  }, 
                  "upgrade_group": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "lom_network_config": {
                    "type": "string", 
                    "example": "[{u'subnet_mask': u'string', u'is_lom_capable': u'bool', u'gateway': u'string', u'address': u'string'}]"
                  }, 
                  "use_external_syslog_backup_servers": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "additional_ip_list": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'enable_ospf': u'bool', u'enable_bgp': u'bool', u'ipv4_network_setting': u'setting:network', u'anycast': u'bool', u'ipv6_network_setting': u'ipv6setting', u'interface': u'enum'}]"
                  }, 
                  "threshold_traps": {
                    "type": "string", 
                    "example": "[{u'trap_reset': u'uint', u'trap_trigger': u'uint', u'trap_type': u'enum'}]"
                  }, 
                  "dscp": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "use_enable_lom": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "external_syslog_backup_servers": {
                    "type": "string", 
                    "example": "[{u'username': u'string', u'enable': u'bool', u'protocol': u'enum', u'directory_path': u'string', u'address': u'string', u'password': u'string', u'port': u'uint'}]"
                  }, 
                  "use_email_setting": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_snmp_setting": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "passive_ha_arp_enabled": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "dns_resolver_setting": {
                    "type": "string", 
                    "example": "setting:dnsresolver"
                  }, 
                  "master_candidate": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "snmp_setting": {
                    "type": "string", 
                    "example": "setting:snmp"
                  }, 
                  "static_routes": {
                    "type": "string", 
                    "example": "[{u'use_dscp': u'bool', u'primary': u'bool', u'dscp': u'uint', u'subnet_mask': u'string', u'address': u'string', u'gateway': u'string', u'vlan_id': u'uint'}]"
                  }, 
                  "ipv6_static_routes": {
                    "type": "string", 
                    "example": "[{u'auto_router_config_enabled': u'bool', u'use_dscp': u'bool', u'cidr_prefix': u'uint', u'enabled': u'bool', u'primary': u'bool', u'dscp': u'uint', u'virtual_ip': u'string', u'gateway': u'string', u'vlan_id': u'uint'}]"
                  }, 
                  "use_trap_notifications": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_member_redirect": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "preserve_if_owns_delegation": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "ospf_list": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'area_id': u'string', u'enable_bfd': u'bool', u'bfd_template': u'string', u'retransmit_interval': u'uint', u'dead_interval': u'uint', u'auto_calc_cost_enabled': u'bool', u'area_type': u'enum', u'authentication_type': u'enum', u'cost': u'uint', u'advertise_interface_vlan': u'string', u'hello_interval': u'uint', u'interface': u'enum', u'key_id': u'uint', u'authentication_key': u'string', u'is_ipv4': u'bool', u'transmit_delay': u'uint'}]"
                  }, 
                  "external_syslog_server_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_time_zone": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_syslog_proxy_setting": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "syslog_size": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "host_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "ipv6_setting": {
                    "type": "string", 
                    "example": "ipv6setting"
                  }, 
                  "pre_provisioning": {
                    "type": "string", 
                    "example": "preprovision"
                  }, 
                  "use_v4_vrrp": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "service_type_configuration": {
                    "type": "string", 
                    "example": "[u'ALL_V4', u'ALL_V6', u'CUSTOM']"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "config_addr_type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "enable_ha", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "enable_ro_api_access", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "host_name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "master_candidate", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "platform", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "preserve_if_owns_delegation", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "router_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "service_type_configuration", 
            "in": "query"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi:cloudstatistics/{grid:cloudapi:cloudstatistics_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_cloudstatistics"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:cloudapi:cloudstatistics", 
            "required": true, 
            "name": "grid:cloudapi:cloudstatistics_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:cloudstatistics"
        ]
      }
    }, 
    "/wapi/v2.9/namedacl": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "access_list": {
                    "type": "string", 
                    "example": "[{u'permission': u'enum', u'tsig_key_alg': u'enum', u'use_tsig_key_name': u'bool', u'tsig_key': u'string', u'tsig_key_name': u'string', u'address': u'string'}]"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/namedacl"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "namedacl"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/namedacl"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "namedacl"
        ]
      }
    }, 
    "/wapi/v2.9/natgroup": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/natgroup"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "natgroup"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/natgroup"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "natgroup"
        ]
      }
    }, 
    "/wapi/v2.9/grid:maxminddbinfo": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_maxminddbinfo"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "topology_type", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:maxminddbinfo"
        ]
      }
    }, 
    "/wapi/v2.9/csvimporttask": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/csvimporttask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "import_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "csvimporttask"
        ]
      }
    }, 
    "/wapi/v2.9/grid:filedistribution/{grid:filedistribution_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_filedistribution"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:filedistribution", 
            "required": true, 
            "name": "grid:filedistribution_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:filedistribution"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "enable_anonymous_ftp": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "allow_uploads": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "storage_limit": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "backup_storage": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:filedistribution resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_filedistribution"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:filedistribution", 
            "required": true, 
            "name": "grid:filedistribution_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:filedistribution"
        ]
      }
    }, 
    "/wapi/v2.9/license:gridwide": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/license_gridwide"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "key", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "limit", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }
        ], 
        "tags": [
          "license:gridwide"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi:vm": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_vm"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "elastic_ip_address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "primary_mac_address", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:vm"
        ]
      }
    }, 
    "/wapi/v2.9/member:parentalcontrol/{member:parentalcontrol_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_parentalcontrol"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:parentalcontrol", 
            "required": true, 
            "name": "member:parentalcontrol_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:parentalcontrol"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "enable_service": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the member:parentalcontrol resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_parentalcontrol"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:parentalcontrol", 
            "required": true, 
            "name": "member:parentalcontrol_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:parentalcontrol"
        ]
      }
    }, 
    "/wapi/v2.9/tftpfiledir": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "directory": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "type": {
                    "type": "string", 
                    "example": "[u'DIRECTORY', u'FILE']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vtftp_dir_members": {
                    "type": "string", 
                    "example": "[{u'start_address': u'string', u'network': u'string', u'end_address': u'string', u'member': u'string', u'address': u'string', u'ip_type': u'enum', u'cidr': u'uint'}]"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tftpfiledir"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "tftpfiledir"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tftpfiledir"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "directory", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "type", 
            "in": "query"
          }
        ], 
        "tags": [
          "tftpfiledir"
        ]
      }
    }, 
    "/wapi/v2.9/member:threatprotection": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_threatprotection"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "current_ruleset", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "hardware_model", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "hardware_type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "host_name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "ipv4address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "ipv6address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "profile", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:threatprotection"
        ]
      }
    }, 
    "/wapi/v2.9/grid:dashboard/{grid:dashboard_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_dashboard"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:dashboard", 
            "required": true, 
            "name": "grid:dashboard_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:dashboard"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "analytics_tunneling_event_warning_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "analytics_tunneling_event_critical_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "atp_warning_event_warning_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "rpz_blocked_hit_warning_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "rpz_substituted_hit_warning_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "rpz_passthru_event_critical_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "rpz_substituted_hit_critical_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "rpz_blocked_hit_critical_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "rpz_passthru_event_warning_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "atp_warning_event_critical_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "atp_major_event_critical_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "atp_critical_event_critical_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "atp_major_event_warning_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "atp_critical_event_warning_threshold": {
                    "type": "string", 
                    "example": "uint"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:dashboard resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_dashboard"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:dashboard", 
            "required": true, 
            "name": "grid:dashboard_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:dashboard"
        ]
      }
    }, 
    "/wapi/v2.9/member/{member_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member", 
            "required": true, 
            "name": "member_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "member"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "lcd_input": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "syslog_servers": {
                    "type": "string", 
                    "example": "[{u'connection_type': u'enum', u'message_source': u'enum', u'message_node_id': u'enum', u'severity': u'enum', u'certificate': u'string', u'local_interface': u'enum', u'only_category_list': u'bool', u'category_list': u'enum', u'address': u'string', u'port': u'uint', u'certificate_token': u'string'}]"
                  }, 
                  "vpn_mtu": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "trap_notifications": {
                    "type": "string", 
                    "example": "[{u'enable_trap': u'bool', u'enable_email': u'bool', u'trap_type': u'enum'}]"
                  }, 
                  "use_dns_resolver_setting": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_remote_console_access_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "time_zone": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enable_ro_api_access": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "node_info": {
                    "type": "string", 
                    "example": "[{u'mgmt_physical_setting': u'physicalportsetting', u'lan_ha_port_setting': u'lanhaportsetting', u'hwplatform': u'enum', u'hwtype': u'string', u'v6_mgmt_network_setting': u'ipv6setting', u'nat_external_ip': u'string', u'lan2_physical_setting': u'physicalportsetting', u'hwid': u'string', u'hwmodel': u'string', u'service_status': u'servicestatus', u'paid_nios': u'bool', u'physical_oid': u'string', u'ha_status': u'enum', u'mgmt_network_setting': u'setting:network'}]"
                  }, 
                  "syslog_proxy_setting": {
                    "type": "string", 
                    "example": "setting:syslogproxy"
                  }, 
                  "enable_lom": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_threshold_traps": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "support_access_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_ha": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_support_access_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "config_addr_type": {
                    "type": "string", 
                    "example": "[u'IPV4', u'IPV6', u'BOTH']"
                  }, 
                  "bgp_as": {
                    "type": "string", 
                    "example": "[{u'neighbors': u'bgpneighbor', u'as': u'uint', u'holddown': u'uint', u'link_detect': u'bool', u'keepalive': u'uint'}]"
                  }, 
                  "use_lcd_input": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "platform": {
                    "type": "string", 
                    "example": "[u'INFOBLOX', u'RIVERBED', u'CISCO', u'IBVM', u'VNIOS']"
                  }, 
                  "lom_users": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'password': u'string', u'role': u'enum', u'name': u'string', u'disable': u'bool'}]"
                  }, 
                  "vip_setting": {
                    "type": "string", 
                    "example": "setting:network"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "email_setting": {
                    "type": "string", 
                    "example": "setting:email"
                  }, 
                  "lan2_enabled": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "remote_console_access_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "nat_setting": {
                    "type": "string", 
                    "example": "natsetting"
                  }, 
                  "router_id": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "use_enable_member_redirect": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "lan2_port_setting": {
                    "type": "string", 
                    "example": "lan2portsetting"
                  }, 
                  "use_dscp": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "member_service_communication": {
                    "type": "string", 
                    "example": "[{u'type': u'enum', u'option': u'enum', u'service': u'enum'}]"
                  }, 
                  "ntp_setting": {
                    "type": "string", 
                    "example": "member:ntp"
                  }, 
                  "mgmt_port_setting": {
                    "type": "string", 
                    "example": "mgmtportsetting"
                  }, 
                  "upgrade_group": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "lom_network_config": {
                    "type": "string", 
                    "example": "[{u'subnet_mask': u'string', u'is_lom_capable': u'bool', u'gateway': u'string', u'address': u'string'}]"
                  }, 
                  "use_external_syslog_backup_servers": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "additional_ip_list": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'enable_ospf': u'bool', u'enable_bgp': u'bool', u'ipv4_network_setting': u'setting:network', u'anycast': u'bool', u'ipv6_network_setting': u'ipv6setting', u'interface': u'enum'}]"
                  }, 
                  "threshold_traps": {
                    "type": "string", 
                    "example": "[{u'trap_reset': u'uint', u'trap_trigger': u'uint', u'trap_type': u'enum'}]"
                  }, 
                  "dscp": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "use_enable_lom": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "external_syslog_backup_servers": {
                    "type": "string", 
                    "example": "[{u'username': u'string', u'enable': u'bool', u'protocol': u'enum', u'directory_path': u'string', u'address': u'string', u'password': u'string', u'port': u'uint'}]"
                  }, 
                  "use_email_setting": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_snmp_setting": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "passive_ha_arp_enabled": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "dns_resolver_setting": {
                    "type": "string", 
                    "example": "setting:dnsresolver"
                  }, 
                  "master_candidate": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "snmp_setting": {
                    "type": "string", 
                    "example": "setting:snmp"
                  }, 
                  "static_routes": {
                    "type": "string", 
                    "example": "[{u'use_dscp': u'bool', u'primary': u'bool', u'dscp': u'uint', u'subnet_mask': u'string', u'address': u'string', u'gateway': u'string', u'vlan_id': u'uint'}]"
                  }, 
                  "ipv6_static_routes": {
                    "type": "string", 
                    "example": "[{u'auto_router_config_enabled': u'bool', u'use_dscp': u'bool', u'cidr_prefix': u'uint', u'enabled': u'bool', u'primary': u'bool', u'dscp': u'uint', u'virtual_ip': u'string', u'gateway': u'string', u'vlan_id': u'uint'}]"
                  }, 
                  "use_trap_notifications": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_member_redirect": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "preserve_if_owns_delegation": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "ospf_list": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'area_id': u'string', u'enable_bfd': u'bool', u'bfd_template': u'string', u'retransmit_interval': u'uint', u'dead_interval': u'uint', u'auto_calc_cost_enabled': u'bool', u'area_type': u'enum', u'authentication_type': u'enum', u'cost': u'uint', u'advertise_interface_vlan': u'string', u'hello_interval': u'uint', u'interface': u'enum', u'key_id': u'uint', u'authentication_key': u'string', u'is_ipv4': u'bool', u'transmit_delay': u'uint'}]"
                  }, 
                  "external_syslog_server_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_time_zone": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_syslog_proxy_setting": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "syslog_size": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "host_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "ipv6_setting": {
                    "type": "string", 
                    "example": "ipv6setting"
                  }, 
                  "pre_provisioning": {
                    "type": "string", 
                    "example": "preprovision"
                  }, 
                  "use_v4_vrrp": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "service_type_configuration": {
                    "type": "string", 
                    "example": "[u'ALL_V4', u'ALL_V6', u'CUSTOM']"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the member resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "capture_traffic_control": {
                      "type": "string", 
                      "example": {
                        "action": [
                          "START", 
                          "STOP"
                        ], 
                        "interface": [
                          "ALL", 
                          "HA", 
                          "LAN1", 
                          "LAN2", 
                          "MGMT"
                        ], 
                        "seconds_to_run": "uint"
                      }
                    }, 
                    "restartservices": {
                      "type": "string", 
                      "example": {
                        "restart_option": [
                          "FORCE_RESTART", 
                          "RESTART_IF_NEEDED"
                        ], 
                        "service_option": [
                          "ALL", 
                          "DHCP", 
                          "DNS"
                        ]
                      }
                    }, 
                    "requestrestartservicestatus": {
                      "type": "string", 
                      "example": {
                        "service_option": [
                          "ALL", 
                          "DHCP", 
                          "DNS"
                        ]
                      }
                    }, 
                    "member_admin_operation": {
                      "type": "string", 
                      "example": {
                        "operation": [
                          "FORCE_FAILOVER"
                        ]
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member", 
            "required": true, 
            "name": "member_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "capture_traffic_control", 
                "capture_traffic_status", 
                "create_token", 
                "member_admin_operation", 
                "read_token", 
                "requestrestartservicestatus", 
                "restartservices"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "member"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the member resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member", 
            "required": true, 
            "name": "member_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "member"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member", 
            "required": true, 
            "name": "member_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "member"
        ]
      }
    }, 
    "/wapi/v2.9/natgroup/{natgroup_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/natgroup"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for natgroup", 
            "required": true, 
            "name": "natgroup_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "natgroup"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the natgroup resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the natgroup resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for natgroup", 
            "required": true, 
            "name": "natgroup_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "natgroup"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/natgroup"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for natgroup", 
            "required": true, 
            "name": "natgroup_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "natgroup"
        ]
      }
    }, 
    "/wapi/v2.9/grid/{grid_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid", 
            "required": true, 
            "name": "grid_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "syslog_servers": {
                    "type": "string", 
                    "example": "[{u'connection_type': u'enum', u'message_source': u'enum', u'message_node_id': u'enum', u'severity': u'enum', u'certificate': u'string', u'local_interface': u'enum', u'only_category_list': u'bool', u'category_list': u'enum', u'address': u'string', u'port': u'uint', u'certificate_token': u'string'}]"
                  }, 
                  "http_proxy_server_setting": {
                    "type": "string", 
                    "example": "setting:httpproxyserver"
                  }, 
                  "updates_download_member_config": {
                    "type": "string", 
                    "example": "[{u'member': u'string', u'interface': u'enum', u'is_online': u'bool'}]"
                  }, 
                  "trap_notifications": {
                    "type": "string", 
                    "example": "[{u'enable_trap': u'bool', u'enable_email': u'bool', u'trap_type': u'enum'}]"
                  }, 
                  "informational_banner_setting": {
                    "type": "string", 
                    "example": "grid:informationalbannersetting"
                  }, 
                  "syslog_facility": {
                    "type": "string", 
                    "example": "[u'DAEMON', u'LOCAL0', u'LOCAL1', u'LOCAL2', u'LOCAL3', u'LOCAL4', u'LOCAL5', u'LOCAL6', u'LOCAL7']"
                  }, 
                  "audit_log_format": {
                    "type": "string", 
                    "example": "[u'DETAILED', u'BRIEF']"
                  }, 
                  "mgm_strict_delegate_mode": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_lom": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "restart_banner_setting": {
                    "type": "string", 
                    "example": "grid:restartbannersetting"
                  }, 
                  "rpz_hit_rate_interval": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "vpn_port": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "deny_mgm_snapshots": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "allow_recursive_deletion": {
                    "type": "string", 
                    "example": "[u'NOBODY', u'ALL', u'SUPERUSERS']"
                  }, 
                  "rpz_hit_rate_min_query": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "audit_to_syslog_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_rir_swip": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_gui_api_for_lan_vip": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "secret": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "descendants_action": {
                    "type": "string", 
                    "example": "extensibleattributedef:descendants"
                  }, 
                  "email_setting": {
                    "type": "string", 
                    "example": "setting:email"
                  }, 
                  "csp_api_config": {
                    "type": "string", 
                    "example": "grid:cspapiconfig"
                  }, 
                  "lom_users": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'password': u'string', u'role': u'enum', u'name': u'string', u'disable': u'bool'}]"
                  }, 
                  "consent_banner_setting": {
                    "type": "string", 
                    "example": "grid:consentbannersetting"
                  }, 
                  "rpz_hit_rate_max_query": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "is_grid_visualization_visible": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_recycle_bin": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "ntp_setting": {
                    "type": "string", 
                    "example": "grid:ntp"
                  }, 
                  "password_setting": {
                    "type": "string", 
                    "example": "setting:password"
                  }, 
                  "security_setting": {
                    "type": "string", 
                    "example": "setting:security"
                  }, 
                  "dscp": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "ms_setting": {
                    "type": "string", 
                    "example": "setting:msserver"
                  }, 
                  "threshold_traps": {
                    "type": "string", 
                    "example": "[{u'trap_reset': u'uint', u'trap_trigger': u'uint', u'trap_type': u'enum'}]"
                  }, 
                  "syslog_size": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "external_syslog_backup_servers": {
                    "type": "string", 
                    "example": "[{u'username': u'string', u'enable': u'bool', u'protocol': u'enum', u'directory_path': u'string', u'address': u'string', u'password': u'string', u'port': u'uint'}]"
                  }, 
                  "nat_groups": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "scheduled_backup": {
                    "type": "string", 
                    "example": "scheduledbackup"
                  }, 
                  "snmp_setting": {
                    "type": "string", 
                    "example": "setting:snmp"
                  }, 
                  "dns_resolver_setting": {
                    "type": "string", 
                    "example": "setting:dnsresolver"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enable_member_redirect": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "time_zone": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "external_syslog_server_enable": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "security_banner_setting": {
                    "type": "string", 
                    "example": "setting:securitybanner"
                  }, 
                  "objects_changes_tracking_setting": {
                    "type": "string", 
                    "example": "objectschangestrackingsetting"
                  }, 
                  "token_usage_delay": {
                    "type": "string", 
                    "example": "uint"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "join_mgm": {
                      "type": "string", 
                      "example": {
                        "file_token": "string", 
                        "join_token": "string", 
                        "grid_name": "string", 
                        "use_mgmt_port": "bool", 
                        "sgm_address": "string", 
                        "sgm_port": "uint"
                      }
                    }, 
                    "control_ip_address": {
                      "type": "string", 
                      "example": {
                        "exclude": "bool", 
                        "addresses": "string", 
                        "network_view": "string"
                      }
                    }, 
                    "upgrade": {
                      "type": "string", 
                      "example": {
                        "action": [
                          "UPGRADE_PAUSE", 
                          "UPGRADE_RESUME", 
                          "DISTRIBUTION_PAUSE", 
                          "DISTRIBUTION_RESUME", 
                          "DISTRIBUTION_START", 
                          "DISTRIBUTION_STOP", 
                          "DOWNGRADE", 
                          "REVERT", 
                          "UPGRADE", 
                          "UPGRADE_TEST_START", 
                          "UPGRADE_TEST_STOP", 
                          "UPLOAD"
                        ]
                      }
                    }, 
                    "join": {
                      "type": "string", 
                      "example": {
                        "grid_name": "string", 
                        "master": "string", 
                        "shared_secret": "string"
                      }
                    }, 
                    "upload_keytab": {
                      "type": "string", 
                      "example": {
                        "token": "string"
                      }
                    }, 
                    "upgrade_group_now": {
                      "type": "string", 
                      "example": {
                        "upgrade_group": "string"
                      }
                    }, 
                    "generate_tsig_key": {
                      "type": "string", 
                      "example": {
                        "tsig_key_size": [
                          "128", 
                          "256", 
                          "512"
                        ], 
                        "tsig_key_algorithm": [
                          "HMAC-MD5", 
                          "HMAC-SHA256"
                        ]
                      }
                    }, 
                    "skip_member_upgrade": {
                      "type": "string", 
                      "example": {
                        "member": "string"
                      }
                    }, 
                    "publish_changes": {
                      "type": "string", 
                      "example": {
                        "services": [
                          "ALL", 
                          "ATP"
                        ], 
                        "member": "string", 
                        "sequential_delay": "uint", 
                        "member_order": [
                          "SIMULTANEOUSLY", 
                          "SEQUENTIALLY"
                        ]
                      }
                    }, 
                    "restartservices": {
                      "type": "string", 
                      "example": {
                        "service_option": [
                          "ALL", 
                          "DHCP", 
                          "DNS"
                        ], 
                        "members": "string", 
                        "restart_option": [
                          "FORCE_RESTART", 
                          "RESTART_IF_NEEDED"
                        ], 
                        "member_order": [
                          "SEQUENTIALLY", 
                          "SIMULTANEOUSLY"
                        ], 
                        "mode": [
                          "GROUPED", 
                          "SEQUENTIAL", 
                          "SIMULTANEOUS"
                        ], 
                        "groups": "string", 
                        "sequential_delay": "uint", 
                        "services": [
                          "ALL", 
                          "DNS", 
                          "DHCP", 
                          "DHCPV4", 
                          "DHCPV6"
                        ], 
                        "user_name": "string"
                      }
                    }, 
                    "query_fqdn_on_member": {
                      "type": "string", 
                      "example": {
                        "member": "string", 
                        "record_type": [
                          "ANY", 
                          "A", 
                          "AAAA", 
                          "CNAME", 
                          "DNAME", 
                          "MX", 
                          "NAPTR", 
                          "NS", 
                          "PTR", 
                          "SRV", 
                          "TXT", 
                          "AXFR"
                        ], 
                        "recursive_query": "bool", 
                        "fqdn": "string", 
                        "name_server": "string"
                      }
                    }, 
                    "get_rpz_threat_details": {
                      "type": "string", 
                      "example": {
                        "rpz_rule_name": "string"
                      }
                    }, 
                    "member_upgrade": {
                      "type": "string", 
                      "example": {
                        "member": "string", 
                        "action": [
                          "UPGRADE", 
                          "REVERT"
                        ]
                      }
                    }, 
                    "test_syslog_backup_server_connection": {
                      "type": "string", 
                      "example": {
                        "member": "string", 
                        "syslog_backup_server": "extsyslogbackupserver"
                      }
                    }, 
                    "get_all_template_vendor_id": {
                      "type": "string", 
                      "example": {
                        "outbound_type": [
                          "REST", 
                          "DXL", 
                          "SYSLOG"
                        ]
                      }
                    }, 
                    "start_discovery": {
                      "type": "string", 
                      "example": {
                        "objects": "string"
                      }
                    }, 
                    "test_syslog_connection": {
                      "type": "string", 
                      "example": {
                        "syslog_server": "syslogserver"
                      }
                    }, 
                    "requestrestartservicestatus": {
                      "type": "string", 
                      "example": {
                        "service_option": [
                          "ALL", 
                          "DHCP", 
                          "DNS"
                        ]
                      }
                    }, 
                    "get_template_schema_versions": {
                      "type": "string", 
                      "example": {
                        "schema_type": [
                          "REST_ENDPOINT", 
                          "REST_EVENT"
                        ]
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid", 
            "required": true, 
            "name": "grid_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "control_ip_address", 
                "empty_recycle_bin", 
                "generate_tsig_key", 
                "get_all_template_vendor_id", 
                "get_grid_revert_status", 
                "get_rpz_threat_details", 
                "get_template_schema_versions", 
                "join", 
                "join_mgm", 
                "leave_mgm", 
                "member_upgrade", 
                "publish_changes", 
                "query_fqdn_on_member", 
                "requestrestartservicestatus", 
                "restartservices", 
                "skip_member_upgrade", 
                "start_discovery", 
                "test_syslog_backup_server_connection", 
                "test_syslog_connection", 
                "upgrade", 
                "upgrade_group_now", 
                "upload_keytab"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid", 
            "required": true, 
            "name": "grid_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi/{grid:cloudapi_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:cloudapi", 
            "required": true, 
            "name": "grid:cloudapi_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "allow_api_admins": {
                    "type": "string", 
                    "example": "[u'NONE', u'LIST', u'ALL']"
                  }, 
                  "enable_recycle_bin": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "gateway_config": {
                    "type": "string", 
                    "example": "grid:cloudapi:gateway:config"
                  }, 
                  "allowed_api_admins": {
                    "type": "string", 
                    "example": "[{u'is_remote': u'bool', u'remote_admin': u'string', u'local_admin': u'string'}]"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:cloudapi resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:cloudapi", 
            "required": true, 
            "name": "grid:cloudapi_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:group": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "service": {
                    "type": "string", 
                    "example": "[u'DHCP', u'DNS']"
                  }, 
                  "mode": {
                    "type": "string", 
                    "example": "[u'SEQUENTIAL', u'SIMULTANEOUS']"
                  }, 
                  "members": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "recurring_schedule": {
                    "type": "string", 
                    "example": "grid:servicerestart:group:schedule"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_group"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:group"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_group"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "is_default", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "service", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:group"
        ]
      }
    }, 
    "/wapi/v2.9/vdiscoverytask/{vdiscoverytask_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vdiscoverytask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for vdiscoverytask", 
            "required": true, 
            "name": "vdiscoverytask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "vdiscoverytask"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "driver_type": {
                    "type": "string", 
                    "example": "[u'VMWARE', u'AWS', u'OPENSTACK', u'AZURE']"
                  }, 
                  "auto_consolidate_managed_vm": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "auto_consolidate_cloud_ea": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "fqdn_or_ip": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "auto_create_dns_hostname_template": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "use_identity": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "auto_consolidate_managed_tenant": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "update_dns_view_public_ip": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "protocol": {
                    "type": "string", 
                    "example": "[u'HTTP', u'HTTPS']"
                  }, 
                  "public_network_view": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "port": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "auto_create_dns_record_type": {
                    "type": "string", 
                    "example": "[u'HOST_RECORD', u'A_PTR_RECORD']"
                  }, 
                  "identity_version": {
                    "type": "string", 
                    "example": "[u'KEYSTONE_V2', u'KEYSTONE_V3']"
                  }, 
                  "domain_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "member": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "auto_create_dns_record": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "public_network_view_mapping_policy": {
                    "type": "string", 
                    "example": "[u'DIRECT', u'AUTO_CREATE']"
                  }, 
                  "update_metadata": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "username": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "private_network_view_mapping_policy": {
                    "type": "string", 
                    "example": "[u'DIRECT', u'AUTO_CREATE']"
                  }, 
                  "scheduled_run": {
                    "type": "string", 
                    "example": "setting:schedule"
                  }, 
                  "credentials_type": {
                    "type": "string", 
                    "example": "[u'DIRECT', u'INDIRECT']"
                  }, 
                  "private_network_view": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "dns_view_public_ip": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "update_dns_view_private_ip": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "allow_unsecured_connection": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enabled": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "dns_view_private_ip": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "merge_data": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the vdiscoverytask resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "vdiscovery_control": {
                      "type": "string", 
                      "example": {
                        "action": [
                          "START", 
                          "CANCEL"
                        ]
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for vdiscoverytask", 
            "required": true, 
            "name": "vdiscoverytask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "vdiscovery_control"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "vdiscoverytask"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the vdiscoverytask resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for vdiscoverytask", 
            "required": true, 
            "name": "vdiscoverytask_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "vdiscoverytask"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vdiscoverytask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for vdiscoverytask", 
            "required": true, 
            "name": "vdiscoverytask_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "vdiscoverytask"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi:cloudstatistics": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_cloudstatistics"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:cloudstatistics"
        ]
      }
    }, 
    "/wapi/v2.9/upgradegroup": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "distribution_policy": {
                    "type": "string", 
                    "example": "[u'SIMULTANEOUSLY', u'SEQUENTIALLY']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "upgrade_policy": {
                    "type": "string", 
                    "example": "[u'SIMULTANEOUSLY', u'SEQUENTIALLY']"
                  }, 
                  "distribution_time": {
                    "type": "string", 
                    "example": "timestamp"
                  }, 
                  "members": {
                    "type": "string", 
                    "example": "[{u'member': u'string', u'time_zone': u'enum'}]"
                  }, 
                  "upgrade_dependent_group": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "distribution_dependent_group": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "upgrade_time": {
                    "type": "string", 
                    "example": "timestamp"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradegroup"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradegroup"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradegroup"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradegroup"
        ]
      }
    }, 
    "/wapi/v2.9/capacityreport": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/capacityreport"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "capacityreport"
        ]
      }
    }, 
    "/wapi/v2.9/grid:maxminddbinfo/{grid:maxminddbinfo_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_maxminddbinfo"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:maxminddbinfo", 
            "required": true, 
            "name": "grid:maxminddbinfo_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:maxminddbinfo"
        ]
      }
    }, 
    "/wapi/v2.9/grid:threatprotection": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_threatprotection"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:threatprotection"
        ]
      }
    }, 
    "/wapi/v2.9/license:gridwide/{license:gridwide_reference}": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the license:gridwide resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for license:gridwide", 
            "required": true, 
            "name": "license:gridwide_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "license:gridwide"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/license_gridwide"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for license:gridwide", 
            "required": true, 
            "name": "license:gridwide_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "license:gridwide"
        ]
      }
    }, 
    "/wapi/v2.9/vdiscoverytask": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "driver_type": {
                    "type": "string", 
                    "example": "[u'VMWARE', u'AWS', u'OPENSTACK', u'AZURE']"
                  }, 
                  "auto_consolidate_managed_vm": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "auto_consolidate_cloud_ea": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "fqdn_or_ip": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "auto_create_dns_hostname_template": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "use_identity": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "auto_consolidate_managed_tenant": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "update_dns_view_public_ip": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "protocol": {
                    "type": "string", 
                    "example": "[u'HTTP', u'HTTPS']"
                  }, 
                  "public_network_view": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "port": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "auto_create_dns_record_type": {
                    "type": "string", 
                    "example": "[u'HOST_RECORD', u'A_PTR_RECORD']"
                  }, 
                  "identity_version": {
                    "type": "string", 
                    "example": "[u'KEYSTONE_V2', u'KEYSTONE_V3']"
                  }, 
                  "domain_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "member": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "auto_create_dns_record": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "public_network_view_mapping_policy": {
                    "type": "string", 
                    "example": "[u'DIRECT', u'AUTO_CREATE']"
                  }, 
                  "update_metadata": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "username": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "private_network_view_mapping_policy": {
                    "type": "string", 
                    "example": "[u'DIRECT', u'AUTO_CREATE']"
                  }, 
                  "scheduled_run": {
                    "type": "string", 
                    "example": "setting:schedule"
                  }, 
                  "credentials_type": {
                    "type": "string", 
                    "example": "[u'DIRECT', u'INDIRECT']"
                  }, 
                  "private_network_view": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "dns_view_public_ip": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "update_dns_view_private_ip": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "allow_unsecured_connection": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enabled": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "dns_view_private_ip": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "merge_data": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vdiscoverytask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "vdiscoverytask"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vdiscoverytask"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "dns_view_private_ip", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "dns_view_public_ip", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "domain_name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "driver_type", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "enabled", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "fqdn_or_ip", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "identity_version", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "member", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "port", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "private_network_view", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "private_network_view_mapping_policy", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "protocol", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "public_network_view", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "public_network_view_mapping_policy", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "state", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "update_dns_view_private_ip", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "update_dns_view_public_ip", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "use_identity", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "username", 
            "in": "query"
          }
        ], 
        "tags": [
          "vdiscoverytask"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:group/{grid:servicerestart:group_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_group"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:servicerestart:group", 
            "required": true, 
            "name": "grid:servicerestart:group_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:group"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "service": {
                    "type": "string", 
                    "example": "[u'DHCP', u'DNS']"
                  }, 
                  "mode": {
                    "type": "string", 
                    "example": "[u'SEQUENTIAL', u'SIMULTANEOUS']"
                  }, 
                  "members": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "recurring_schedule": {
                    "type": "string", 
                    "example": "grid:servicerestart:group:schedule"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:servicerestart:group resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the grid:servicerestart:group resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:servicerestart:group", 
            "required": true, 
            "name": "grid:servicerestart:group_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "grid:servicerestart:group"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_group"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:servicerestart:group", 
            "required": true, 
            "name": "grid:servicerestart:group_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:group"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:request/{grid:servicerestart:request_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_request"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:servicerestart:request", 
            "required": true, 
            "name": "grid:servicerestart:request_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:request"
        ]
      }
    }, 
    "/wapi/v2.9/member:filedistribution/{member:filedistribution_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_filedistribution"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:filedistribution", 
            "required": true, 
            "name": "member:filedistribution_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:filedistribution"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "http_acls": {
                    "type": "string", 
                    "example": "[{u'permission': u'enum', u'address': u'string'}]"
                  }, 
                  "ftp_port": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "enable_tftp": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "tftp_port": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "allow_uploads": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "ftp_acls": {
                    "type": "string", 
                    "example": "[{u'permission': u'enum', u'address': u'string'}]"
                  }, 
                  "enable_ftp_passive": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_ftp_filelist": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_allow_uploads": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_http_acl": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_ftp": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "enable_http": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "tftp_acls": {
                    "type": "string", 
                    "example": "[{u'permission': u'enum', u'address': u'string'}]"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the member:filedistribution resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_filedistribution"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:filedistribution", 
            "required": true, 
            "name": "member:filedistribution_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:filedistribution"
        ]
      }
    }, 
    "/wapi/v2.9/capacityreport/{capacityreport_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/capacityreport"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for capacityreport", 
            "required": true, 
            "name": "capacityreport_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "capacityreport"
        ]
      }
    }, 
    "/wapi/v2.9/upgradestatus/{upgradestatus_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradestatus"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for upgradestatus", 
            "required": true, 
            "name": "upgradestatus_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradestatus"
        ]
      }
    }, 
    "/wapi/v2.9/member:license/{member:license_reference}": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the member:license resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:license", 
            "required": true, 
            "name": "member:license_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "member:license"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_license"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for member:license", 
            "required": true, 
            "name": "member:license_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:license"
        ]
      }
    }, 
    "/wapi/v2.9/rir": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rir"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "rir"
        ]
      }
    }, 
    "/wapi/v2.9/db_objects/{db_objects_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/db_objects"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for db_objects", 
            "required": true, 
            "name": "db_objects_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "db_objects"
        ]
      }
    }, 
    "/wapi/v2.9/cacertificate/{cacertificate_reference}": {
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the cacertificate resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for cacertificate", 
            "required": true, 
            "name": "cacertificate_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "cacertificate"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cacertificate"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for cacertificate", 
            "required": true, 
            "name": "cacertificate_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "cacertificate"
        ]
      }
    }, 
    "/wapi/v2.9/cacertificate": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cacertificate"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "distinguished_name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "issuer", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "serial", 
            "in": "query"
          }
        ], 
        "tags": [
          "cacertificate"
        ]
      }
    }, 
    "/wapi/v2.9/dbsnapshot": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbsnapshot"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "dbsnapshot"
        ]
      }
    }, 
    "/wapi/v2.9/rir:organization": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "maintainer": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "rir": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "sender_email": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "id": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rir_organization"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "rir:organization"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rir_organization"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "maintainer", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "rir", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "sender_email", 
            "in": "query"
          }
        ], 
        "tags": [
          "rir:organization"
        ]
      }
    }, 
    "/wapi/v2.9/grid:license_pool_container/{grid:license_pool_container_reference}": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "allocate_licenses": {
                      "type": "string", 
                      "example": {
                        "license_pools": "grid:license_pool", 
                        "hwid": "string"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:license_pool_container", 
            "required": true, 
            "name": "grid:license_pool_container_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "allocate_licenses"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:license_pool_container"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_license_pool_container"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:license_pool_container", 
            "required": true, 
            "name": "grid:license_pool_container_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:license_pool_container"
        ]
      }
    }, 
    "/wapi/v2.9/grid:servicerestart:request:changedobject": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_servicerestart_request_changedobject"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "user_name", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:servicerestart:request:changedobject"
        ]
      }
    }, 
    "/wapi/v2.9/dbsnapshot/{dbsnapshot_reference}": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "save_db_snapshot": {
                      "type": "string", 
                      "example": {
                        "comment": "string"
                      }
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for dbsnapshot", 
            "required": true, 
            "name": "dbsnapshot_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "rollback_db_snapshot", 
                "save_db_snapshot"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "dbsnapshot"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dbsnapshot"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for dbsnapshot", 
            "required": true, 
            "name": "dbsnapshot_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "dbsnapshot"
        ]
      }
    }, 
    "/wapi/v2.9/deleted_objects/{deleted_objects_reference}": {}, 
    "/wapi/v2.9/grid:cloudapi:vmaddress/{grid:cloudapi:vmaddress_reference}": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_vmaddress"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:cloudapi:vmaddress", 
            "required": true, 
            "name": "grid:cloudapi:vmaddress_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:vmaddress"
        ]
      }
    }, 
    "/wapi/v2.9/grid:cloudapi:tenant/{grid:cloudapi:tenant_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_tenant"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:cloudapi:tenant", 
            "required": true, 
            "name": "grid:cloudapi:tenant_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:tenant"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the grid:cloudapi:tenant resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/grid_cloudapi_tenant"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for grid:cloudapi:tenant", 
            "required": true, 
            "name": "grid:cloudapi:tenant_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "grid:cloudapi:tenant"
        ]
      }
    }, 
    "/wapi/v2.9/namedacl/{namedacl_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/namedacl"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for namedacl", 
            "required": true, 
            "name": "namedacl_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "namedacl"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "access_list": {
                    "type": "string", 
                    "example": "[{u'permission': u'enum', u'tsig_key_alg': u'enum', u'use_tsig_key_name': u'bool', u'tsig_key': u'string', u'tsig_key_name': u'string', u'address': u'string'}]"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the namedacl resource"
      }, 
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {}
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for namedacl", 
            "required": true, 
            "name": "namedacl_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "enum": [
                "validate_acl_items"
              ], 
              "type": "string"
            }, 
            "description": "Select the function", 
            "required": true, 
            "name": "_function", 
            "in": "query"
          }
        ], 
        "tags": [
          "namedacl"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {}
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Function calls"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the namedacl resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for namedacl", 
            "required": true, 
            "name": "namedacl_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "namedacl"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/namedacl"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for namedacl", 
            "required": true, 
            "name": "namedacl_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "namedacl"
        ]
      }
    }, 
    "/wapi/v2.9/restartservicestatus": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/restartservicestatus"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "member", 
            "in": "query"
          }
        ], 
        "tags": [
          "restartservicestatus"
        ]
      }
    }, 
    "/wapi/v2.9/rir/{rir_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rir"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for rir", 
            "required": true, 
            "name": "rir_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "rir"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "communication_mode": {
                    "type": "string", 
                    "example": "[u'EMAIL', u'API', u'NONE']"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "[u'RIPE']"
                  }, 
                  "url": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "use_email": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "use_url": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "email": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the rir resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rir"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for rir", 
            "required": true, 
            "name": "rir_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "rir"
        ]
      }
    }, 
    "/wapi/v2.9/member:filedistribution": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/member_filedistribution"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "host_name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "ipv4_address", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "ipv6_address", 
            "in": "query"
          }
        ], 
        "tags": [
          "member:filedistribution"
        ]
      }
    }, 
    "/wapi/v2.9/upgradeschedule": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/upgradeschedule"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "upgradeschedule"
        ]
      }
    }
  }, 
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic", 
        "type": "http"
      }
    }, 
    "schemas": {
      "restartservicestatus": {
        "type": "object", 
        "properties": {
          "member": {
            "type": "string", 
            "description": "The name of this Grid member in FQDN format."
          }, 
          "dns_status": {
            "enum": [
              "CONFIG_ERROR", 
              "DISABLED", 
              "NO", 
              "NO_PERMISSION", 
              "NO_REQUEST", 
              "OFFLINE", 
              "REQUESTING", 
              "RESTART_PENDING", 
              "YES"
            ], 
            "type": "string", 
            "description": "The status of the DNS service."
          }, 
          "dhcp_status": {
            "enum": [
              "CONFIG_ERROR", 
              "DISABLED", 
              "NO", 
              "NO_PERMISSION", 
              "NO_REQUEST", 
              "OFFLINE", 
              "REQUESTING", 
              "RESTART_PENDING", 
              "YES"
            ], 
            "type": "string", 
            "description": "The status of the DHCP service."
          }, 
          "reporting_status": {
            "enum": [
              "CONFIG_ERROR", 
              "DISABLED", 
              "NO", 
              "NO_PERMISSION", 
              "NO_REQUEST", 
              "OFFLINE", 
              "REQUESTING", 
              "RESTART_PENDING", 
              "YES"
            ], 
            "type": "string", 
            "description": "The status of the reporting service."
          }
        }
      }, 
      "member_parentalcontrol": {
        "type": "object", 
        "properties": {
          "name": {
            "type": "string", 
            "description": "The parental control member hostname."
          }, 
          "enable_service": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the parental control service is enabled."
          }
        }
      }, 
      "member_threatanalytics": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The Grid member descriptive comment."
          }, 
          "status": {
            "enum": [
              "UNKNOWN", 
              "INACTIVE", 
              "WORKING", 
              "WARNING", 
              "FAILED"
            ], 
            "type": "string", 
            "description": "The Grid member threat analytics status."
          }, 
          "ipv6_address": {
            "type": "string", 
            "description": "The IPv6 Address address of the Grid member."
          }, 
          "ipv4_address": {
            "type": "string", 
            "description": "The IPv4 Address address of the Grid member."
          }, 
          "host_name": {
            "type": "string", 
            "description": "The Grid member host name."
          }, 
          "enable_service": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the threat analytics service is enabled."
          }
        }
      }, 
      "grid_x509certificate": {
        "type": "object", 
        "properties": {
          "serial": {
            "type": "string", 
            "description": "X509Certificate serial number."
          }, 
          "subject": {
            "type": "string", 
            "description": "A Distinguished Name that is made of multiple relative distinguished names (RDNs)."
          }, 
          "valid_not_after": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Certificate expiry date."
          }, 
          "valid_not_before": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Certificate validity start date."
          }, 
          "issuer": {
            "type": "string", 
            "description": "Certificate issuer."
          }
        }
      }, 
      "grid_cloudapi_tenant": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "Comment for the Grid Cloud API Tenant object; maximum 256 characters."
          }, 
          "created_ts": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the tenant was first created in the system."
          }, 
          "network_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "Number of Networks associated with the tenant."
          }, 
          "name": {
            "type": "string", 
            "description": "Name of the tenant."
          }, 
          "last_event_ts": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the last event associated with the tenant happened."
          }, 
          "cloud_info": {
            "enum": [
              "grid:cloudapi:info"
            ], 
            "type": "string", 
            "description": "Structure containing all cloud API related information for this object."
          }, 
          "id": {
            "type": "string", 
            "description": "Unique ID associated with the tenant. This is set only when the tenant is first created."
          }, 
          "vm_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "Number of VMs associated with the tenant."
          }
        }
      }, 
      "grid_cloudapi_cloudstatistics": {
        "type": "object", 
        "properties": {
          "fixed_ip_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "The total number of fixed IP addresses currently in use by all tenants in the system."
          }, 
          "tenant_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "Total number of tenant currently in the system."
          }, 
          "allocated_ip_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "Total number of IPs allocated by tenants."
          }, 
          "floating_ip_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "The total number of floating IP addresses currently in use by all tenants in the system."
          }, 
          "tenant_ip_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "The total number of IP addresses currently in use by all tenants in the system."
          }, 
          "available_ip_count": {
            "type": "string", 
            "description": "The total number of IP addresses available to tenants. Only IP addresses in networks that are within a delegation scope are counted."
          }, 
          "allocated_available_ratio": {
            "type": "integer", 
            "example": "integer", 
            "description": "Ratio of allocated vs. available IPs"
          }, 
          "tenant_vm_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "The total number of VMs currently in use by all tenants in the system."
          }
        }
      }, 
      "rir": {
        "type": "object", 
        "properties": {
          "communication_mode": {
            "enum": [
              "EMAIL", 
              "API", 
              "NONE"
            ], 
            "type": "string", 
            "description": "The communication mode for RIR."
          }, 
          "name": {
            "enum": [
              "RIPE"
            ], 
            "type": "string", 
            "description": "The name of RIR."
          }, 
          "url": {
            "type": "string", 
            "description": "The WebAPI URL for RIR."
          }, 
          "use_email": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: email"
          }, 
          "use_url": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: url"
          }, 
          "email": {
            "type": "string", 
            "description": "The e-mail address for RIR."
          }
        }
      }, 
      "grid_dashboard": {
        "type": "object", 
        "properties": {
          "analytics_tunneling_event_warning_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard warning threshold for Analytics tunneling events."
          }, 
          "analytics_tunneling_event_critical_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard critical threshold for Analytics tunneling events."
          }, 
          "atp_warning_event_warning_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard warning threshold for ATP warning events."
          }, 
          "rpz_blocked_hit_warning_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The warning threshold value for blocked RPZ hits in the Grid dashboard."
          }, 
          "rpz_substituted_hit_warning_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The warning threshold value for substituted RPZ hits in the Grid dashboard."
          }, 
          "rpz_passthru_event_critical_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard critical threshold for RPZ passthru events."
          }, 
          "rpz_substituted_hit_critical_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The critical threshold value for substituted RPZ hits in the Grid dashboard."
          }, 
          "rpz_blocked_hit_critical_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The critical threshold value for blocked RPZ hits in the Grid dashboard."
          }, 
          "rpz_passthru_event_warning_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard warning threshold for RPZ passthru events."
          }, 
          "atp_warning_event_critical_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard critical threshold for ATP warning events."
          }, 
          "atp_major_event_critical_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard critical threshold for ATP major events."
          }, 
          "atp_critical_event_critical_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard critical threshold for ATP critical events."
          }, 
          "atp_major_event_warning_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard warning threshold for ATP major events."
          }, 
          "atp_critical_event_warning_threshold": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Grid Dashboard warning threshold for ATP critical events."
          }
        }
      }, 
      "grid_servicerestart_group": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "Comment for the Restart Group; maximum 256 characters."
          }, 
          "status": {
            "type": "string", 
            "description": "The restart status for a restart group."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of this Restart Group."
          }, 
          "service": {
            "enum": [
              "DHCP", 
              "DNS"
            ], 
            "type": "string", 
            "description": "The applicable service for this Restart Group."
          }, 
          "last_updated_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the status of the latest request has changed."
          }, 
          "is_default": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if this Restart Group is the default group."
          }, 
          "mode": {
            "enum": [
              "SEQUENTIAL", 
              "SIMULTANEOUS"
            ], 
            "type": "string", 
            "description": "The default restart method for this Restart Group."
          }, 
          "members": {
            "type": "string", 
            "description": "The list of members belonging to the group."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "position": {
            "type": "integer", 
            "example": "integer", 
            "description": "The order to restart."
          }, 
          "requests": {
            "enum": [
              "grid:servicerestart:request"
            ], 
            "type": "string", 
            "description": "The list of requests associated with a restart group."
          }, 
          "recurring_schedule": {
            "enum": [
              "grid:servicerestart:group:schedule"
            ], 
            "type": "string", 
            "description": "The recurring schedule for restart of a group."
          }
        }
      }, 
      "rir_organization": {
        "type": "object", 
        "properties": {
          "maintainer": {
            "type": "string", 
            "description": "The RIR organization maintainer."
          }, 
          "name": {
            "type": "string", 
            "description": "The RIR organization name."
          }, 
          "rir": {
            "type": "string", 
            "description": "The RIR associated with RIR organization."
          }, 
          "sender_email": {
            "type": "string", 
            "description": "The sender e-mail address for RIR organization."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "password": {
            "type": "string", 
            "description": "The password for the maintainer of RIR organization."
          }, 
          "id": {
            "type": "string", 
            "description": "The RIR organization identifier."
          }
        }
      }, 
      "grid_servicerestart_status": {
        "type": "object", 
        "properties": {
          "pending_restart": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of forced or needed requests pending for restart."
          }, 
          "no_restart": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of requests that did not require a restart."
          }, 
          "success": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of requests associated with successful restarts."
          }, 
          "parent": {
            "type": "string", 
            "description": "A reference to the grid or grid:servicerestart:group object associated with the request."
          }, 
          "timeouts": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of timeout requests."
          }, 
          "processing": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of not forced and not needed requests pending for restart."
          }, 
          "grouped": {
            "enum": [
              "GRID", 
              "GROUP"
            ], 
            "type": "string", 
            "description": "The type of grouping."
          }, 
          "finished": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of finished requests."
          }, 
          "needed_restart": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of created yet unprocessed requests for restart."
          }, 
          "failures": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of failed requests."
          }, 
          "pending": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of requests that are pending a restart."
          }, 
          "restarting": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of service restarts for corresponding members."
          }
        }
      }, 
      "csvimporttask": {
        "type": "object", 
        "properties": {
          "import_id": {
            "type": "integer", 
            "example": "integer", 
            "description": "The ID of the current import task."
          }, 
          "status": {
            "enum": [
              "COMPLETED", 
              "FAILED", 
              "PENDING", 
              "RUNNING", 
              "STOPPED", 
              "UPLOADED", 
              "TEST_COMPLETED", 
              "TEST_FAILED", 
              "TEST_RUNNING", 
              "TEST_STOPPED"
            ], 
            "type": "string", 
            "description": "The status of the import operation"
          }, 
          "start_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The start time of the import operation."
          }, 
          "file_name": {
            "type": "string", 
            "description": "The name of the file used for the import operation."
          }, 
          "lines_processed": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of lines that have been processed."
          }, 
          "lines_failed": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of lines that encountered an error."
          }, 
          "update_method": {
            "enum": [
              "MERGE", 
              "OVERRIDE"
            ], 
            "type": "string", 
            "description": "The update method to be used for the operation."
          }, 
          "admin_name": {
            "type": "string", 
            "description": "The login name of the administrator."
          }, 
          "on_error": {
            "enum": [
              "CONTINUE", 
              "STOP"
            ], 
            "type": "string", 
            "description": "The action to take when an error is encountered."
          }, 
          "end_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The end time of this import operation."
          }, 
          "file_size": {
            "type": "integer", 
            "example": "integer", 
            "description": "The size of the file used for the import operation."
          }, 
          "action": {
            "enum": [
              "START", 
              "SAVE"
            ], 
            "type": "string", 
            "description": "The action to execute."
          }, 
          "separator": {
            "enum": [
              "COMMA", 
              "SEMICOLON", 
              "SPACE", 
              "TAB"
            ], 
            "type": "string", 
            "description": "The separator to be used for the data in the CSV file."
          }, 
          "operation": {
            "enum": [
              "INSERT", 
              "UPDATE", 
              "REPLACE", 
              "DELETE", 
              "CUSTOM"
            ], 
            "type": "string", 
            "description": "The operation to execute."
          }, 
          "lines_warning": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of lines that encountered a warning."
          }
        }
      }, 
      "upgradegroup": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The upgrade group descriptive comment."
          }, 
          "distribution_policy": {
            "enum": [
              "SIMULTANEOUSLY", 
              "SEQUENTIALLY"
            ], 
            "type": "string", 
            "description": "The distribution scheduling policy."
          }, 
          "name": {
            "type": "string", 
            "description": "The upgrade group name."
          }, 
          "time_zone": {
            "enum": [
              "(UTC - 12:00)", 
              "(UTC - 11:00) Midway Island, Samoa", 
              "(UTC - 10:00) Hawaii", 
              "(UTC - 9:00) Alaska", 
              "(UTC - 8:00) Pacific Time (US and Canada), Tijuana", 
              "(UTC - 7:00) Arizona", 
              "(UTC - 7:00) Mountain Time (US and Canada)", 
              "(UTC - 6:00) Central Time (US and Canada)", 
              "(UTC - 6:00) Mexico City, Tegucigalpa", 
              "(UTC - 6:00) Saskatchewan", 
              "(UTC - 5:00) Bogota, Lima, Quito", 
              "(UTC - 5:00) Eastern Time (US and Canada)", 
              "(UTC - 5:00) Indiana (East)", 
              "(UTC - 4:00) Caracas", 
              "(UTC - 4:00) Atlantic Time (Canada)", 
              "(UTC - 4:00) Santiago", 
              "(UTC - 3:30) Newfoundland", 
              "(UTC - 3:00) Brasilia", 
              "(UTC - 3:00) Buenos Aires", 
              "(UTC - 2:00) Mid-Atlantic", 
              "(UTC - 1:00) Azores", 
              "(UTC) Coordinated Universal Time", 
              "(UTC) Dublin", 
              "(UTC) Lisbon", 
              "(UTC) London", 
              "(UTC + 1:00) Casablanca", 
              "(UTC + 1:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna", 
              "(UTC + 1:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague", 
              "(UTC + 1:00) Brussels, Copenhagen, Madrid, Paris", 
              "(UTC + 1:00) Sarajevo, Skopje, Sofija, Warsaw, Zagreb", 
              "(UTC + 2:00) Athens, Vilnius", 
              "(UTC + 2:00) Bucharest", 
              "(UTC + 2:00) Cairo", 
              "(UTC + 2:00) Harare", 
              "(UTC + 2:00) Helsinki", 
              "(UTC + 2:00) Jerusalem", 
              "(UTC + 2:00) Kaliningrad", 
              "(UTC + 3:00) Baghdad, Istanbul, Kuwait, Minsk, Riyadh", 
              "(UTC + 3:00) Moscow, St. Petersburg, Volgograd", 
              "(UTC + 3:00) Nairobi", 
              "(UTC + 3:30) Tehran", 
              "(UTC + 4:00) Dubai", 
              "(UTC + 4:00) Baku", 
              "(UTC + 4:00) Samara", 
              "(UTC + 4:30) Kabul", 
              "(UTC + 5:00) Ekaterinburg", 
              "(UTC + 5:00) Islamabad, Karachi", 
              "(UTC + 5:30) Bombay, Calcutta, Madras, New Delhi", 
              "(UTC + 5:30) Colombo", 
              "(UTC + 6:00) Dhaka", 
              "(UTC + 6:00) Omsk", 
              "(UTC + 6:30) Rangoon", 
              "(UTC + 7:00) Bangkok, Hanoi", 
              "(UTC + 7:00) Krasnoyarsk", 
              "(UTC + 8:00) Beijing, Chongqing, Shanghai", 
              "(UTC + 8:00) Hong Kong", 
              "(UTC + 8:00) Irkutsk", 
              "(UTC + 8:00) Perth", 
              "(UTC + 8:00) Singapore", 
              "(UTC + 8:00) Taipei", 
              "(UTC + 9:00) Osaka, Sapporo, Tokyo", 
              "(UTC + 9:00) Seoul", 
              "(UTC + 9:00) Yakutsk", 
              "(UTC + 9:30) Adelaide", 
              "(UTC + 9:30) Darwin", 
              "(UTC + 10:00) Brisbane", 
              "(UTC + 10:00) Canberra, Sydney", 
              "(UTC + 10:00) Melbourne, Victoria", 
              "(UTC + 10:00) Guam", 
              "(UTC + 10:00) Hobart", 
              "(UTC + 10:00) Vladivostok", 
              "(UTC + 11:00) Solomon Islands", 
              "(UTC + 11:00) Magadan", 
              "(UTC + 12:00) Anadyr", 
              "(UTC + 12:00) Auckland", 
              "(UTC + 12:00) Fiji", 
              "(UTC + 12:00) Marshall Islands"
            ], 
            "type": "string", 
            "description": "The time zone for scheduling operations."
          }, 
          "upgrade_policy": {
            "enum": [
              "SIMULTANEOUSLY", 
              "SEQUENTIALLY"
            ], 
            "type": "string", 
            "description": "The upgrade scheduling policy."
          }, 
          "distribution_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time of the next scheduled distribution."
          }, 
          "members": {
            "enum": [
              "upgradegroup:member"
            ], 
            "type": "string", 
            "description": "The upgrade group members."
          }, 
          "upgrade_dependent_group": {
            "type": "string", 
            "description": "The upgrade dependent group name."
          }, 
          "distribution_dependent_group": {
            "type": "string", 
            "description": "The distribution dependent group name."
          }, 
          "upgrade_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time of the next scheduled upgrade."
          }
        }
      }, 
      "grid_servicerestart_group_order": {
        "type": "object", 
        "properties": {
          "groups": {
            "type": "string", 
            "description": "The ordered list of the Service Restart Group."
          }
        }
      }, 
      "grid_threatanalytics": {
        "type": "object", 
        "properties": {
          "name": {
            "type": "string", 
            "description": "The Grid name."
          }, 
          "enable_auto_download": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the automatic threat analytics module set download is enabled."
          }, 
          "scheduled_download": {
            "enum": [
              "setting:schedule"
            ], 
            "type": "string", 
            "description": "The schedule settings for the threat analytics module set download."
          }, 
          "last_whitelist_update_version": {
            "type": "string", 
            "description": "The version number of the last updated threat analytics whitelist."
          }, 
          "last_whitelist_update_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The last update time for the threat analytics whitelist."
          }, 
          "enable_scheduled_download": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the scheduled download of the threat analytics module set is enabled."
          }, 
          "last_module_update_version": {
            "type": "string", 
            "description": "The version number of the last updated threat analytics module set."
          }, 
          "dns_tunnel_black_list_rpz_zones": {
            "enum": [
              "zone_rp"
            ], 
            "type": "string", 
            "description": "The list of response policy zones for DNS tunnelling requests."
          }, 
          "last_checked_for_update": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The last time when the threat analytics module set was checked for the update."
          }, 
          "last_module_update_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The last update time for the threat analytics module set."
          }, 
          "module_update_policy": {
            "enum": [
              "AUTOMATIC", 
              "MANUAL"
            ], 
            "type": "string", 
            "description": "The update policy for the threat analytics module set."
          }, 
          "current_moduleset": {
            "type": "string", 
            "description": "The current threat analytics module set."
          }
        }
      }, 
      "grid_member_cloudapi": {
        "type": "object", 
        "properties": {
          "status": {
            "enum": [
              "UNKNOWN", 
              "INACTIVE", 
              "WORKING", 
              "WARNING", 
              "FAILED"
            ], 
            "type": "string", 
            "description": "Status of Cloud API service on the member."
          }, 
          "allowed_api_admins": {
            "enum": [
              "grid:cloudapi:user"
            ], 
            "type": "string", 
            "description": "List of administrators allowed to perform Cloud Platform API requests on that member."
          }, 
          "member": {
            "enum": [
              "dhcpmember"
            ], 
            "type": "string", 
            "description": "The related Grid Member."
          }, 
          "gateway_config": {
            "enum": [
              "grid:cloudapi:gateway:config"
            ], 
            "type": "string", 
            "description": "Structure containing all the information related to Gateway configuration for the member"
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "allow_api_admins": {
            "enum": [
              "NONE", 
              "LIST", 
              "ALL"
            ], 
            "type": "string", 
            "description": "Defines which administrators are allowed to perform Cloud API request on the Grid Member: no administrators (NONE), any administrators (ALL) or administrators in the ACL list (LIST). Default is ALL."
          }, 
          "enable_service": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Controls whether the Cloud API service runs on the member or not."
          }
        }
      }, 
      "grid_cloudapi": {
        "type": "object", 
        "properties": {
          "allow_api_admins": {
            "enum": [
              "NONE", 
              "LIST", 
              "ALL"
            ], 
            "type": "string", 
            "description": "Defines administrators who can perform cloud API requests on the Grid Master. The valid value is NONE (no administrator), ALL (all administrators), or LIST (administrators on the ACL)."
          }, 
          "enable_recycle_bin": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the recycle bin for deleted cloud objects is enabled or not on the Grid Master."
          }, 
          "gateway_config": {
            "enum": [
              "grid:cloudapi:gateway:config"
            ], 
            "type": "string", 
            "description": "Structure containing all the information related to Gateway configuration for the Grid Master"
          }, 
          "allowed_api_admins": {
            "enum": [
              "grid:cloudapi:user"
            ], 
            "type": "string", 
            "description": "The list of administrators who can perform cloud API requests on the Cloud Platform Appliance."
          }
        }
      }, 
      "grid_cloudapi_vm": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "Comment for the vm object; maximum 1024 characters."
          }, 
          "availability_zone": {
            "type": "string", 
            "description": "Availability zone of the VM."
          }, 
          "tenant_name": {
            "type": "string", 
            "description": "Name of the tenant associated with the VM."
          }, 
          "primary_mac_address": {
            "type": "string", 
            "description": "MAC address associated with the VM's primary interface."
          }, 
          "first_seen": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the VM was first seen in the system."
          }, 
          "id": {
            "type": "string", 
            "description": "Unique ID associated with the VM. This is set only when the VM is first created."
          }, 
          "network_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "Number of Networks containing any address associated with this VM."
          }, 
          "vm_type": {
            "type": "string", 
            "description": "VM type; maximum 64 characters."
          }, 
          "subnet_id": {
            "type": "string", 
            "description": "Subnet ID of the network that is the container of the address associated with the VM's primary interface."
          }, 
          "hostname": {
            "type": "string", 
            "description": "Hostname part of the FQDN for the address associated with the VM's primary interface."
          }, 
          "elastic_ip_address": {
            "type": "string", 
            "description": "Elastic IP address associated with the VM's primary interface."
          }, 
          "vpc_cidr": {
            "type": "integer", 
            "example": "integer", 
            "description": "Network CIDR of the parent VPC."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "vpc_address": {
            "type": "string", 
            "description": "Network address of the parent VPC."
          }, 
          "kernel_id": {
            "type": "string", 
            "description": "Identifier of the kernel that this VM is running; maximum 128 characters."
          }, 
          "vpc_name": {
            "type": "string", 
            "description": "Name of the parent VPC."
          }, 
          "operating_system": {
            "type": "string", 
            "description": "Guest Operating system that this VM is running; maximum 128 characters."
          }, 
          "cloud_info": {
            "enum": [
              "grid:cloudapi:info"
            ], 
            "type": "string", 
            "description": "Structure containing all the cloud API related information for this object."
          }, 
          "subnet_cidr": {
            "type": "integer", 
            "example": "integer", 
            "description": "CIDR of the network that is the container of the address associated with the VM's primary interface."
          }, 
          "name": {
            "type": "string", 
            "description": "Name of the VM."
          }, 
          "subnet_address": {
            "type": "string", 
            "description": "Address of the network that is the container of the address associated with the VM's primary interface."
          }, 
          "vpc_id": {
            "type": "string", 
            "description": "Identifier of the parent VPC."
          }, 
          "last_seen": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the last event associated with the VM happened."
          }
        }
      }, 
      "upgradestatus": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "Comment in readable format for an upgrade group a or virtual node."
          }, 
          "upload_version_summary": {
            "type": "string", 
            "description": "Upload version summary for the 'type' requested. This field can be requested for the Grid, a certain group that has virtual nodes as subelements, or overall group status."
          }, 
          "ipv6_address": {
            "type": "string", 
            "description": "The IPv6 Address of virtual node or physical one."
          }, 
          "distribution_version": {
            "type": "string", 
            "description": "The version that is distributed."
          }, 
          "distribution_schedule_active": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the distribution schedule is active for the Grid."
          }, 
          "pnode_role": {
            "type": "string", 
            "description": "Status of the physical node in the HA pair."
          }, 
          "upgrade_test_status": {
            "enum": [
              "PROGRESSING", 
              "NONE", 
              "FAILED", 
              "COMPLETED"
            ], 
            "type": "string", 
            "description": "The upgrade test status of the Grid."
          }, 
          "grid_state": {
            "enum": [
              "DISTRIBUTING", 
              "DEFAULT", 
              "UPGRADING_FAILED", 
              "REVERTING_COMPLETE", 
              "DISTRIBUTING_COMPLETE", 
              "NONE", 
              "DISTRIBUTING_ENDED", 
              "DOWNGRADING_COMPLETE", 
              "UPLOADED", 
              "DISTRIBUTING_FAILED", 
              "DISTRIBUTING_PAUSED", 
              "UPGRADING_PAUSED", 
              "DOWNGRADING_FAILED", 
              "UPGRADING_COMPLETE", 
              "REVERTING", 
              "REVERTING_FAILED", 
              "UPGRADING", 
              "TEST_UPGRADING"
            ], 
            "type": "string", 
            "description": "The state of the Grid."
          }, 
          "current_version": {
            "type": "string", 
            "description": "The current version."
          }, 
          "message": {
            "type": "string", 
            "description": "The Grid message."
          }, 
          "upload_version": {
            "type": "string", 
            "description": "The version that is uploaded."
          }, 
          "steps_completed": {
            "enum": [
              "int"
            ], 
            "type": "string", 
            "description": "The number of steps done."
          }, 
          "subelements_completed": {
            "enum": [
              "int"
            ], 
            "type": "string", 
            "description": "Number of subelements that have accomplished an upgrade."
          }, 
          "alternate_version": {
            "type": "string", 
            "description": "The alternative version."
          }, 
          "subelements_total": {
            "enum": [
              "int"
            ], 
            "type": "string", 
            "description": "Number of subelements number in a certain group, virtual node, or the Grid."
          }, 
          "member": {
            "type": "string", 
            "description": "Member that participates in the upgrade process."
          }, 
          "subelement_type": {
            "enum": [
              "PNODE", 
              "GROUP", 
              "VNODE"
            ], 
            "type": "string", 
            "description": "The type of subelements to be requested. If 'type' is 'GROUP', or 'VNODE', then 'upgrade_group' or 'member' should have proper values for an operation to return data specific for the values passed. Otherwise, overall data is returned for every group or physical node."
          }, 
          "element_status": {
            "enum": [
              "FAILED", 
              "OFFLINE", 
              "WARNING", 
              "WORKING"
            ], 
            "type": "string", 
            "description": "The status of a certain element with regards to the type requested."
          }, 
          "allow_upgrade_pause": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the Grid is allowed to pause an upgrade."
          }, 
          "allow_distribution_scheduling": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if distribution scheduling is allowed."
          }, 
          "status_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The status time."
          }, 
          "distribution_state": {
            "enum": [
              "NONE", 
              "PROGRESSING", 
              "COMPLETED"
            ], 
            "type": "string", 
            "description": "The current state of distribution process."
          }, 
          "type": {
            "enum": [
              "GRID", 
              "GROUP", 
              "VNODE", 
              "PNODE"
            ], 
            "type": "string", 
            "description": "The type of upper level elements to be requested."
          }, 
          "reverted": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the upgrade process is reverted."
          }, 
          "upgrade_schedule_active": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the upgrade schedule is active."
          }, 
          "allow_upgrade_scheduling": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determine if the Grid is allowed to schedule an upgrade."
          }, 
          "allow_upgrade_resume": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the Grid is allowed to resume an upgrade."
          }, 
          "allow_distribution": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if distribution is allowed for the Grid."
          }, 
          "upgrade_group": {
            "type": "string", 
            "description": "Upgrade group that participates in the upgrade process."
          }, 
          "ipv4_address": {
            "type": "string", 
            "description": "The IPv4 Address of virtual node or physical one."
          }, 
          "status_value_update_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Timestamp of when the status was updated."
          }, 
          "distribution_version_summary": {
            "type": "string", 
            "description": "Distribution version summary for the 'type' requested. This field can be requested for the Grid, a certain group that has virtual nodes as subelements, or for the overall group status."
          }, 
          "status_value": {
            "enum": [
              "PROGRESSING", 
              "FAILURE", 
              "COMPLETED", 
              "NO_STATUS", 
              "NOT_CONNECTED"
            ], 
            "type": "string", 
            "description": "Status of a certain group, virtual node or physical node."
          }, 
          "allow_upgrade_test": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the Grid is allowed to test an upgrade."
          }, 
          "distribution_schedule_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The Grid master distribution schedule time."
          }, 
          "subelements_status": {
            "enum": [
              "upgradestatus"
            ], 
            "type": "string", 
            "description": "The upgrade process information of subelements."
          }, 
          "allow_upgrade": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if upgrade is allowed for the Grid."
          }, 
          "allow_upgrade_cancel": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the Grid is allowed to cancel an upgrade."
          }, 
          "steps_total": {
            "enum": [
              "int"
            ], 
            "type": "string", 
            "description": "Total number steps in the upgrade process."
          }, 
          "allow_upload": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determine if the Grid is allowed to upload a build."
          }, 
          "upgrade_state": {
            "enum": [
              "PROGRESSING", 
              "NONE"
            ], 
            "type": "string", 
            "description": "The upgrade state of the Grid."
          }, 
          "steps": {
            "enum": [
              "upgradestep"
            ], 
            "type": "string", 
            "description": "The list of upgrade process steps."
          }, 
          "group_state": {
            "enum": [
              "GROUP_UPGRADING_COMPLETE", 
              "GROUP_DISTRIBUTING_FAILED", 
              "GROUP_UPGRADING", 
              "GROUP_DISTRIBUTING", 
              "GROUP_UPGRADING_WAITING", 
              "UPGRADE_STARTED", 
              "GROUP_NONE", 
              "GROUP_DISTRIBUTING_WAITING", 
              "GROUP_DISTRIBUTING_COMPLETE"
            ], 
            "type": "string", 
            "description": "The state of a group."
          }, 
          "hotfixes": {
            "enum": [
              "hotfix"
            ], 
            "type": "string", 
            "description": "The list of hotfixes."
          }, 
          "ha_status": {
            "enum": [
              "ACTIVE", 
              "PASSIVE", 
              "NOT_CONFIGURED"
            ], 
            "type": "string", 
            "description": "Status of the HA pair."
          }, 
          "current_version_summary": {
            "type": "string", 
            "description": "Current version summary for the 'type' requested. This field can be requested for the Grid, a certain group that has virtual nodes as subelements, or for the overall group status."
          }
        }
      }, 
      "member": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "A descriptive comment of the Grid member."
          }, 
          "lcd_input": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the Liquid Crystal Display (LCD) input buttons on the front panel of the appliance are enabled or not."
          }, 
          "syslog_servers": {
            "enum": [
              "syslogserver"
            ], 
            "type": "string", 
            "description": "The list of external syslog servers."
          }, 
          "vpn_mtu": {
            "type": "integer", 
            "example": "integer", 
            "description": "The VPN maximum transmission unit (MTU)."
          }, 
          "mmdb_geoip_build_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "GeoIP Topology database build time."
          }, 
          "trap_notifications": {
            "enum": [
              "trapnotification"
            ], 
            "type": "string", 
            "description": "Determines configuration of the trap notifications."
          }, 
          "use_dns_resolver_setting": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: dns_resolver_setting"
          }, 
          "use_remote_console_access_enable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: remote_console_access_enable"
          }, 
          "time_zone": {
            "type": "string", 
            "description": "The time zone of the Grid member. The UTC string that represents the time zone, such as (UTC - 5:00) Eastern Time (US and Canada)."
          }, 
          "enable_ro_api_access": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to True and the member object is a Grid Master Candidate, then read-only API access is enabled."
          }, 
          "node_info": {
            "enum": [
              "nodeinfo"
            ], 
            "type": "string", 
            "description": "The node information list with detailed status report on the operations of the Grid Member."
          }, 
          "syslog_proxy_setting": {
            "enum": [
              "setting:syslogproxy"
            ], 
            "type": "string", 
            "description": "The Grid Member syslog proxy settings."
          }, 
          "service_status": {
            "enum": [
              "memberservicestatus"
            ], 
            "type": "string", 
            "description": "The service status list of a grid member."
          }, 
          "mmdb_ea_build_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Extensible attributes Topology database build time."
          }, 
          "enable_lom": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the LOM functionality is enabled or not."
          }, 
          "support_access_info": {
            "type": "string", 
            "description": "The information string for support access."
          }, 
          "use_threshold_traps": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: threshold_traps"
          }, 
          "support_access_enable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if support access for the Grid member should be enabled."
          }, 
          "enable_ha": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to True, the member has two physical nodes (HA pair)."
          }, 
          "use_support_access_enable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: support_access_enable"
          }, 
          "config_addr_type": {
            "enum": [
              "IPV4", 
              "IPV6", 
              "BOTH"
            ], 
            "type": "string", 
            "description": "Address configuration type."
          }, 
          "bgp_as": {
            "enum": [
              "bgpas"
            ], 
            "type": "string", 
            "description": "The BGP configuration for anycast for a Grid member."
          }, 
          "use_lcd_input": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: lcd_input"
          }, 
          "platform": {
            "enum": [
              "INFOBLOX", 
              "RIVERBED", 
              "CISCO", 
              "IBVM", 
              "VNIOS"
            ], 
            "type": "string", 
            "description": "Hardware Platform."
          }, 
          "email_setting": {
            "enum": [
              "setting:email"
            ], 
            "type": "string", 
            "description": "The e-mail settings for the Grid."
          }, 
          "vip_setting": {
            "enum": [
              "setting:network"
            ], 
            "type": "string", 
            "description": "The network settings for the Grid member."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "lom_users": {
            "enum": [
              "lomuser"
            ], 
            "type": "string", 
            "description": "The list of LOM users."
          }, 
          "use_enable_member_redirect": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: enable_member_redirect"
          }, 
          "lan2_enabled": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If this is set to true, the LAN2 port is enabled as an independent port or as a port for failover purposes."
          }, 
          "remote_console_access_enable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to True, superuser admins can access the Infoblox CLI from a remote location using an SSH (Secure Shell) v2 client."
          }, 
          "nat_setting": {
            "enum": [
              "natsetting"
            ], 
            "type": "string", 
            "description": "NAT settings for the member."
          }, 
          "router_id": {
            "type": "integer", 
            "example": "integer", 
            "description": "Virutal router identifier. Provide this ID if ha_enabled is set to true. This is a unique VRID number (from 1 to 255) for the local subnet."
          }, 
          "is_dscp_capable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if a Grid member supports DSCP (Differentiated Services Code Point)."
          }, 
          "lan2_port_setting": {
            "enum": [
              "lan2portsetting"
            ], 
            "type": "string", 
            "description": "Settings for the Grid member LAN2 port if 'lan2_enabled' is set to true."
          }, 
          "use_dscp": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: dscp"
          }, 
          "member_service_communication": {
            "enum": [
              "memberservicecommunication"
            ], 
            "type": "string", 
            "description": "Configure communication type for various services."
          }, 
          "ntp_setting": {
            "enum": [
              "member:ntp"
            ], 
            "type": "string", 
            "description": "The member Network Time Protocol (NTP) settings."
          }, 
          "mgmt_port_setting": {
            "enum": [
              "mgmtportsetting"
            ], 
            "type": "string", 
            "description": "Settings for the member MGMT port."
          }, 
          "upgrade_group": {
            "type": "string", 
            "description": "The name of the upgrade group to which this Grid member belongs."
          }, 
          "dscp": {
            "type": "integer", 
            "example": "integer", 
            "description": "The DSCP (Differentiated Services Code Point) value."
          }, 
          "use_external_syslog_backup_servers": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: external_syslog_backup_servers"
          }, 
          "additional_ip_list": {
            "enum": [
              "interface"
            ], 
            "type": "string", 
            "description": "The additional IP list of a Grid member. This list contains additional interface information that can be used at the member level. Note that interface structure(s) with interface type set to 'MGMT' are not supported."
          }, 
          "threshold_traps": {
            "enum": [
              "thresholdtrap"
            ], 
            "type": "string", 
            "description": "Determines the list of threshold traps. The user can only change the values for each trap or remove traps."
          }, 
          "lom_network_config": {
            "enum": [
              "lomnetworkconfig"
            ], 
            "type": "string", 
            "description": "The Network configurations for LOM."
          }, 
          "use_enable_lom": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: enable_lom"
          }, 
          "external_syslog_backup_servers": {
            "enum": [
              "extsyslogbackupserver"
            ], 
            "type": "string", 
            "description": "The list of external syslog backup servers."
          }, 
          "use_email_setting": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: email_setting"
          }, 
          "use_snmp_setting": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: snmp_setting"
          }, 
          "passive_ha_arp_enabled": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "The ARP protocol setting on the passive node of an HA pair. If you do not specify a value, the default value is false. You can only set this value to true if the member is an HA pair."
          }, 
          "dns_resolver_setting": {
            "enum": [
              "setting:dnsresolver"
            ], 
            "type": "string", 
            "description": "DNS resolver setting for member."
          }, 
          "master_candidate": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if a Grid member is a Grid Master Candidate or not. This flag enables the Grid member to assume the role of the Grid Master as a disaster recovery measure."
          }, 
          "snmp_setting": {
            "enum": [
              "setting:snmp"
            ], 
            "type": "string", 
            "description": "The Grid Member SNMP settings."
          }, 
          "static_routes": {
            "enum": [
              "setting:network"
            ], 
            "type": "string", 
            "description": "List of static routes."
          }, 
          "ipv6_static_routes": {
            "enum": [
              "ipv6setting"
            ], 
            "type": "string", 
            "description": "List of IPv6 static routes."
          }, 
          "use_trap_notifications": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: trap_notifications"
          }, 
          "enable_member_redirect": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the member will redirect GUI connections to the Grid Master or not."
          }, 
          "preserve_if_owns_delegation": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Set this flag to true to prevent the deletion of the member if any delegated object remains attached to it."
          }, 
          "ospf_list": {
            "enum": [
              "ospf"
            ], 
            "type": "string", 
            "description": "The OSPF area configuration (for anycast) list for a Grid member."
          }, 
          "external_syslog_server_enable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if external syslog servers should be enabled."
          }, 
          "use_time_zone": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: time_zone"
          }, 
          "use_syslog_proxy_setting": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: external_syslog_server_enable , syslog_servers, syslog_proxy_setting, syslog_size"
          }, 
          "syslog_size": {
            "type": "integer", 
            "example": "integer", 
            "description": "The maximum size for the syslog file expressed in megabytes."
          }, 
          "host_name": {
            "type": "string", 
            "description": "The host name of the Grid member."
          }, 
          "ipv6_setting": {
            "enum": [
              "ipv6setting"
            ], 
            "type": "string", 
            "description": "IPV6 setting for member."
          }, 
          "pre_provisioning": {
            "enum": [
              "preprovision"
            ], 
            "type": "string", 
            "description": "Pre-provisioning information."
          }, 
          "active_position": {
            "type": "string", 
            "description": "The active server of a Grid member."
          }, 
          "use_v4_vrrp": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Specify true to use VRRPv4 or false to use VRRPv6."
          }, 
          "service_type_configuration": {
            "enum": [
              "ALL_V4", 
              "ALL_V6", 
              "CUSTOM"
            ], 
            "type": "string", 
            "description": "Configure all services to the given type."
          }
        }
      }, 
      "member_filedistribution": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The Grid member descriptive comment."
          }, 
          "http_acls": {
            "enum": [
              "addressac"
            ], 
            "type": "string", 
            "description": "Access control (AC) settings for the HTTP protocol."
          }, 
          "ipv6_address": {
            "type": "string", 
            "description": "The IPv6 address of the Grid member."
          }, 
          "ftp_port": {
            "type": "integer", 
            "example": "integer", 
            "description": "The network port used by the FTP protocol."
          }, 
          "enable_tftp": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the TFTP prtocol is enabled for file distribution."
          }, 
          "tftp_port": {
            "type": "integer", 
            "example": "integer", 
            "description": "The network port used by the TFTP protocol."
          }, 
          "http_status": {
            "enum": [
              "UNKNOWN", 
              "INACTIVE", 
              "WORKING", 
              "WARNING", 
              "FAILED"
            ], 
            "type": "string", 
            "description": "The HTTP protocol status."
          }, 
          "tftp_status": {
            "enum": [
              "UNKNOWN", 
              "INACTIVE", 
              "WORKING", 
              "WARNING", 
              "FAILED"
            ], 
            "type": "string", 
            "description": "The TFTP protocol status."
          }, 
          "allow_uploads": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether uploads to the Grid member are allowed."
          }, 
          "ftp_acls": {
            "enum": [
              "addressac"
            ], 
            "type": "string", 
            "description": "Access control (AC) settings for the FTP protocol."
          }, 
          "tftp_acls": {
            "enum": [
              "addressac"
            ], 
            "type": "string", 
            "description": "The access control (AC) settings for the TFTP protocol."
          }, 
          "enable_ftp_passive": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the passive mode for FTP is enabled."
          }, 
          "ipv4_address": {
            "type": "string", 
            "description": "The IPv4 address of the Grid member."
          }, 
          "enable_ftp": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the FTP prtocol is enabled for file distribution."
          }, 
          "use_allow_uploads": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: allow_uploads"
          }, 
          "status": {
            "enum": [
              "UNKNOWN", 
              "INACTIVE", 
              "WORKING", 
              "WARNING", 
              "FAILED"
            ], 
            "type": "string", 
            "description": "The Grid member file distribution status."
          }, 
          "host_name": {
            "type": "string", 
            "description": "The Grid member host name."
          }, 
          "enable_http_acl": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the HTTP prtocol access control (AC) settings are enabled."
          }, 
          "enable_ftp_filelist": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the LIST command for FTP is enabled."
          }, 
          "enable_http": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the HTTP prtocol is enabled for file distribution."
          }, 
          "ftp_status": {
            "enum": [
              "UNKNOWN", 
              "INACTIVE", 
              "WORKING", 
              "WARNING", 
              "FAILED"
            ], 
            "type": "string", 
            "description": "The FTP protocol status."
          }
        }
      }, 
      "grid_license_pool": {
        "type": "object", 
        "properties": {
          "limit_context": {
            "enum": [
              "NONE", 
              "LEASES", 
              "MODEL", 
              "TIER"
            ], 
            "type": "string", 
            "description": "The license limit context."
          }, 
          "subpools": {
            "enum": [
              "grid:licensesubpool"
            ], 
            "type": "string", 
            "description": "The license pool subpools."
          }, 
          "temp_assigned": {
            "type": "integer", 
            "example": "integer", 
            "description": "The total number of temporary dynamic licenses allocated to vNIOS appliances."
          }, 
          "installed": {
            "type": "integer", 
            "example": "integer", 
            "description": "The total number of dynamic licenses allowed for this license pool."
          }, 
          "assigned": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of dynamic licenses allocated to vNIOS appliances."
          }, 
          "expiry_date": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The expiration timestamp of the license."
          }, 
          "limit": {
            "type": "string", 
            "description": "The limitation of dynamic license that can be allocated from the license pool."
          }, 
          "key": {
            "type": "string", 
            "description": "The license string for the license pool."
          }, 
          "expiration_status": {
            "enum": [
              "NOT_EXPIRED", 
              "EXPIRED", 
              "PERMANENT", 
              "EXPIRING_SOON", 
              "EXPIRING_VERY_SOON", 
              "DELETED"
            ], 
            "type": "string", 
            "description": "The license expiration status."
          }, 
          "model": {
            "type": "string", 
            "description": "The supported vNIOS virtual appliance model."
          }, 
          "type": {
            "enum": [
              "ANYCAST", 
              "CLOUD", 
              "CLOUD_API", 
              "DCA", 
              "DDI_TRIAL", 
              "DHCP", 
              "DISCOVERY", 
              "DNS", 
              "DNSQRW", 
              "DNS_CACHE_ACCEL", 
              "DTC", 
              "FIREEYE", 
              "FLEX_GRID_ACTIVATION", 
              "FLEX_GRID_ACTIVATION_MS", 
              "FREQ_CONTROL", 
              "GRID", 
              "GRID_MAINTENANCE", 
              "IPAM", 
              "IPAM_FREEWARE", 
              "LDAP", 
              "LOAD_BALANCER", 
              "MGM", 
              "MSMGMT", 
              "NIOS", 
              "NIOS_MAINTENANCE", 
              "NTP", 
              "OEM", 
              "QRD", 
              "REPORTING", 
              "REPORTING_SUB", 
              "RPZ", 
              "SECURITY_ECOSYSTEM", 
              "SW_TP", 
              "TAE", 
              "TFTP", 
              "THREAT_ANALYTICS", 
              "TP", 
              "TP_SUB", 
              "UNBOUND", 
              "VNIOS"
            ], 
            "type": "string", 
            "description": "The license type."
          }
        }
      }, 
      "license_gridwide": {
        "type": "object", 
        "properties": {
          "limit_context": {
            "enum": [
              "NONE", 
              "LEASES", 
              "MODEL", 
              "TIER"
            ], 
            "type": "string", 
            "description": "The license limit context."
          }, 
          "expiry_date": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The expiration timestamp of the license."
          }, 
          "limit": {
            "type": "string", 
            "description": "The license limit value."
          }, 
          "key": {
            "type": "string", 
            "description": "The license string."
          }, 
          "expiration_status": {
            "enum": [
              "NOT_EXPIRED", 
              "EXPIRED", 
              "PERMANENT", 
              "EXPIRING_SOON", 
              "EXPIRING_VERY_SOON", 
              "DELETED"
            ], 
            "type": "string", 
            "description": "The license expiration status."
          }, 
          "type": {
            "enum": [
              "ANYCAST", 
              "CLOUD", 
              "CLOUD_API", 
              "DCA", 
              "DDI_TRIAL", 
              "DHCP", 
              "DISCOVERY", 
              "DNS", 
              "DNSQRW", 
              "DNS_CACHE_ACCEL", 
              "DTC", 
              "FIREEYE", 
              "FLEX_GRID_ACTIVATION", 
              "FLEX_GRID_ACTIVATION_MS", 
              "FREQ_CONTROL", 
              "GRID", 
              "GRID_MAINTENANCE", 
              "IPAM", 
              "IPAM_FREEWARE", 
              "LDAP", 
              "LOAD_BALANCER", 
              "MGM", 
              "MSMGMT", 
              "NIOS", 
              "NIOS_MAINTENANCE", 
              "NTP", 
              "OEM", 
              "QRD", 
              "REPORTING", 
              "REPORTING_SUB", 
              "RPZ", 
              "SECURITY_ECOSYSTEM", 
              "SW_TP", 
              "TAE", 
              "TFTP", 
              "THREAT_ANALYTICS", 
              "TP", 
              "TP_SUB", 
              "UNBOUND", 
              "VNIOS"
            ], 
            "type": "string", 
            "description": "The license type."
          }
        }
      }, 
      "natgroup": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The NAT group descriptive comment."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of a NAT group object."
          }
        }
      }, 
      "grid_cloudapi_vmaddress": {
        "type": "object", 
        "properties": {
          "vm_vpc_ref": {
            "type": "string", 
            "description": "Reference to the VPC where the VM is defined."
          }, 
          "vm_vpc_cidr": {
            "type": "integer", 
            "example": "integer", 
            "description": "CIDR of the VPC of the VM that this address is associated with."
          }, 
          "private_address": {
            "type": "string", 
            "description": "Private IP address associated with this public (or elastic or floating) address, if this address is a public address; otherwise empty."
          }, 
          "vm_availability_zone": {
            "type": "string", 
            "description": "Availability zone of the VM."
          }, 
          "vm_kernel_id": {
            "type": "string", 
            "description": "Kernel ID of the VM that this address is associated with."
          }, 
          "ms_ad_user_data": {
            "enum": [
              "msserver:aduser:data"
            ], 
            "type": "string", 
            "description": "The Microsoft Active Directory user related information."
          }, 
          "dns_names": {
            "type": "string", 
            "description": "The list of all FQDNs associated with the IP address."
          }, 
          "public_hostname": {
            "type": "string", 
            "description": "Host part of the FQDN of this address if this address is a public (or elastic or floating) address; otherwise empty"
          }, 
          "port_id": {
            "type": "integer", 
            "example": "integer", 
            "description": "Port identifier of the interface."
          }, 
          "vm_last_update_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Last time the VM was updated."
          }, 
          "associated_ip": {
            "type": "string", 
            "description": "Reference to associated IPv4 or IPv6 address."
          }, 
          "vm_vpc_address": {
            "type": "string", 
            "description": "Network address of the VPC of the VM that this address is associated with."
          }, 
          "network": {
            "type": "string", 
            "description": "The network to which this address belongs, in IPv4 Address/CIDR format."
          }, 
          "subnet_id": {
            "type": "string", 
            "description": "Subnet ID that is the container of this address."
          }, 
          "vm_id": {
            "type": "string", 
            "description": "The UUID of the Virtual Machine."
          }, 
          "vm_operating_system": {
            "type": "string", 
            "description": "Operating system that the VM is running."
          }, 
          "associated_objects": {
            "enum": [
              "fixedaddress"
            ], 
            "type": "string", 
            "description": "The list of references to the object (Host, Fixed Address, RR, ...) that defines this IP."
          }, 
          "address_type": {
            "type": "string", 
            "description": "IP address type (Public, Private, Elastic, Floating, ...)."
          }, 
          "vm_comment": {
            "type": "string", 
            "description": "VM comment."
          }, 
          "mac_address": {
            "type": "string", 
            "description": "The MAC address of the interface."
          }, 
          "vm_hostname": {
            "type": "string", 
            "description": "Host part of the FQDN of the address attached to the primary interface."
          }, 
          "interface_name": {
            "type": "string", 
            "description": "Name of the interface associated with this IP address."
          }, 
          "vm_name": {
            "type": "string", 
            "description": "The name of the Virtual Machine."
          }, 
          "elastic_address": {
            "type": "string", 
            "description": "Elastic IP address associated with this private address, if this address is a private address; otherwise empty."
          }, 
          "public_address": {
            "type": "string", 
            "description": "Public IP address associated with this private address, if this address is a private address; otherwise empty."
          }, 
          "address": {
            "type": "string", 
            "description": "The IP address of the interface."
          }, 
          "cloud_info": {
            "enum": [
              "grid:cloudapi:info"
            ], 
            "type": "string", 
            "description": "Structure containing all the cloud API related information. Only management platform mgmt_platform is updated for this object."
          }, 
          "is_ipv4": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Indicates whether the address is IPv4 or IPv6."
          }, 
          "tenant": {
            "type": "string", 
            "description": "The Cloud API Tenant object."
          }, 
          "vm_type": {
            "type": "string", 
            "description": "Type of the VM this address is associated with."
          }, 
          "subnet_cidr": {
            "type": "integer", 
            "example": "integer", 
            "description": "CIDR of the subnet that is the container of this address."
          }, 
          "network_view": {
            "type": "string", 
            "description": "Network view name of the delegated object."
          }, 
          "vm_network_count": {
            "type": "integer", 
            "example": "integer", 
            "description": "Count of networks containing all the addresses of the VM."
          }, 
          "vm_creation_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Date/time the VM was first created as NIOS object."
          }, 
          "subnet_address": {
            "type": "string", 
            "description": "Network address of the subnet that is the container of this address."
          }, 
          "associated_object_types": {
            "type": "string", 
            "description": "Array of string denoting the types of underlying objects IPv4/IPv6 - A, AAAA, PTR, HOST, FA, RESERVATION, UNMANAGED + (BULKHOST, DHCP_RANGE, RESERVED_RANGE, LEASE, NETWORK, BROADCAST, PENDING),"
          }, 
          "vm_vpc_name": {
            "type": "string", 
            "description": "Name of the VPC where the VM is defined."
          }, 
          "vm_vpc_id": {
            "type": "string", 
            "description": "Identifier of the VPC where the VM is defined."
          }, 
          "private_hostname": {
            "type": "string", 
            "description": "Host part of the FQDN of this address if this address is a private address; otherwise empty"
          }
        }
      }, 
      "grid_maxminddbinfo": {
        "type": "object", 
        "properties": {
          "binary_major_version": {
            "type": "integer", 
            "example": "integer", 
            "description": "The major version of DB binary format."
          }, 
          "build_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time at which the DB was built."
          }, 
          "database_type": {
            "type": "string", 
            "description": "The structure of data records (GeoLite2-Country, GeoLite2-City, etc.)."
          }, 
          "member": {
            "type": "string", 
            "description": "The member for testing the connection."
          }, 
          "deployment_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time at which the current Topology DB was deployed."
          }, 
          "topology_type": {
            "enum": [
              "GEOIP", 
              "EA"
            ], 
            "type": "string", 
            "description": "The topology type."
          }, 
          "binary_minor_version": {
            "type": "integer", 
            "example": "integer", 
            "description": "The minor version of DB binary format."
          }
        }
      }, 
      "grid_filedistribution": {
        "type": "object", 
        "properties": {
          "name": {
            "type": "string", 
            "description": "The Grid name."
          }, 
          "enable_anonymous_ftp": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the FTP anonymous login is enabled."
          }, 
          "allow_uploads": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the uploads to Grid members are allowed."
          }, 
          "storage_limit": {
            "type": "integer", 
            "example": "integer", 
            "description": "Maximum storage in megabytes allowed on the Grid. The maximum storage space allowed for all file distribution services on a Grid is equal to the storage space allowed to the Grid member with the smallest amount of space allowed."
          }, 
          "global_status": {
            "enum": [
              "UNKNOWN", 
              "INACTIVE", 
              "WORKING", 
              "WARNING", 
              "FAILED"
            ], 
            "type": "string", 
            "description": "The Grid file distribution global status."
          }, 
          "backup_storage": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether to include distributed files in the backup."
          }, 
          "current_usage": {
            "type": "integer", 
            "example": "integer", 
            "description": "The value is the percentage of the allocated TFTP storage space that is used, expressed in tenth of a percent. Valid values are from 0 to 1000."
          }
        }
      }, 
      "grid": {
        "type": "object", 
        "properties": {
          "syslog_servers": {
            "enum": [
              "syslogserver"
            ], 
            "type": "string", 
            "description": "The list of external syslog servers."
          }, 
          "http_proxy_server_setting": {
            "enum": [
              "setting:httpproxyserver"
            ], 
            "type": "string", 
            "description": "The Grid HTTP proxy server settings."
          }, 
          "updates_download_member_config": {
            "enum": [
              "updatesdownloadmemberconfig"
            ], 
            "type": "string", 
            "description": "The list of member configuration structures, which provides information and settings for configuring the member that is responsible for downloading updates."
          }, 
          "trap_notifications": {
            "enum": [
              "trapnotification"
            ], 
            "type": "string", 
            "description": "Determines configuration of the trap notifications."
          }, 
          "informational_banner_setting": {
            "enum": [
              "grid:informationalbannersetting"
            ], 
            "type": "string", 
            "description": "The Grid informational level banner settings."
          }, 
          "syslog_facility": {
            "enum": [
              "DAEMON", 
              "LOCAL0", 
              "LOCAL1", 
              "LOCAL2", 
              "LOCAL3", 
              "LOCAL4", 
              "LOCAL5", 
              "LOCAL6", 
              "LOCAL7"
            ], 
            "type": "string", 
            "description": "If 'audit_to_syslog_enable' is set to True, the facility that determines the processes and daemons from which the log messages are generated."
          }, 
          "audit_log_format": {
            "enum": [
              "DETAILED", 
              "BRIEF"
            ], 
            "type": "string", 
            "description": "Determines the audit log format."
          }, 
          "mgm_strict_delegate_mode": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if strict delegate mode for the Grid managed by the Master Grid is enabled or not."
          }, 
          "service_status": {
            "enum": [
              "FAILED", 
              "UNKNOWN", 
              "OFFLINE", 
              "INACTIVE", 
              "WARNING", 
              "WORKING"
            ], 
            "type": "string", 
            "description": "Determines overall service status of the Grid."
          }, 
          "enable_lom": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the LOM functionality is enabled or not."
          }, 
          "restart_banner_setting": {
            "enum": [
              "grid:restartbannersetting"
            ], 
            "type": "string", 
            "description": "The setting for the Restart Banner."
          }, 
          "rpz_hit_rate_interval": {
            "type": "integer", 
            "example": "integer", 
            "description": "The time interval (in seconds) that determines how often the appliance calculates the RPZ hit rate."
          }, 
          "vpn_port": {
            "type": "integer", 
            "example": "integer", 
            "description": "The VPN port."
          }, 
          "deny_mgm_snapshots": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to True, the managed Grid will not send snapshots to the Multi-Grid Master."
          }, 
          "allow_recursive_deletion": {
            "enum": [
              "NOBODY", 
              "ALL", 
              "SUPERUSERS"
            ], 
            "type": "string", 
            "description": "The property to allow recursive deletion. Determines the users who can choose to perform recursive deletion on networks or zones from the GUI only."
          }, 
          "rpz_hit_rate_min_query": {
            "type": "integer", 
            "example": "integer", 
            "description": "The minimum number of incoming queries between the RPZ hit rate checks."
          }, 
          "audit_to_syslog_enable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to True, audit log messages are also copied to the syslog."
          }, 
          "enable_rir_swip": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the RIR/SWIP support is enabled or not."
          }, 
          "enable_gui_api_for_lan_vip": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to True, GUI and API access are enabled on the LAN/VIP port and MGMT port (if configured)."
          }, 
          "secret": {
            "type": "string", 
            "description": "The shared secret of the Grid. This is a write-only attribute."
          }, 
          "descendants_action": {
            "enum": [
              "extensibleattributedef:descendants"
            ], 
            "type": "string", 
            "description": "The default actions for extensbile attributes that exist on descendants."
          }, 
          "email_setting": {
            "enum": [
              "setting:email"
            ], 
            "type": "string", 
            "description": "The e-mail settings for the Grid."
          }, 
          "csp_api_config": {
            "enum": [
              "grid:cspapiconfig"
            ], 
            "type": "string", 
            "description": "The Grid csp api config settings."
          }, 
          "lom_users": {
            "enum": [
              "lomuser"
            ], 
            "type": "string", 
            "description": "The list of LOM users."
          }, 
          "consent_banner_setting": {
            "enum": [
              "grid:consentbannersetting"
            ], 
            "type": "string", 
            "description": "The Grid consent banner settings."
          }, 
          "rpz_hit_rate_max_query": {
            "type": "integer", 
            "example": "integer", 
            "description": "The maximum number of incoming queries between the RPZ hit rate checks."
          }, 
          "is_grid_visualization_visible": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to True, graphical visualization of the Grid is enabled."
          }, 
          "enable_recycle_bin": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the Recycle Bin is enabled or not."
          }, 
          "ntp_setting": {
            "enum": [
              "grid:ntp"
            ], 
            "type": "string", 
            "description": "The Grid Network Time Protocol (NTP) settings."
          }, 
          "password_setting": {
            "enum": [
              "setting:password"
            ], 
            "type": "string", 
            "description": "The Grid password settings."
          }, 
          "security_setting": {
            "enum": [
              "setting:security"
            ], 
            "type": "string", 
            "description": "The Grid security settings."
          }, 
          "dscp": {
            "type": "integer", 
            "example": "integer", 
            "description": "The DSCP value. Valid values are integers between 0 and 63 inclusive."
          }, 
          "ms_setting": {
            "enum": [
              "setting:msserver"
            ], 
            "type": "string", 
            "description": "The settings for all Microsoft servers in the Grid."
          }, 
          "threshold_traps": {
            "enum": [
              "thresholdtrap"
            ], 
            "type": "string", 
            "description": "Determines the list of threshold traps. The user can only change the values for each trap or remove traps."
          }, 
          "syslog_size": {
            "type": "integer", 
            "example": "integer", 
            "description": "The maximum size for the syslog file expressed in megabytes."
          }, 
          "external_syslog_backup_servers": {
            "enum": [
              "extsyslogbackupserver"
            ], 
            "type": "string", 
            "description": "The list of external backup syslog servers."
          }, 
          "nat_groups": {
            "type": "string", 
            "description": "The list of all Network Address Translation (NAT) groups configured on the Grid."
          }, 
          "scheduled_backup": {
            "enum": [
              "scheduledbackup"
            ], 
            "type": "string", 
            "description": "The scheduled backup configuration."
          }, 
          "snmp_setting": {
            "enum": [
              "setting:snmp"
            ], 
            "type": "string", 
            "description": "The Grid SNMP settings."
          }, 
          "dns_resolver_setting": {
            "enum": [
              "setting:dnsresolver"
            ], 
            "type": "string", 
            "description": "The DNS resolver setting."
          }, 
          "name": {
            "type": "string", 
            "description": "The grid name."
          }, 
          "enable_member_redirect": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines redirections is enabled or not for members."
          }, 
          "time_zone": {
            "type": "string", 
            "description": "The time zone of the Grid. The UTC string that represents the time zone, such as (UTC - 5:00) Eastern Time (US and Canada)."
          }, 
          "external_syslog_server_enable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to True, external syslog servers are enabled."
          }, 
          "security_banner_setting": {
            "enum": [
              "setting:securitybanner"
            ], 
            "type": "string", 
            "description": "The Grid security banner settings."
          }, 
          "objects_changes_tracking_setting": {
            "enum": [
              "objectschangestrackingsetting"
            ], 
            "type": "string", 
            "description": "Determines the object changes tracking settings."
          }, 
          "token_usage_delay": {
            "type": "integer", 
            "example": "integer", 
            "description": "The delayed usage (in minutes) of a permission token."
          }, 
          "restart_status": {
            "type": "string", 
            "description": "The restart status for the Grid."
          }
        }
      }, 
      "namedacl": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "Comment for the named ACL; maximum 256 characters."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of the named ACL."
          }, 
          "exploded_access_list": {
            "enum": [
              "addressac"
            ], 
            "type": "string", 
            "description": "The exploded access list for the named ACL. This list displays all the access control entries in a named ACL and its nested named ACLs, if applicable."
          }, 
          "access_list": {
            "enum": [
              "addressac"
            ], 
            "type": "string", 
            "description": "The access control list of IPv4/IPv6 addresses, networks, TSIG-based anonymous access controls, and other named ACLs."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }
        }
      }, 
      "deleted_objects": {
        "type": "object", 
        "properties": {
          "object_type": {
            "type": "string", 
            "description": "The object type of the deleted object. This is undefined if the object is not supported."
          }
        }
      }, 
      "vdiscoverytask": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "Comment on the task."
          }, 
          "state_msg": {
            "type": "string", 
            "description": "State message of the complete discovery process."
          }, 
          "driver_type": {
            "enum": [
              "VMWARE", 
              "AWS", 
              "OPENSTACK", 
              "AZURE"
            ], 
            "type": "string", 
            "description": "Type of discovery driver."
          }, 
          "auto_consolidate_managed_vm": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Whether to replace managed virtual machine with discovery vm data."
          }, 
          "auto_consolidate_cloud_ea": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Whether to insert or update cloud EAs with discovery data."
          }, 
          "fqdn_or_ip": {
            "type": "string", 
            "description": "FQDN or IP of the cloud management platform."
          }, 
          "auto_create_dns_hostname_template": {
            "type": "string", 
            "description": "Template string used to generate host name."
          }, 
          "use_identity": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set true, all keystone connection will use /identity endpoint and port value will be ignored."
          }, 
          "auto_consolidate_managed_tenant": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Whether to replace managed tenant with discovery tenant data."
          }, 
          "update_dns_view_public_ip": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to true, the appliance uses a specific DNS view for public IPs."
          }, 
          "protocol": {
            "enum": [
              "HTTP", 
              "HTTPS"
            ], 
            "type": "string", 
            "description": "Connection protocol used for connecting to the cloud management platform."
          }, 
          "public_network_view": {
            "type": "string", 
            "description": "Network view for public IPs."
          }, 
          "port": {
            "type": "integer", 
            "example": "integer", 
            "description": "Connection port used for connecting to the cloud management platform."
          }, 
          "auto_create_dns_record_type": {
            "enum": [
              "HOST_RECORD", 
              "A_PTR_RECORD"
            ], 
            "type": "string", 
            "description": "Indicates the type of record to create if the auto create DNS record is enabled."
          }, 
          "identity_version": {
            "enum": [
              "KEYSTONE_V2", 
              "KEYSTONE_V3"
            ], 
            "type": "string", 
            "description": "Identity service version."
          }, 
          "domain_name": {
            "type": "string", 
            "description": "The name of the domain to use with keystone v3."
          }, 
          "member": {
            "type": "string", 
            "description": "Member on which cloud discovery will be run."
          }, 
          "auto_create_dns_record": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Control whether to create or update DNS record using discovered data."
          }, 
          "public_network_view_mapping_policy": {
            "enum": [
              "DIRECT", 
              "AUTO_CREATE"
            ], 
            "type": "string", 
            "description": "Mapping policy for the network view for public IPs in discovery data."
          }, 
          "update_metadata": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Whether to update metadata as a result of this network discovery."
          }, 
          "username": {
            "type": "string", 
            "description": "Username used for connecting to the cloud management platform."
          }, 
          "private_network_view_mapping_policy": {
            "enum": [
              "DIRECT", 
              "AUTO_CREATE"
            ], 
            "type": "string", 
            "description": "Mapping policy for the network view for private IPs in discovery data."
          }, 
          "state": {
            "enum": [
              "IDLE", 
              "READY", 
              "RUNNING", 
              "COMPLETE", 
              "CANCEL_COMPLETE", 
              "ERROR", 
              "CANCEL_PENDING", 
              "WARNING"
            ], 
            "type": "string", 
            "description": "Current state of this task."
          }, 
          "scheduled_run": {
            "enum": [
              "setting:schedule"
            ], 
            "type": "string", 
            "description": "Schedule setting for cloud discovery task."
          }, 
          "credentials_type": {
            "enum": [
              "DIRECT", 
              "INDIRECT"
            ], 
            "type": "string", 
            "description": "Credentials type used for connecting to the cloud management platform."
          }, 
          "private_network_view": {
            "type": "string", 
            "description": "Network view for private IPs."
          }, 
          "dns_view_public_ip": {
            "type": "string", 
            "description": "The DNS view name for public IPs."
          }, 
          "password": {
            "type": "string", 
            "description": "Password used for connecting to the cloud management platform."
          }, 
          "update_dns_view_private_ip": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "If set to true, the appliance uses a specific DNS view for private IPs."
          }, 
          "allow_unsecured_connection": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Allow unsecured connection over HTTPS and bypass validation of the remote SSL certificate."
          }, 
          "name": {
            "type": "string", 
            "description": "Name of this cloud discovery task. Uniquely identify a task."
          }, 
          "enabled": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Whether to enabled the cloud discovery or not."
          }, 
          "last_run": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "Timestamp of last run."
          }, 
          "dns_view_private_ip": {
            "type": "string", 
            "description": "The DNS view name for private IPs."
          }, 
          "merge_data": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Whether to replace the old data with new or not."
          }
        }
      }, 
      "grid_license_pool_container": {
        "type": "object", 
        "properties": {
          "lpc_uid": {
            "type": "string", 
            "description": "The world-wide unique ID for the license pool container."
          }, 
          "last_entitlement_update": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the last pool licenses were updated."
          }
        }
      }, 
      "cacertificate": {
        "type": "object", 
        "properties": {
          "distinguished_name": {
            "type": "string", 
            "description": "The certificate subject name."
          }, 
          "valid_not_before": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The date before which the certificate is not valid."
          }, 
          "valid_not_after": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The date after which the certificate becomes invalid."
          }, 
          "serial": {
            "type": "string", 
            "description": "The certificate serial number in hex format."
          }, 
          "used_by": {
            "type": "string", 
            "description": "Information about the CA certificate usage."
          }, 
          "issuer": {
            "type": "string", 
            "description": "The certificate issuer subject name."
          }
        }
      }, 
      "capacityreport": {
        "type": "object", 
        "properties": {
          "hardware_type": {
            "type": "string", 
            "description": "Hardware type of a Grid member."
          }, 
          "name": {
            "type": "string", 
            "description": "The Grid member name."
          }, 
          "total_objects": {
            "type": "integer", 
            "example": "integer", 
            "description": "The total number of objects created by the Grid member."
          }, 
          "max_capacity": {
            "type": "integer", 
            "example": "integer", 
            "description": "The maximum amount of capacity available for the Grid member."
          }, 
          "role": {
            "type": "string", 
            "description": "The Grid member role."
          }, 
          "percent_used": {
            "type": "integer", 
            "example": "integer", 
            "description": "The percentage of the capacity in use by the Grid member."
          }, 
          "object_counts": {
            "enum": [
              "capacityreport:objectcount"
            ], 
            "type": "string", 
            "description": "A list of instance counts for object types created on the Grid member."
          }
        }
      }, 
      "grid_servicerestart_request_changedobject": {
        "type": "object", 
        "properties": {
          "object_type": {
            "type": "string", 
            "description": "The type of the changed object. This is undefined if the object is not supported."
          }, 
          "object_name": {
            "type": "string", 
            "description": "The name of the changed object."
          }, 
          "changed_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time when the object was changed."
          }, 
          "action": {
            "enum": [
              "DELETED", 
              "CREATED", 
              "MODIFIED", 
              "CALLED", 
              "MESSAGE", 
              "LOGIN_ALLOWED", 
              "LOGIN_DENIED", 
              "LOGOUT"
            ], 
            "type": "string", 
            "description": "The operation on the changed object."
          }, 
          "changed_properties": {
            "type": "string", 
            "description": "The list of changed properties in the object."
          }, 
          "user_name": {
            "type": "string", 
            "description": "The name of the user who changed the object properties."
          }
        }
      }, 
      "member_threatprotection": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The human readable comment for member threat protection properties."
          }, 
          "ipv4address": {
            "type": "string", 
            "description": "The IPv4 address of member threat protection service."
          }, 
          "hardware_type": {
            "type": "string", 
            "description": "The hardware type of the member."
          }, 
          "nat_rules": {
            "enum": [
              "threatprotection:natrule"
            ], 
            "type": "string", 
            "description": "The list of NAT rules."
          }, 
          "outbound_settings": {
            "enum": [
              "setting:atpoutbound"
            ], 
            "type": "string", 
            "description": "Outbound settings for ATP events."
          }, 
          "ipv6address": {
            "type": "string", 
            "description": "The IPv6 address of member threat protection service."
          }, 
          "use_events_per_second_per_rule": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: events_per_second_per_rule"
          }, 
          "use_disable_multiple_dns_tcp_request": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: disable_multiple_dns_tcp_request"
          }, 
          "events_per_second_per_rule": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of events logged per second per rule."
          }, 
          "enable_nat_rules": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if NAT (Network Address Translation) mapping for threat protection is enabled or not."
          }, 
          "hardware_model": {
            "type": "string", 
            "description": "The hardware model of the member."
          }, 
          "use_outbound_settings": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: outbound_settings"
          }, 
          "profile": {
            "type": "string", 
            "description": "The Threat Protection profile associated with the member."
          }, 
          "disable_multiple_dns_tcp_request": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if multiple BIND responses via TCP connection is enabled or not."
          }, 
          "current_ruleset": {
            "type": "string", 
            "description": "The ruleset used for threat protection."
          }, 
          "host_name": {
            "type": "string", 
            "description": "A Grid member name."
          }, 
          "use_current_ruleset": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: current_ruleset"
          }, 
          "use_enable_nat_rules": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Use flag for: enable_nat_rules"
          }, 
          "enable_service": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the Threat protection service is enabled or not."
          }
        }
      }, 
      "mastergrid": {
        "type": "object", 
        "properties": {
          "status": {
            "enum": [
              "FAILED", 
              "WARNING", 
              "WORKING", 
              "INACTIVE"
            ], 
            "type": "string", 
            "description": "The Master Grid's status."
          }, 
          "enable": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the Master Grid is enabled."
          }, 
          "connection_disabled": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if the sub-grid is currently disabled."
          }, 
          "last_event": {
            "enum": [
              "EVICT", 
              "DISABLE", 
              "MESSAGE", 
              "ATTACH", 
              "DETACH"
            ], 
            "type": "string", 
            "description": "The Master Grid's last event."
          }, 
          "last_event_details": {
            "type": "string", 
            "description": "The details of the Master Grid's last event."
          }, 
          "joined": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "The flag shows if the Grid has joined the Master Grid."
          }, 
          "last_sync_timestamp": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp or the last synchronization operation with the Master Grid."
          }, 
          "connection_timestamp": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp that indicates when the connection to the Master Grid was established."
          }, 
          "use_mgmt_port": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "The flag shows if the MGMT port was used to join the Grid."
          }, 
          "address": {
            "type": "string", 
            "description": "The domain name or IP address for the Master Grid."
          }, 
          "detached": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "The detached flag for the Master Grid."
          }, 
          "port": {
            "type": "integer", 
            "example": "integer", 
            "description": "The Master Grid port to which the Grid connects."
          }
        }
      }, 
      "dbsnapshot": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The descriptive comment."
          }, 
          "timestamp": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time when the latest OneDB snapshot was taken in Epoch seconds format."
          }
        }
      }, 
      "upgradeschedule": {
        "type": "object", 
        "properties": {
          "active": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the upgrade schedule is active."
          }, 
          "start_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The start time of the upgrade."
          }, 
          "time_zone": {
            "enum": [
              "(UTC - 12:00)", 
              "(UTC - 11:00) Midway Island, Samoa", 
              "(UTC - 10:00) Hawaii", 
              "(UTC - 9:00) Alaska", 
              "(UTC - 8:00) Pacific Time (US and Canada), Tijuana", 
              "(UTC - 7:00) Arizona", 
              "(UTC - 7:00) Mountain Time (US and Canada)", 
              "(UTC - 6:00) Central Time (US and Canada)", 
              "(UTC - 6:00) Mexico City, Tegucigalpa", 
              "(UTC - 6:00) Saskatchewan", 
              "(UTC - 5:00) Bogota, Lima, Quito", 
              "(UTC - 5:00) Eastern Time (US and Canada)", 
              "(UTC - 5:00) Indiana (East)", 
              "(UTC - 4:00) Caracas", 
              "(UTC - 4:00) Atlantic Time (Canada)", 
              "(UTC - 4:00) Santiago", 
              "(UTC - 3:30) Newfoundland", 
              "(UTC - 3:00) Brasilia", 
              "(UTC - 3:00) Buenos Aires", 
              "(UTC - 2:00) Mid-Atlantic", 
              "(UTC - 1:00) Azores", 
              "(UTC) Coordinated Universal Time", 
              "(UTC) Dublin", 
              "(UTC) Lisbon", 
              "(UTC) London", 
              "(UTC + 1:00) Casablanca", 
              "(UTC + 1:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna", 
              "(UTC + 1:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague", 
              "(UTC + 1:00) Brussels, Copenhagen, Madrid, Paris", 
              "(UTC + 1:00) Sarajevo, Skopje, Sofija, Warsaw, Zagreb", 
              "(UTC + 2:00) Athens, Vilnius", 
              "(UTC + 2:00) Bucharest", 
              "(UTC + 2:00) Cairo", 
              "(UTC + 2:00) Harare", 
              "(UTC + 2:00) Helsinki", 
              "(UTC + 2:00) Jerusalem", 
              "(UTC + 2:00) Kaliningrad", 
              "(UTC + 3:00) Baghdad, Istanbul, Kuwait, Minsk, Riyadh", 
              "(UTC + 3:00) Moscow, St. Petersburg, Volgograd", 
              "(UTC + 3:00) Nairobi", 
              "(UTC + 3:30) Tehran", 
              "(UTC + 4:00) Dubai", 
              "(UTC + 4:00) Baku", 
              "(UTC + 4:00) Samara", 
              "(UTC + 4:30) Kabul", 
              "(UTC + 5:00) Ekaterinburg", 
              "(UTC + 5:00) Islamabad, Karachi", 
              "(UTC + 5:30) Bombay, Calcutta, Madras, New Delhi", 
              "(UTC + 5:30) Colombo", 
              "(UTC + 6:00) Dhaka", 
              "(UTC + 6:00) Omsk", 
              "(UTC + 6:30) Rangoon", 
              "(UTC + 7:00) Bangkok, Hanoi", 
              "(UTC + 7:00) Krasnoyarsk", 
              "(UTC + 8:00) Beijing, Chongqing, Shanghai", 
              "(UTC + 8:00) Hong Kong", 
              "(UTC + 8:00) Irkutsk", 
              "(UTC + 8:00) Perth", 
              "(UTC + 8:00) Singapore", 
              "(UTC + 8:00) Taipei", 
              "(UTC + 9:00) Osaka, Sapporo, Tokyo", 
              "(UTC + 9:00) Seoul", 
              "(UTC + 9:00) Yakutsk", 
              "(UTC + 9:30) Adelaide", 
              "(UTC + 9:30) Darwin", 
              "(UTC + 10:00) Brisbane", 
              "(UTC + 10:00) Canberra, Sydney", 
              "(UTC + 10:00) Melbourne, Victoria", 
              "(UTC + 10:00) Guam", 
              "(UTC + 10:00) Hobart", 
              "(UTC + 10:00) Vladivostok", 
              "(UTC + 11:00) Solomon Islands", 
              "(UTC + 11:00) Magadan", 
              "(UTC + 12:00) Anadyr", 
              "(UTC + 12:00) Auckland", 
              "(UTC + 12:00) Fiji", 
              "(UTC + 12:00) Marshall Islands"
            ], 
            "type": "string", 
            "description": "The time zone for upgrade start time."
          }, 
          "upgrade_groups": {
            "enum": [
              "upgradegroup:schedule"
            ], 
            "type": "string", 
            "description": "The upgrade groups scheduling settings."
          }
        }
      }, 
      "db_objects": {
        "type": "object", 
        "properties": {
          "last_sequence_id": {
            "type": "string", 
            "description": "The last returned sequence ID."
          }, 
          "object": {
            "type": "string", 
            "description": "The record object when supported by WAPI. Otherwise, the value is None."
          }, 
          "unique_id": {
            "type": "string", 
            "description": "The unique ID of the requested object."
          }, 
          "object_type": {
            "type": "string", 
            "description": "The object type. This is undefined if the object is not supported."
          }
        }
      }, 
      "grid_servicerestart_request": {
        "type": "object", 
        "properties": {
          "forced": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Indicates if this is a force restart."
          }, 
          "group": {
            "type": "string", 
            "description": "The name of the Restart Group associated with the request."
          }, 
          "service": {
            "enum": [
              "DNS", 
              "DHCPV4", 
              "DHCPV6"
            ], 
            "type": "string", 
            "description": "The service to restart."
          }, 
          "last_updated_time": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The timestamp when the status of the request has changed."
          }, 
          "member": {
            "type": "string", 
            "description": "The member to restart."
          }, 
          "needed": {
            "enum": [
              "UNKNOWN", 
              "CHECKING", 
              "YES", 
              "NO", 
              "FAILURE"
            ], 
            "type": "string", 
            "description": "Indicates if restart is needed."
          }, 
          "state": {
            "enum": [
              "NEW", 
              "QUEUED", 
              "PROCESSING", 
              "FINISHED"
            ], 
            "type": "string", 
            "description": "The state of the request."
          }, 
          "result": {
            "enum": [
              "SUCCESS", 
              "TIMEOUT", 
              "FAILURE", 
              "NORESTART"
            ], 
            "type": "string", 
            "description": "The result of the restart operation."
          }, 
          "error": {
            "type": "string", 
            "description": "The error message if restart has failed."
          }, 
          "order": {
            "enum": [
              "int"
            ], 
            "type": "string", 
            "description": "The order to restart."
          }
        }
      }, 
      "member_license": {
        "type": "object", 
        "properties": {
          "limit_context": {
            "enum": [
              "NONE", 
              "LEASES", 
              "MODEL", 
              "TIER"
            ], 
            "type": "string", 
            "description": "The license limit context."
          }, 
          "kind": {
            "enum": [
              "Dynamic", 
              "Static", 
              "Payg", 
              "Gridwide"
            ], 
            "type": "string", 
            "description": "The overall type of license: static or dynamic."
          }, 
          "hwid": {
            "type": "string", 
            "description": "The hardware ID of the physical node on which the license is installed."
          }, 
          "expiry_date": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The expiration timestamp of the license."
          }, 
          "limit": {
            "type": "string", 
            "description": "The license limit value."
          }, 
          "key": {
            "type": "string", 
            "description": "License string."
          }, 
          "expiration_status": {
            "enum": [
              "NOT_EXPIRED", 
              "EXPIRED", 
              "PERMANENT", 
              "EXPIRING_SOON", 
              "EXPIRING_VERY_SOON", 
              "DELETED"
            ], 
            "type": "string", 
            "description": "The license expiration status."
          }, 
          "type": {
            "enum": [
              "ANYCAST", 
              "CLOUD", 
              "CLOUD_API", 
              "DCA", 
              "DDI_TRIAL", 
              "DHCP", 
              "DISCOVERY", 
              "DNS", 
              "DNSQRW", 
              "DNS_CACHE_ACCEL", 
              "DTC", 
              "FIREEYE", 
              "FLEX_GRID_ACTIVATION", 
              "FLEX_GRID_ACTIVATION_MS", 
              "FREQ_CONTROL", 
              "GRID", 
              "GRID_MAINTENANCE", 
              "IPAM", 
              "IPAM_FREEWARE", 
              "LDAP", 
              "LOAD_BALANCER", 
              "MGM", 
              "MSMGMT", 
              "NIOS", 
              "NIOS_MAINTENANCE", 
              "NTP", 
              "OEM", 
              "QRD", 
              "REPORTING", 
              "REPORTING_SUB", 
              "RPZ", 
              "SECURITY_ECOSYSTEM", 
              "SW_TP", 
              "TAE", 
              "TFTP", 
              "THREAT_ANALYTICS", 
              "TP", 
              "TP_SUB", 
              "UNBOUND", 
              "VNIOS"
            ], 
            "type": "string", 
            "description": "The license type."
          }
        }
      }, 
      "tftpfiledir": {
        "type": "object", 
        "properties": {
          "name": {
            "type": "string", 
            "description": "The TFTP directory or file name."
          }, 
          "is_synced_to_gm": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines whether the TFTP entity is synchronized to Grid Master."
          }, 
          "last_modify": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time when the file or directory was last modified."
          }, 
          "directory": {
            "type": "string", 
            "description": "The path to the directory that contains file or subdirectory."
          }, 
          "type": {
            "enum": [
              "DIRECTORY", 
              "FILE"
            ], 
            "type": "string", 
            "description": "The type of TFTP file system entity (directory or file)."
          }, 
          "vtftp_dir_members": {
            "enum": [
              "vtftpdirmember"
            ], 
            "type": "string", 
            "description": "The replication members with TFTP client addresses where this virtual folder is applicable."
          }
        }
      }, 
      "grid_threatprotection": {
        "type": "object", 
        "properties": {
          "last_rule_update_timestamp": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The last rule update timestamp."
          }, 
          "rule_update_policy": {
            "enum": [
              "AUTOMATIC", 
              "MANUAL"
            ], 
            "type": "string", 
            "description": "The update rule policy."
          }, 
          "nat_rules": {
            "enum": [
              "threatprotection:natrule"
            ], 
            "type": "string", 
            "description": "The list of NAT mapping rules for threat protection."
          }, 
          "outbound_settings": {
            "enum": [
              "setting:atpoutbound"
            ], 
            "type": "string", 
            "description": "Outbound settings for ATP events."
          }, 
          "events_per_second_per_rule": {
            "type": "integer", 
            "example": "integer", 
            "description": "The number of events logged per second per rule."
          }, 
          "enable_auto_download": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if auto download service is enabled."
          }, 
          "enable_nat_rules": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if NAT (Network Address Translation) mapping for threat protection is enabled or not."
          }, 
          "scheduled_download": {
            "enum": [
              "setting:schedule"
            ], 
            "type": "string", 
            "description": "The schedule setting for automatic rule update."
          }, 
          "grid_name": {
            "type": "string", 
            "description": "The Grid name."
          }, 
          "disable_multiple_dns_tcp_request": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if multiple BIND responses via TCP connection are disabled."
          }, 
          "last_rule_update_version": {
            "type": "string", 
            "description": "The version of last rule update."
          }, 
          "current_ruleset": {
            "type": "string", 
            "description": "The current Grid ruleset."
          }, 
          "last_checked_for_update": {
            "enum": [
              "timestamp"
            ], 
            "type": "string", 
            "description": "The time when the Grid last checked for updates."
          }, 
          "enable_scheduled_download": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if scheduled download is enabled. The default frequency is once in every 24 hours if it is disabled."
          }
        }
      }
    }
  }, 
  "openapi": "3.0.0"
}