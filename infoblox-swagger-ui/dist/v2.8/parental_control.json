{
  "info": {
    "version": "v2.8", 
    "contact": {
      "name": "Krishna", 
      "email": "kvasudevan@infoblox.com"
    }, 
    "description": "Sample WAPI Documentation", 
    "license": {
      "url": "https://www.infoblox.com/", 
      "name": "Infoblox License"
    }, 
    "title": "Infoblox WAPI"
  }, 
  "paths": {
    "/wapi/v2.8/parentalcontrol:avp/{parentalcontrol:avp_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_avp"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:avp", 
            "required": true, 
            "name": "parentalcontrol:avp_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:avp"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vendor_id": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "domain_types": {
                    "type": "string", 
                    "example": "[u'SUBS_ID', u'ANCILLARY', u'NAS_CONTEXT', u'IP_SPACE_DIS']"
                  }, 
                  "value_type": {
                    "type": "string", 
                    "example": "[u'IPV6ADDR', u'STRING', u'DATE', u'INTEGER', u'BYTE', u'IPV6IFID', u'IPADDR', u'SHORT', u'IPV6PREFIX', u'OCTETS', u'INTEGER64']"
                  }, 
                  "is_restricted": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "vendor_type": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "type": {
                    "type": "string", 
                    "example": "uint"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the parentalcontrol:avp resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the parentalcontrol:avp resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:avp", 
            "required": true, 
            "name": "parentalcontrol:avp_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "parentalcontrol:avp"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_avp"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:avp", 
            "required": true, 
            "name": "parentalcontrol:avp_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:avp"
        ]
      }
    }, 
    "/wapi/v2.8/parentalcontrol:subscribersite": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "blocking_ipv4_vip1": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "blocking_ipv4_vip2": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "maximum_subscribers": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "msps": {
                    "type": "string", 
                    "example": "[{u'ip_address': u'string'}]"
                  }, 
                  "nas_port": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "spms": {
                    "type": "string", 
                    "example": "[{u'ip_address': u'string'}]"
                  }, 
                  "members": {
                    "type": "string", 
                    "example": "[{u'type': u'enum', u'name': u'string'}]"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "nas_gateways": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'name': u'string', u'send_ack': u'bool', u'message_rate': u'uint', u'shared_secret': u'string', u'ip_address': u'string'}]"
                  }, 
                  "blocking_ipv6_vip2": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "blocking_ipv6_vip1": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_subscribersite"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:subscribersite"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_subscribersite"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "blocking_ipv4_vip1", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "blocking_ipv4_vip2", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "blocking_ipv6_vip1", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "blocking_ipv6_vip2", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:subscribersite"
        ]
      }
    }, 
    "/wapi/v2.8/parentalcontrol:avp": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "vendor_id": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "domain_types": {
                    "type": "string", 
                    "example": "[u'SUBS_ID', u'ANCILLARY', u'NAS_CONTEXT', u'IP_SPACE_DIS']"
                  }, 
                  "value_type": {
                    "type": "string", 
                    "example": "[u'IPV6ADDR', u'STRING', u'DATE', u'INTEGER', u'BYTE', u'IPV6IFID', u'IPADDR', u'SHORT', u'IPV6PREFIX', u'OCTETS', u'INTEGER64']"
                  }, 
                  "is_restricted": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "vendor_type": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "type": {
                    "type": "string", 
                    "example": "uint"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_avp"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:avp"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_avp"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "comment", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vendor_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "vendor_type", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:avp"
        ]
      }
    }, 
    "/wapi/v2.8/parentalcontrol:subscriber/{parentalcontrol:subscriber_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_subscriber"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:subscriber", 
            "required": true, 
            "name": "parentalcontrol:subscriber_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:subscriber"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "nas_context_info": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "cat_acctname": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "ip_space_disc_regexp": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "subscriber_id_regexp": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "cat_update_frequency": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "ancillaries": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "ident": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "ip_space_discriminator": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "ip_anchors": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "enable_mgmt_only_nas": {
                    "type": "string", 
                    "example": "bool"
                  }, 
                  "category_url": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "subscriber_id_subexpression": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "cat_password": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "subscriber_id": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "interim_accounting_interval": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "pc_zone_name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "ip_space_disc_subexpression": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "enable_parental_control": {
                    "type": "string", 
                    "example": "bool"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the parentalcontrol:subscriber resource"
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_subscriber"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:subscriber", 
            "required": true, 
            "name": "parentalcontrol:subscriber_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:subscriber"
        ]
      }
    }, 
    "/wapi/v2.8/parentalcontrol:subscriber": {
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_subscriber"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "subscriber_id", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:subscriber"
        ]
      }
    }, 
    "/wapi/v2.8/parentalcontrol:ipspacediscriminator": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "value": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_ipspacediscriminator"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:ipspacediscriminator"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_ipspacediscriminator"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "minimum": 1, 
              "type": "integer"
            }, 
            "description": "Enter the number of results to be fetched", 
            "required": false, 
            "name": "_max_results", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if paging is required. If SET, _max_results and _return_as_object must be entered.", 
            "required": false, 
            "name": "_paging", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the page ID for fetching next page", 
            "required": false, 
            "name": " _page_id", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "name", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the value of the field", 
            "required": false, 
            "name": "value", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:ipspacediscriminator"
        ]
      }
    }, 
    "/wapi/v2.8/parentalcontrol:subscribersite/{parentalcontrol:subscribersite_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_subscribersite"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:subscribersite", 
            "required": true, 
            "name": "parentalcontrol:subscribersite_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:subscribersite"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "comment": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "blocking_ipv4_vip1": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "blocking_ipv4_vip2": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "maximum_subscribers": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "msps": {
                    "type": "string", 
                    "example": "[{u'ip_address': u'string'}]"
                  }, 
                  "nas_port": {
                    "type": "string", 
                    "example": "uint"
                  }, 
                  "spms": {
                    "type": "string", 
                    "example": "[{u'ip_address': u'string'}]"
                  }, 
                  "members": {
                    "type": "string", 
                    "example": "[{u'type': u'enum', u'name': u'string'}]"
                  }, 
                  "extattrs": {
                    "type": "string", 
                    "example": "extattr"
                  }, 
                  "nas_gateways": {
                    "type": "string", 
                    "example": "[{u'comment': u'string', u'name': u'string', u'send_ack': u'bool', u'message_rate': u'uint', u'shared_secret': u'string', u'ip_address': u'string'}]"
                  }, 
                  "blocking_ipv6_vip2": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "blocking_ipv6_vip1": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the parentalcontrol:subscribersite resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the parentalcontrol:subscribersite resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:subscribersite", 
            "required": true, 
            "name": "parentalcontrol:subscribersite_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "parentalcontrol:subscribersite"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_subscribersite"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:subscribersite", 
            "required": true, 
            "name": "parentalcontrol:subscribersite_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:subscribersite"
        ]
      }
    }, 
    "/wapi/v2.8/parentalcontrol:ipspacediscriminator/{parentalcontrol:ipspacediscriminator_reference}": {
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_ipspacediscriminator"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:ipspacediscriminator", 
            "required": true, 
            "name": "parentalcontrol:ipspacediscriminator_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:ipspacediscriminator"
        ], 
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object", 
                "properties": {
                  "name": {
                    "type": "string", 
                    "example": "string"
                  }, 
                  "value": {
                    "type": "string", 
                    "example": "string"
                  }
                }
              }
            }
          }, 
          "required": true, 
          "description": "Enter the request body here"
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Update the parentalcontrol:ipspacediscriminator resource"
      }, 
      "delete": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object", 
                  "properties": {
                    "$ref": {
                      "type": "string", 
                      "description": "Reference of the deleted string"
                    }
                  }
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "description": "Delete the parentalcontrol:ipspacediscriminator resource", 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:ipspacediscriminator", 
            "required": true, 
            "name": "parentalcontrol:ipspacediscriminator_reference", 
            "in": "path"
          }
        ], 
        "tags": [
          "parentalcontrol:ipspacediscriminator"
        ]
      }, 
      "get": {
        "security": [
          {
            "basicAuth": []
          }
        ], 
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/parentalcontrol_ipspacediscriminator"
                }
              }
            }, 
            "description": "OK"
          }
        }, 
        "parameters": [
          {
            "schema": {
              "type": "string", 
              "example": "resourceID:resourceName"
            }, 
            "description": "Enter the reference for parentalcontrol:ipspacediscriminator", 
            "required": true, 
            "name": "parentalcontrol:ipspacediscriminator_reference", 
            "in": "path"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma", 
            "required": false, 
            "name": "_return_fields", 
            "in": "query"
          }, 
          {
            "schema": {
              "type": "string"
            }, 
            "description": "Enter the field names followed by comma, this returns the required fields along with the default fields", 
            "required": false, 
            "name": "_return_fields+", 
            "in": "query"
          }, 
          {
            "schema": {
              "default": 0, 
              "enum": [
                0, 
                1
              ], 
              "type": "integer"
            }, 
            "description": "Select 1 if result is required as a object", 
            "required": false, 
            "name": "_return_as_object", 
            "in": "query"
          }
        ], 
        "tags": [
          "parentalcontrol:ipspacediscriminator"
        ]
      }
    }
  }, 
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic", 
        "type": "http"
      }
    }, 
    "schemas": {
      "parentalcontrol_subscribersite": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The human readable comment for the site."
          }, 
          "blocking_ipv4_vip1": {
            "type": "string", 
            "description": "The IPv4 Address of the blocking server."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of the site."
          }, 
          "blocking_ipv4_vip2": {
            "type": "string", 
            "description": "The IPv4 Address of the blocking server."
          }, 
          "maximum_subscribers": {
            "type": "integer", 
            "example": "integer", 
            "description": "The max number of subscribers for the site. It is used to configure the cache size."
          }, 
          "msps": {
            "enum": [
              "parentalcontrol:msp"
            ], 
            "type": "string", 
            "description": "The list of MSP for the site."
          }, 
          "nas_port": {
            "type": "integer", 
            "example": "integer", 
            "description": "The port number to reach the collector."
          }, 
          "spms": {
            "enum": [
              "parentalcontrol:spm"
            ], 
            "type": "string", 
            "description": "The list of SPM for the site."
          }, 
          "members": {
            "enum": [
              "parentalcontrol:sitemember"
            ], 
            "type": "string", 
            "description": "The list of members for the site."
          }, 
          "extattrs": {
            "enum": [
              "extattr"
            ], 
            "type": "string", 
            "description": "Extensible attributes associated with the object. For valid values for extensible attributes, see {extattrs:values}."
          }, 
          "nas_gateways": {
            "enum": [
              "parentalcontrol:nasgateway"
            ], 
            "type": "string", 
            "description": "The list of accounting log servers."
          }, 
          "blocking_ipv6_vip2": {
            "type": "string", 
            "description": "The IPv6 Address of the blocking server."
          }, 
          "blocking_ipv6_vip1": {
            "type": "string", 
            "description": "The IPv6 Address of the blocking server."
          }
        }
      }, 
      "parentalcontrol_avp": {
        "type": "object", 
        "properties": {
          "comment": {
            "type": "string", 
            "description": "The comment for the AVP."
          }, 
          "name": {
            "type": "string", 
            "description": "The name of AVP."
          }, 
          "vendor_id": {
            "type": "integer", 
            "example": "integer", 
            "description": "The vendor ID as per RFC 2865/2866."
          }, 
          "domain_types": {
            "enum": [
              "SUBS_ID", 
              "ANCILLARY", 
              "NAS_CONTEXT", 
              "IP_SPACE_DIS"
            ], 
            "type": "string", 
            "description": "The list of domains applicable to AVP."
          }, 
          "user_defined": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if AVP was defined by user."
          }, 
          "value_type": {
            "enum": [
              "IPV6ADDR", 
              "STRING", 
              "DATE", 
              "INTEGER", 
              "BYTE", 
              "IPV6IFID", 
              "IPADDR", 
              "SHORT", 
              "IPV6PREFIX", 
              "OCTETS", 
              "INTEGER64"
            ], 
            "type": "string", 
            "description": "The type of value."
          }, 
          "is_restricted": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if AVP is restricted to domains."
          }, 
          "vendor_type": {
            "type": "integer", 
            "example": "integer", 
            "description": "The vendor type as per RFC 2865/2866."
          }, 
          "type": {
            "type": "integer", 
            "example": "integer", 
            "description": "The type of AVP as per RFC 2865/2866."
          }
        }
      }, 
      "parentalcontrol_ipspacediscriminator": {
        "type": "object", 
        "properties": {
          "name": {
            "type": "string", 
            "description": "The name of the IP space discriminator."
          }, 
          "value": {
            "type": "string", 
            "description": "The value of the IP space discriminator."
          }
        }
      }, 
      "parentalcontrol_subscriber": {
        "type": "object", 
        "properties": {
          "nas_context_info": {
            "type": "string", 
            "description": "NAS contextual information AVP."
          }, 
          "cat_acctname": {
            "type": "string", 
            "description": "Category content account name using the categorization service."
          }, 
          "ip_space_disc_regexp": {
            "type": "string", 
            "description": "A character string to control aspects of rewriting of the fields."
          }, 
          "subscriber_id_regexp": {
            "type": "string", 
            "description": "A character string to control aspects of rewriting of the fields."
          }, 
          "cat_update_frequency": {
            "type": "integer", 
            "example": "integer", 
            "description": "Category content updates every number of hours."
          }, 
          "ancillaries": {
            "type": "string", 
            "description": "The list of ordered AVP Ancillary Fields."
          }, 
          "ident": {
            "type": "string", 
            "description": "Category content authorization string per customer for remote RD lookup and category access."
          }, 
          "ip_space_discriminator": {
            "type": "string", 
            "description": "The name of AVP to be used as IP address discriminator."
          }, 
          "ip_anchors": {
            "type": "string", 
            "description": "The ordered list of IP Anchors AVPs. The list content cannot be changed, but the order of elements."
          }, 
          "enable_mgmt_only_nas": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if NAS RADIUS traffic is accepted over MGMT only."
          }, 
          "category_url": {
            "type": "string", 
            "description": "Category content vendor url to download category data from and upload feedback to, configure for parental control."
          }, 
          "subscriber_id_subexpression": {
            "type": "integer", 
            "example": "integer", 
            "description": "The subexpression indicates which subexpression to extract. If zero, then the text matching the entire regular expression is extracted. If non-zero, then the regex must contain at least that many sub-expression groups. It takes values from 0 to 8."
          }, 
          "cat_password": {
            "type": "string", 
            "description": "Category content account password to access the categorization service."
          }, 
          "subscriber_id": {
            "type": "string", 
            "description": "The name of AVP to be used as a subscriber."
          }, 
          "interim_accounting_interval": {
            "type": "integer", 
            "example": "integer", 
            "description": "The time for collector to be fully populated. Valid values are from 1 to 65535."
          }, 
          "pc_zone_name": {
            "type": "string", 
            "description": "The SOA to store parental control records."
          }, 
          "ip_space_disc_subexpression": {
            "type": "integer", 
            "example": "integer", 
            "description": "The subexpression indicates which subexpression to extract. If zero, then the text matching the entire regular expression is extracted. If non-zero, then the regex must contain at least that many sub-expression groups. It takes values from 0 to 8."
          }, 
          "enable_parental_control": {
            "type": "boolean", 
            "example": "boolean", 
            "description": "Determines if parental control is enabled."
          }
        }
      }
    }
  }, 
  "openapi": "3.0.0"
}